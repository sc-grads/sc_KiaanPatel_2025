<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/4/2025 1:40:56 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SAMBE202507"
  DTS:CreatorName="SAMBE202507\Kiaan Patel"
  DTS:DTSID="{DCE11EE0-482E-4791-B776-1747B80DF9D7}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="7177"
  DTS:ObjectName="ForEachLoop"
  DTS:PackageType="5"
  DTS:VersionBuild="227"
  DTS:VersionGUID="{CD93A862-A27E-469D-B4C6-60D82D51476D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{BCB402C4-3792-45FD-96FE-B6F7DB857D0B}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::FilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=&quot;C:\Users\Kiaan Patel\OneDrive - Northern Data (Pty) Ltd\Documents\CodeCrusaders_TimeSheets\Kiaan Patel\Kiaan_Patel March Final.xlsx&quot;;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[GetClientName]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{F7C4AA2A-F2FA-41B9-B995-5D3F3996FE04}"
      DTS:ObjectName="GetClientName">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\Kiaan Patel\OneDrive - Northern Data (Pty) Ltd\Documents\ProjectKey.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[GetEmployeeName]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{874E7E59-1DD3-4628-9E3A-1F01B894C002}"
      DTS:ObjectName="GetEmployeeName">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Users\Kiaan Patel\OneDrive - Northern Data (Pty) Ltd\Documents\EmployeeName.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LeaveFormExcel]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{F2AEA224-3F99-4999-81EB-16BF35160280}"
      DTS:ObjectName="LeaveFormExcel">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::FilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=&quot;C:\Users\Kiaan Patel\OneDrive - Northern Data (Pty) Ltd\Documents\CodeCrusaders_TimeSheets\Kiaan Patel\Kiaan_Patel March Final.xlsx&quot;;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B8EB1F1B-75C0-45BA-B420-434A64DAB86A}"
      DTS:ObjectName="LocalHost.TimesheetDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-TestingInsert-{B8EB1F1B-75C0-45BA-B420-434A64DAB86A}LocalHost.TimesheetDB;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D80597F7-12FB-4AFF-8D33-0F049B067B1D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmployeeName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{73568DB7-D5A8-4F7F-AF93-1C27905A52AA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">"C:\Users\Kiaan Patel\OneDrive - Northern Data (Pty) Ltd\Documents\CodeCrusaders_TimeSheets\Kiaan Patel\Kiaan_Patel March Final.xlsx"</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{82DF8D58-6FAC-4DD9-927F-C1E7B22F4294}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableName">
      <DTS:VariableValue
        DTS:DataType="8">Timesheet</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3FEF21B8-E862-4CB4-99CE-4787F9B4A062}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableNameLeave">
      <DTS:VariableValue
        DTS:DataType="8">Leave</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\AuditLog Data Input"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{D7C83896-A496-4DAA-A1D0-1BB648EC6739}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="AuditLog Data Input"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\AuditLog Data Input\Fuzzy Lookup"
              componentClassID="Microsoft.FuzzyLookup"
              contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
              description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
              name="Fuzzy Lookup"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                  name="MatchIndexOptions"
                  typeConverter="tcMatchIndexOptions">1</property>
                <property
                  dataType="System.Null"
                  description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                  expressionType="Notify"
                  name="MaxMemoryUsage" />
                <property
                  dataType="System.Null"
                  description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                  name="MatchIndexName"
                  state="escaped" />
                <property
                  dataType="System.String"
                  description="Specifies the name of the reference table or view against which to match incoming records."
                  name="ReferenceTableName"
                  state="escaped">_x005B_dbo_x005D_._x005B_Employee_x005D_</property>
                <property
                  dataType="System.Int32"
                  description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                  name="DropExistingMatchIndex">1</property>
                <property
                  dataType="System.Int32"
                  description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                  name="CopyReferenceTable">1</property>
                <property
                  dataType="System.UInt32"
                  description="Specifies the maximum number of fuzzy matches to return for an input record."
                  name="MaxOutputMatchesPerInput">1</property>
                <property
                  dataType="System.Single"
                  description="Specifies the minimum similarity score required for the match results that the transformation returns."
                  name="MinSimilarity">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                  name="Delimiters"
                  state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                <property
                  dataType="System.String"
                  description="Specifies the metadata of the reference table in XML format."
                  name="ReferenceMetadataXml"
                  state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_EmployeeID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_EmployeeName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                <property
                  dataType="System.Boolean"
                  description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                  name="Exhaustive">false</property>
                <property
                  dataType="System.Boolean"
                  description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                  name="WarmCaches">true</property>
              </properties>
              <connections>
                <connection
                  refId="Package\AuditLog Data Input\Fuzzy Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\AuditLog Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                  name="Fuzzy Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[LogID]"
                      cachedDataType="i4"
                      cachedName="LogID"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[LogID]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[TableName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TableName"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[TableName]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Timestamp]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[EmployeeID]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="EmployeeID"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped">EmployeeName</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[UserName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="UserName"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[UserName]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Details]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Details"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Details]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output]"
                  name="Fuzzy Lookup Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[LogID]"
                      dataType="i4"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[LogID]"
                      name="LogID">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[LogID]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[TableName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[TableName]"
                      name="TableName">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[TableName]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Timestamp]"
                      name="Timestamp">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Timestamp]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeID]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeID]"
                      name="EmployeeID">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeID]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[UserName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[UserName]"
                      name="UserName">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[UserName]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Details]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Details]"
                      name="Details">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Details]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]"
                      dataType="i4"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]"
                      name="EmployeeID_LookUp">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped">EmployeeID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                      dataType="r4"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                      name="_Similarity">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                      dataType="r4"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                      name="_Confidence">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">2</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeID]"
                      dataType="r4"
                      description="Column-level similarity score for fuzzy join on column &quot;EmployeeID&quot;."
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeID]"
                      name="_Similarity_EmployeeID">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeID]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">3</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\AuditLog Data Input\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[AuditLog]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[AuditLog]) [refTable]
where [refTable].[LogID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="LogID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TableName" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Timestamp" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EmployeeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="UserName" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Details" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[LogID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\AuditLog Data Input\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\AuditLog Data Input\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\AuditLog Data Input\Lookup.Inputs[Lookup Input].Columns[LogID]"
                      cachedDataType="i4"
                      cachedName="LogID"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[LogID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">LogID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\AuditLog Data Input\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\AuditLog Data Input\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Lookup.Outputs[Lookup Match Output].Columns[LogID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\AuditLog Data Input\Lookup.Outputs[Lookup Match Output].Columns[LogID]"
                      name="LogID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">LogID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Lookup.Outputs[Lookup Match Output].Columns[EmployeeID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\AuditLog Data Input\Lookup.Outputs[Lookup Match Output].Columns[EmployeeID]"
                      name="EmployeeID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">EmployeeID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Lookup.Outputs[Lookup Match Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\AuditLog Data Input\Lookup.Outputs[Lookup Match Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Timestamp</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\AuditLog Data Input\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\AuditLog Data Input\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\AuditLog Data Input\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\AuditLog Data Input\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\AuditLog Data Input\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\AuditLog Data Input\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\AuditLog Data Input\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\AuditLog Data Input\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[AuditLog]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\AuditLog Data Input\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TableName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TableName"
                      externalMetadataColumnId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TableName]"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[TableName]" />
                    <inputColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Timestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Timestamp"
                      externalMetadataColumnId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Timestamp]" />
                    <inputColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[UserName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="UserName"
                      externalMetadataColumnId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserName]"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[UserName]" />
                    <inputColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Details]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Details"
                      externalMetadataColumnId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Details]"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Details]" />
                    <inputColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeID_LookUp]"
                      cachedDataType="i4"
                      cachedName="EmployeeID_LookUp"
                      externalMetadataColumnId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      lineageId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LogID]"
                      dataType="i4"
                      name="LogID" />
                    <externalMetadataColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TableName]"
                      dataType="wstr"
                      length="50"
                      name="TableName" />
                    <externalMetadataColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      dataType="dbTimeStamp"
                      name="Timestamp" />
                    <externalMetadataColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserName]"
                      dataType="wstr"
                      length="50"
                      name="UserName" />
                    <externalMetadataColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Details]"
                      dataType="wstr"
                      length="255"
                      name="Details" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\AuditLog Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\AuditLog Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\AuditLog Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\AuditLog Data Input\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[AuditLog_Staging]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\AuditLog Data Input\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[LogID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LogID]"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[LogID]"
                      name="LogID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[TableName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TableName]"
                      length="50"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[TableName]"
                      name="TableName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Timestamp]"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Timestamp]"
                      name="Timestamp"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EmployeeID]"
                      length="100"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeID]"
                      name="EmployeeID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[UserName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[UserName]"
                      length="50"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[UserName]"
                      name="UserName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Details]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Details]"
                      length="255"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Details]"
                      name="Details"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LogID]"
                      dataType="i4"
                      name="LogID" />
                    <externalMetadataColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TableName]"
                      dataType="wstr"
                      length="50"
                      name="TableName" />
                    <externalMetadataColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Timestamp]"
                      dataType="dbTimeStamp"
                      name="Timestamp" />
                    <externalMetadataColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EmployeeID]"
                      dataType="wstr"
                      length="100"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[UserName]"
                      dataType="wstr"
                      length="50"
                      name="UserName" />
                    <externalMetadataColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Details]"
                      dataType="wstr"
                      length="255"
                      name="Details" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LogID]"
                      dataType="i4"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LogID]"
                      name="LogID" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TableName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TableName]"
                      name="TableName" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Timestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Timestamp]"
                      name="Timestamp" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EmployeeID]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EmployeeID]"
                      name="EmployeeID" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[UserName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[UserName]"
                      name="UserName" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Details]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Details]"
                      name="Details" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\AuditLog Data Input.Paths[Fuzzy Lookup Output]"
              endId="Package\AuditLog Data Input\Lookup.Inputs[Lookup Input]"
              name="Fuzzy Lookup Output"
              startId="Package\AuditLog Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output]" />
            <path
              refId="Package\AuditLog Data Input.Paths[Lookup No Match Output]"
              endId="Package\AuditLog Data Input\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\AuditLog Data Input\Lookup.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\AuditLog Data Input.Paths[OLE DB Source Output]"
              endId="Package\AuditLog Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
              name="OLE DB Source Output"
              startId="Package\AuditLog Data Input\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Leave Table Data Input"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{1AE47A9D-4C9E-4C24-8A14-04C6760C6C32}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Leave Table Data Input"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Leave Table Data Input\Fuzzy Lookup"
              componentClassID="Microsoft.FuzzyLookup"
              contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
              description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
              name="Fuzzy Lookup"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                  name="MatchIndexOptions"
                  typeConverter="tcMatchIndexOptions">1</property>
                <property
                  dataType="System.Null"
                  description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                  expressionType="Notify"
                  name="MaxMemoryUsage" />
                <property
                  dataType="System.Null"
                  description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                  name="MatchIndexName"
                  state="escaped" />
                <property
                  dataType="System.String"
                  description="Specifies the name of the reference table or view against which to match incoming records."
                  name="ReferenceTableName"
                  state="escaped">_x005B_dbo_x005D_._x005B_Employee_x005D_</property>
                <property
                  dataType="System.Int32"
                  description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                  name="DropExistingMatchIndex">1</property>
                <property
                  dataType="System.Int32"
                  description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                  name="CopyReferenceTable">1</property>
                <property
                  dataType="System.UInt32"
                  description="Specifies the maximum number of fuzzy matches to return for an input record."
                  name="MaxOutputMatchesPerInput">1</property>
                <property
                  dataType="System.Single"
                  description="Specifies the minimum similarity score required for the match results that the transformation returns."
                  name="MinSimilarity">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                  name="Delimiters"
                  state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                <property
                  dataType="System.String"
                  description="Specifies the metadata of the reference table in XML format."
                  name="ReferenceMetadataXml"
                  state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_EmployeeID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_EmployeeName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                <property
                  dataType="System.Boolean"
                  description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                  name="Exhaustive">false</property>
                <property
                  dataType="System.Boolean"
                  description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                  name="WarmCaches">true</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Leave Table Data Input\Fuzzy Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Leave Table Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                  name="Fuzzy Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[LeaveID]"
                      cachedDataType="i4"
                      cachedName="LeaveID"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[LeaveID]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">1</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[TypeOfLeave]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TypeOfLeave"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[TypeOfLeave]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[StartDate]"
                      cachedDataType="dbDate"
                      cachedName="StartDate"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[StartDate]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">1</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[EndDate]"
                      cachedDataType="dbDate"
                      cachedName="EndDate"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EndDate]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">1</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[NumberOfDays]"
                      cachedDataType="i4"
                      cachedName="NumberOfDays"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[NumberOfDays]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">1</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[ApprovalObtained]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="ApprovalObtained"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[ApprovalObtained]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[SickNote]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="SickNote"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[SickNote]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[EmployeeName]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="EmployeeName"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeName]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped">EmployeeName</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output]"
                  name="Fuzzy Lookup Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[LeaveID]"
                      dataType="i4"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[LeaveID]"
                      name="LeaveID">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[LeaveID]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeName]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeName]"
                      name="EmployeeName">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeName]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[TypeOfLeave]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[TypeOfLeave]"
                      name="TypeOfLeave">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[TypeOfLeave]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[StartDate]"
                      dataType="dbDate"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[StartDate]"
                      name="StartDate">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[StartDate]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EndDate]"
                      dataType="dbDate"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EndDate]"
                      name="EndDate">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EndDate]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[NumberOfDays]"
                      dataType="i4"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[NumberOfDays]"
                      name="NumberOfDays">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[NumberOfDays]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ApprovalObtained]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ApprovalObtained]"
                      name="ApprovalObtained">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[ApprovalObtained]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[SickNote]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[SickNote]"
                      name="SickNote">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[SickNote]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]"
                      dataType="i4"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]"
                      name="EmployeeID_LookUp">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped">EmployeeID</property>
                        <property
                          containsID="true"
                          dataType="System.Null"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                      dataType="r4"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                      name="_Similarity">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                      dataType="r4"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                      name="_Confidence">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">2</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeName]"
                      dataType="r4"
                      description="Column-level similarity score for fuzzy join on column &quot;EmployeeName&quot;."
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeName]"
                      name="_Similarity_EmployeeName">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeName]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">3</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Leave Table Data Input\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Leave]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Leave]) [refTable]
where [refTable].[LeaveID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="LeaveID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EmployeeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TypeOfLeave" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StartDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EndDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="NumberOfDays" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ApprovalObtained" dataType="DT_WSTR" length="3" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SickNote" dataType="DT_WSTR" length="3" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[LeaveID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Leave Table Data Input\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Leave Table Data Input\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Leave Table Data Input\Lookup.Inputs[Lookup Input].Columns[LeaveID]"
                      cachedDataType="i4"
                      cachedName="LeaveID"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[LeaveID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">LeaveID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Leave Table Data Input\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[LeaveID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[LeaveID]"
                      name="LeaveID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">LeaveID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[EmployeeID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[EmployeeID]"
                      name="EmployeeID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">EmployeeID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[StartDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[StartDate]"
                      name="StartDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">StartDate</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[EndDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[EndDate]"
                      name="EndDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">EndDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Leave Table Data Input\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Leave Table Data Input\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Leave Table Data Input\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Leave Table Data Input\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Leave Table Data Input\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Leave]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Leave Table Data Input\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TypeOfLeave]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TypeOfLeave"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TypeOfLeave]"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[TypeOfLeave]" />
                    <inputColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StartDate]"
                      cachedDataType="dbDate"
                      cachedName="StartDate"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[StartDate]" />
                    <inputColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EndDate]"
                      cachedDataType="dbDate"
                      cachedName="EndDate"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EndDate]" />
                    <inputColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[NumberOfDays]"
                      cachedDataType="i4"
                      cachedName="NumberOfDays"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[NumberOfDays]" />
                    <inputColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ApprovalObtained]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="ApprovalObtained"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ApprovalObtained]" />
                    <inputColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SickNote]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="SickNote"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[SickNote]" />
                    <inputColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeID_LookUp]"
                      cachedDataType="i4"
                      cachedName="EmployeeID_LookUp"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      lineageId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveID]"
                      dataType="i4"
                      name="LeaveID" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TypeOfLeave]"
                      dataType="wstr"
                      length="50"
                      name="TypeOfLeave" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                      dataType="dbDate"
                      name="StartDate" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                      dataType="dbDate"
                      name="EndDate" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                      dataType="i4"
                      name="NumberOfDays" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                      dataType="wstr"
                      length="3"
                      name="ApprovalObtained" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                      dataType="wstr"
                      length="3"
                      name="SickNote" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Leave Table Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Leave Table Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Leave Table Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Leave Table Data Input\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Leave_Staging]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Leave Table Data Input\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[LeaveID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LeaveID]"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[LeaveID]"
                      name="LeaveID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EmployeeName]"
                      length="100"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeName]"
                      name="EmployeeName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[TypeOfLeave]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TypeOfLeave]"
                      length="50"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[TypeOfLeave]"
                      name="TypeOfLeave"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[StartDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StartDate]"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[StartDate]"
                      name="StartDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EndDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EndDate]"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EndDate]"
                      name="EndDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[NumberOfDays]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[NumberOfDays]"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[NumberOfDays]"
                      name="NumberOfDays"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[ApprovalObtained]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ApprovalObtained]"
                      length="3"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[ApprovalObtained]"
                      name="ApprovalObtained"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[SickNote]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SickNote]"
                      length="3"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[SickNote]"
                      name="SickNote"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LeaveID]"
                      dataType="i4"
                      name="LeaveID" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EmployeeName]"
                      dataType="wstr"
                      length="100"
                      name="EmployeeName" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TypeOfLeave]"
                      dataType="wstr"
                      length="50"
                      name="TypeOfLeave" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StartDate]"
                      dataType="dbDate"
                      name="StartDate" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EndDate]"
                      dataType="dbDate"
                      name="EndDate" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[NumberOfDays]"
                      dataType="i4"
                      name="NumberOfDays" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ApprovalObtained]"
                      dataType="wstr"
                      length="3"
                      name="ApprovalObtained" />
                    <externalMetadataColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SickNote]"
                      dataType="wstr"
                      length="3"
                      name="SickNote" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LeaveID]"
                      dataType="i4"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LeaveID]"
                      name="LeaveID" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EmployeeName]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EmployeeName]"
                      name="EmployeeName" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TypeOfLeave]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TypeOfLeave]"
                      name="TypeOfLeave" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StartDate]"
                      dataType="dbDate"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StartDate]"
                      name="StartDate" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EndDate]"
                      dataType="dbDate"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EndDate]"
                      name="EndDate" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[NumberOfDays]"
                      dataType="i4"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[NumberOfDays]"
                      name="NumberOfDays" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ApprovalObtained]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ApprovalObtained]"
                      name="ApprovalObtained" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SickNote]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SickNote]"
                      name="SickNote" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Leave Table Data Input.Paths[Fuzzy Lookup Output]"
              endId="Package\Leave Table Data Input\Lookup.Inputs[Lookup Input]"
              name="Fuzzy Lookup Output"
              startId="Package\Leave Table Data Input\Fuzzy Lookup.Outputs[Fuzzy Lookup Output]" />
            <path
              refId="Package\Leave Table Data Input.Paths[Lookup No Match Output]"
              endId="Package\Leave Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Leave Table Data Input\Lookup.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Leave Table Data Input.Paths[OLE DB Source Output]"
              endId="Package\Leave Table Data Input\Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
              name="OLE DB Source Output"
              startId="Package\Leave Table Data Input\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Leave_Staging Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:Disabled="True"
      DTS:DTSID="{4888f531-c199-4013-81e7-0c23828570a3}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Leave_Staging Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{3a81f7aa-5af5-49db-8c5c-ef2bb359909a}"
        DTS:ObjectName="{37E8AAB2-CB58-4B7F-BDE3-BD2275840F00}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\Kiaan Patel\OneDrive - Northern Data (Pty) Ltd\Documents\CodeCrusaders_TimeSheets" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Leave_Staging Container\ExcelToLeaveTable"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{69dc46f1-b1ba-41c6-95c4-8594e006fa26}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="ExcelToLeaveTable"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate"
                  componentClassID="Microsoft.Aggregate"
                  contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
                  name="Aggregate"
                  version="3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                      name="CountDistinctScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                      name="CountDistinctKeys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                      name="AutoExtendFactor">25</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Inputs[Aggregate Input 1]"
                      name="Aggregate Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Inputs[Aggregate Input 1].Columns[Derived Leave Table Name]"
                          cachedDataType="wstr"
                          cachedLength="5"
                          cachedName="Derived Leave Table Name"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Leave Table Name]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Inputs[Aggregate Input 1].Columns[Derived EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived EmployeeName"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived EmployeeName]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Inputs[Aggregate Input 1].Columns[Timestamp]"
                          cachedDataType="date"
                          cachedName="Timestamp"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1].Columns[Timestamp]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Inputs[Aggregate Input 1].Columns[User name]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="User name"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1].Columns[User name]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Inputs[Aggregate Input 1].Columns[Derived Details]"
                          cachedDataType="wstr"
                          cachedLength="300"
                          cachedName="Derived Details"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1]"
                      name="Aggregate Output 1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                          name="KeyScale"
                          typeConverter="KeyScaleType">0</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                          name="Keys" />
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Leave Table Name]"
                          dataType="wstr"
                          length="5"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Leave Table Name]"
                          name="Derived Leave Table Name">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Leave Table Name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived EmployeeName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived EmployeeName]"
                          name="Derived EmployeeName">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived EmployeeName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[Timestamp]"
                          dataType="date"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[Timestamp]"
                          name="Timestamp">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1].Columns[Timestamp]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[User name]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[User name]"
                          name="User name">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1].Columns[User name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Details]"
                          dataType="wstr"
                          length="300"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Details]"
                          name="Derived Details">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit"
                  componentClassID="Microsoft.Lineage"
                  contactInfo="Audit;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Includes data about the environment in which the package runs. Map system variables to new output columns. For example, add the name of the computer and operator to the data flow."
                  name="Audit">
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Inputs[Audit Input 1]"
                      name="Audit Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1]"
                      exclusionGroup="1"
                      name="Audit Output 1"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Inputs[Audit Input 1]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1].Columns[Timestamp]"
                          dataType="date"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1].Columns[Timestamp]"
                          name="Timestamp">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies which audit item this column produces."
                              name="LineageItemSelected"
                              typeConverter="LineageItemSelected">4</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1].Columns[User name]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1].Columns[User name]"
                          name="User name">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies which audit item this column produces."
                              name="LineageItemSelected"
                              typeConverter="LineageItemSelected">6</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1].Columns[Details]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1].Columns[Details]"
                          name="Details">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies which audit item this column produces."
                              name="LineageItemSelected"
                              typeConverter="LineageItemSelected">7</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Type of Leave"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of Start Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Start Date"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of End Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of End Date"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of Number of days]"
                          cachedDataType="i4"
                          cachedName="Copy of Number of days"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Inputs[Conditional Split Input].Columns[Derived EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived EmployeeName"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived EmployeeName]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Outputs[isNull]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="isNull"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]}) || [ISNULL](#{Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]}) || [ISNULL](#{Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]}) || [ISNULL](#{Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]}) || [ISNULL](#{Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived EmployeeName]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL([Copy of Type of Leave]) || ISNULL([Copy of Start Date]) || ISNULL([Copy of End Date]) || ISNULL([Copy of Number of days]) || ISNULL([Derived EmployeeName])</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Inputs[Data Conversion Input].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Inputs[Data Conversion Input].Columns[Start Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Start Date"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Start Date]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Inputs[Data Conversion Input].Columns[End Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="End Date"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[End Date]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Inputs[Data Conversion Input].Columns[Number of days ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Number of days "
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Inputs[Data Conversion Input].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Inputs[Data Conversion Input].Columns[Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Sick Note"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]"
                          name="Copy of Type of Leave"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]"
                          name="Copy of Start Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Start Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]"
                          name="Copy of End Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[End Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]"
                          name="Copy of Number of days"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="3"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]"
                          name="Copy of Approval Obtained"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="3"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]"
                          name="Copy of Sick Note"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Inputs[Derived Column Input].Columns[Details]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="Details"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1].Columns[Details]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived EmployeeName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived EmployeeName]"
                          name="Derived EmployeeName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::EmployeeName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::EmployeeName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Leave Table Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="5"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Leave Table Name]"
                          name="Derived Leave Table Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::TableNameLeave]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::TableNameLeave]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="300"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]"
                          name="Derived Details"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Task: " + #{Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1].Columns[Details]} + "; " + "File Path: " + @[User::FilePath]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Task: " + Details + "; " + "File Path: " + @[User::FilePath]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Outputs[Derived Column Output].Columns[Derived File PAth]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="133"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Outputs[Derived Column Output].Columns[Derived File PAth]"
                          name="Derived File PAth"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::FilePath]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::FilePath]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Leave1</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LeaveFormExcel]"
                      connectionManagerRefId="Package.ConnectionManagers[LeaveFormExcel]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                          name="Type of Leave"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                          name="Start Date"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          name="End Date"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                          name="Number of days "
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                          name="Approval Obtained"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                          name="Sick Note"
                          truncationRowDisposition="RedirectRow" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          name="Type of Leave" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                          dataType="wstr"
                          length="255"
                          name="Start Date" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          dataType="wstr"
                          length="255"
                          name="End Date" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                          dataType="wstr"
                          length="255"
                          name="Number of days " />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          name="Approval Obtained" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          name="Sick Note" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                          name="Type of Leave" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                          name="Start Date" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          name="End Date" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                          name="Number of days " />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                          name="Approval Obtained" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                          name="Sick Note" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Leave_Staging]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Leave_Staging]) [refTable]
where [refTable].[TypeOfLeave] = ? and [refTable].[StartDate] = ? and [refTable].[EndDate] = ? and [refTable].[NumberOfDays] = ? and [refTable].[ApprovalObtained] = ? and [refTable].[SickNote] = ? and [refTable].[EmployeeName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="LeaveID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EmployeeName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TypeOfLeave" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StartDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EndDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="NumberOfDays" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ApprovalObtained" dataType="DT_WSTR" length="3" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SickNote" dataType="DT_WSTR" length="3" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]};#{Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]};#{Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]};#{Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]};#{Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]};#{Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]};#{Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived EmployeeName]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Inputs[Lookup Input].Columns[Copy of Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="3"
                          cachedName="Copy of Sick Note"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">SickNote</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Inputs[Lookup Input].Columns[Copy of Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="3"
                          cachedName="Copy of Approval Obtained"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ApprovalObtained</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Inputs[Lookup Input].Columns[Copy of Number of days]"
                          cachedDataType="i4"
                          cachedName="Copy of Number of days"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">NumberOfDays</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Inputs[Lookup Input].Columns[Derived EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived EmployeeName"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived EmployeeName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">EmployeeName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Inputs[Lookup Input].Columns[Copy of Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Type of Leave"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">TypeOfLeave</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Inputs[Lookup Input].Columns[Copy of Start Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Start Date"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">StartDate</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Inputs[Lookup Input].Columns[Copy of End Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of End Date"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">EndDate</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Match Output].Columns[EmployeeName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="100"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Match Output].Columns[EmployeeName]"
                          name="EmployeeName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">EmployeeName</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Match Output].Columns[TypeOfLeave]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="50"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Match Output].Columns[TypeOfLeave]"
                          name="TypeOfLeave"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">TypeOfLeave</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Match Output].Columns[StartDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Match Output].Columns[StartDate]"
                          name="StartDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">StartDate</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Match Output].Columns[EndDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Match Output].Columns[EndDate]"
                          name="EndDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">EndDate</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Multicast.Outputs[Multicast Output 3]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Leave_Staging]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Derived EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived EmployeeName"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeName]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output].Columns[Derived EmployeeName]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Type of Leave"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TypeOfLeave]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type of Leave]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="3"
                          cachedName="Copy of Sick Note"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sick Note]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Start Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Start Date"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of End Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of End Date"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Number of days]"
                          cachedDataType="i4"
                          cachedName="Copy of Number of days"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Number of days]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="3"
                          cachedName="Copy of Approval Obtained"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Approval Obtained]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveID]"
                          dataType="i4"
                          name="LeaveID" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeName]"
                          dataType="wstr"
                          length="100"
                          name="EmployeeName" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TypeOfLeave]"
                          dataType="wstr"
                          length="50"
                          name="TypeOfLeave" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          dataType="dbDate"
                          name="StartDate" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          dataType="dbDate"
                          name="EndDate" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          dataType="i4"
                          name="NumberOfDays" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          dataType="wstr"
                          length="3"
                          name="ApprovalObtained" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                          dataType="wstr"
                          length="3"
                          name="SickNote" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[AuditLog_Staging]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Timestamp]"
                          cachedDataType="date"
                          cachedName="Timestamp"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[Timestamp]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[User name]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="User name"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[UserName]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[User name]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Derived Leave Table Name]"
                          cachedDataType="wstr"
                          cachedLength="5"
                          cachedName="Derived Leave Table Name"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[TableName]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Leave Table Name]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Derived Details]"
                          cachedDataType="wstr"
                          cachedLength="300"
                          cachedName="Derived Details"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Details]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Details]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Derived EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived EmployeeName"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived EmployeeName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[LogID]"
                          dataType="i4"
                          name="LogID" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[TableName]"
                          dataType="wstr"
                          length="50"
                          name="TableName" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                          dataType="dbTimeStamp"
                          name="Timestamp" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[UserName]"
                          dataType="wstr"
                          length="50"
                          name="UserName" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Details]"
                          dataType="wstr"
                          length="255"
                          name="Details" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          dataType="wstr"
                          length="100"
                          name="EmployeeID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 2"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorLog]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[ErrorMessage]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="ErrorMessage"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorMessage]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Script Component.Outputs[Output 0].Columns[ErrorMessage]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[Derived File PAth]"
                          cachedDataType="wstr"
                          cachedLength="133"
                          cachedName="Derived File PAth"
                          externalMetadataColumnId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[FilePath]"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Outputs[Derived Column Output].Columns[Derived File PAth]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorID]"
                          dataType="i4"
                          name="ErrorID" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[FilePath]"
                          dataType="wstr"
                          length="255"
                          name="FilePath" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorMessage]"
                          dataType="wstr"
                          length="4000"
                          name="ErrorMessage" />
                        <externalMetadataColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                          dataType="dbTimeStamp"
                          name="Timestamp" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if (Row.ErrorCode != 0) // Check if an error occurred
        {
            string errorMessage = Row.ErrorCode.ToString() + " - " + ComponentMetaData.GetErrorDescription(Row.ErrorCode);
            Row.ErrorMessage = errorMessage;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String ErrorMessage
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ErrorMessage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5fc5de371f324c3392a8e3b4f892ea18.Properties.Settings.get_Default():SC_5fc5de371f324c3392a8e3b4f892ea18.Properties.Sett" +
    "ings")]

namespace SC_5fc5de371f324c3392a8e3b4f892ea18.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_5fc5de371f324c3392a8e3b4f892ea18.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5b0fd612-b3ee-48c6-9052-e9ac11b479f5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_5fc5de371f324c3392a8e3b4f892ea18</RootNamespace>
    <AssemblyName>SC_5fc5de371f324c3392a8e3b4f892ea18</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_5fc5de371f324c3392a8e3b4f892ea18" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_5fc5de371f324c3392a8e3b4f892ea18</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_5fc5de371f324c3392a8e3b4f892ea18</msb:DisplayName>
    <msb:ProjectId>{7F2499CA-3A55-465A-86C1-999851C08004}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_5fc5de371f324c3392a8e3b4f892ea18.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_5fc5de371f324c3392a8e3b4f892ea18")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_5fc5de371f324c3392a8e3b4f892ea18")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5fc5de371f324c3392a8e3b4f892ea18.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5fc5de371f324c3392a8e3b4f892ea18.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5fc5de371f324c3392a8e3b4f892ea18.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_5fc5de371f324c3392a8e3b4f892ea18.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_5fc5de371f324c3392a8e3b4f892ea18.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_5fc5de371f324c3392a8e3b4f892ea18.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHolSGgAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAVjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAQzAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAXBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA4
MwAAAAAAAEgAAAACAAUA/CEAAFAQAAABAAAAAAAAAEwyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQAOgAAAAEAABEDbwYAAAYs
MQNvBgAABgsSASgSAAAKcgEAAHACKBMAAAoDbwYAAAZvFAAACigVAAAKCgMGbwoAAAYqHgIoDgAA
BioqAgMEBSgWAAAKKlICexcAAAoCexgAAAoWlG8ZAAAKKiICFigaAAAKKlICexcAAAoCexgAAAoX
lG8ZAAAKKiICFygaAAAKKiYCGAMoGwAACipaAywIAhgoHAAACipyCQAAcHMdAAAKeh4CKB4AAAoq
HgIoHwAACip+AiggAAAKAgJzEgAABn0BAAAEAgJzEwAABn0CAAAEKpIEcqYAAHAabyEAAAosFQIF
AgMoIgAACg4EcwUAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6AigjAAAKAgN9AwAABCo6
AigjAAAKAgN9BAAABCoeAigjAAAKKq5+BQAABC0ecrYAAHDQBwAAAigkAAAKbyUAAApzJgAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4CKCcAAAoqLnMZAAAGgAcAAAQqQlNKQgEA
AQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA2AUAACN+AABEBgAACAcAACNTdHJpbmdzAAAA
AEwNAAAoAQAAI1VTAHQOAAAQAAAAI0dVSUQAAACEDgAAzAEAACNCbG9iAAAAAAAAAAIAAAFXFaIB
CQEAAAD6ATMAFgAAAQAAACEAAAAIAAAABwAAABoAAAAPAAAAJwAAABAAAAABAAAAAwAAAAkAAAAK
AAAAAQAAAAUAAAABAAAAAABDAwEAAAAAAAYAOwI3BQYAzwI3BQYAhwEkBQ8AqwUAAAYAtAEYBAYA
HgIYBAYA/wEYBAYAtgIYBAYAWwIYBAYAdAIYBAYAywEYBAYA5gEKAwoAjwLUAAoAzQTUAA4AvgTU
AAoAdQTUAAoAeAbUAAYAOwbAAwYAagEkBQYA3gRXBQYAaQQDBBIAOgEtAxIAmwEtAxIAIgHuAwYA
TwE3BQYAHQDAAxYAAQDuBAYAJgPAAwYAKgTAAwYAWATAAwYA9QDAAwYApgDAAwYA/QYYBAAAAABH
AAAAAAABAAEAAQAQANMDAAAQAAEAAQABABAAsQQAADkAAQAFAAEAEABaBgAARQABAA4AAQAQACgG
AABJAAMAEgABABAA6QUAAEkABAATAAAAEABeBboFSQAFABQAAAEQABgGugVhAAcAGAAGACgGkAAG
AOkFlAABAGgGmAABAGgGmAARAMcDnAARABIBoAARAHcApABQIAAAAADGAO0CBgABAFggAAAAAMYA
+AIGAAEAYCAAAAAAxgDaBqgAAQCmIAAAAACGGBcFBgACAK4gAAAAAIYYFwU1AAIAuSAAAAAAhgiH
AK4ABQDOIAAAAACGCGsDVwAFANcgAAAAAIYI3gOuAAUA7CAAAAAAhgiYA1cABQD1IAAAAACGCJUA
EAAFAP8gAAAAAIYIgAOyAAYAFiEAAAAAhgDxBlcABwAeIQAAAACGAEIGVwAHACYhAAAAAIYYFwUG
AAcARiEAAAAAxgDNBrcABwBrIQAAAADGAcYGqAALAH4hAAAAAMYB2gaoAAwAgCEAAAAAhhgXBcEA
DQCPIQAAAACGGBcFwQAOAJ4hAAAAAIMYFwUGAA8ApiEAAAAAkwjaBMcADwDSIQAAAACTCPoAzAAP
ANkhAAAAAJMIBgHRAA8A4SEAAAAAlghOBtcAEADoIQAAAACGGBcFBgAQAPAhAAAAAJEYHQXcABAA
AAABAPUGAAABANMEAAACAPMFAAADAIMEAAABAAQDAAABAAQDAAABAFAAAAACAMoAAAADANMEAAAE
AIMEAAABANMEAAABAPUGAAABAH4GAAABAH4GAAABAAQDCQAXBQEAEQAXBQYAGQAXBQoAKQAXBRAA
MQAXBRAAOQAXBRAAQQAXBRAASQAXBRAAUQAXBRAAWQAXBRAAYQAXBRAAaQAXBQYAmQAXBQYAuQAX
BRUAyQAXBQYAiQDtAgYAiQD4AgYA0QAkAyAAiQBYACQA2QBEBCkA4QA0Bi4AcQAXBTUAcQDTBD8A
cQDzBUMAeQAaAEcAcQCoA0wAcQC3A1EAcQCvAwEA6QAXBRAAcQDxBlcAcQBCBlcAiQAXBQYA4QAh
BlsAiQAHBmIAkQAXBQYA+QC4AGgA+QD5BnAAoQAXBXYAwQAXBQYALgALAPsALgATAAQBLgAbACMB
LgAjACwBLgArAFUBLgAzAFUBLgA7AFsBLgBDACwBLgBLAGMBLgBTAFUBLgBbAHwBQwBjAMYB4QB7
AMYB4wBrAMYB6QBzACMBCQFzACMBGwADAAEABwAHAAgACQAAAIsA4AAAAG8D5AAAAOID4AAAAJwD
5AAAAJkA6AAAAIQD5AAAAN4E7AAAABoB8QAAAFIG9gACAAYAAwACAAcABQACAAgABwACAAkACQAB
AAoACwABAAsADQACABUADwACABYAEQABABcAEQACABgAEwAEgAAAAQAAAAAAAAAAAAAAAAAjAAAA
BAAAAAAAAAAAAAAAfgBuAAAAAAAQAAAAAAAAAAAAAACHAIgGAAAAABAAAAAAAAAAAAAAAIcApQYA
AAAABAAAAAAAAAAAAAAAfgDAAwAAAAAQAAAAAAAAAAAAAACHAI0EAAAAAAAAAAABAAAAaAUAAAAA
AAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAEdldEludDMyAFNDXzVmYzVkZTM3MWYzMjRjMzM5
MmE4ZTNiNGY4OTJlYTE4ADxNb2R1bGU+AElucHV0SUQAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1z
Y29ybGliAGRlZmF1bHRJbnN0YW5jZQBnZXRfRXJyb3JDb2RlAHNldF9FcnJvck1lc3NhZ2UAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBUb1N0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfNWZjNWRlMzcxZjMyNGMz
MzkyYThlM2I0Zjg5MmVhMTguZGxsAGdldF9FcnJvckNvZGVfSXNOdWxsAHNldF9FcnJvck1lc3Nh
Z2VfSXNOdWxsAGdldF9FcnJvckNvbHVtbl9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0A
cmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBnZXRfRXJyb3JDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBHZXRFcnJvckRlc2NyaXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUlu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGlu
ZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU0NfNWZjNWRlMzcxZjMyNGMzMzkyYThlM2I0Zjg5MmVhMTguUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzVmYzVkZTM3MWYz
MjRjMzM5MmE4ZTNiNGY4OTJlYTE4LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbklu
ZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQ29uY2F0
AE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBv
bmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9j
ZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAAAAByAALQAgAAGAm0kAcwBOAHUAbABs
ACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYA
YQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABj
AG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwA1AGYA
YwA1AGQAZQAzADcAMQBmADMAMgA0AGMAMwAzADkAMgBhADgAZQAzAGIANABmADgAOQAyAGUAYQAx
ADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAPugqPaCk5ZCmtES
6iI4+VEABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkEBwIOCAMgAA4EIAASbQQgAQ4IBgADDg4O
DgkgAwESPR0IEkEDBhI9AwYdCAQgAQgIBCABAggFIAIBCBwDIAACBiACAg4ReQUgAR0ICAcAARJ9
EYCBBSAAEoCFByACAQ4SgIUIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYSVQMG
EiAFIAEBEgwDIAAIBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAA
AQMoAAgDKAACAygADgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNWZjNWRlMzcxZjMyNGMzMzkyYThlM2I0Zjg5MmVh
MTgAAAUBAAAAAAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjUAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC43BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAACwzAAAAAAAAAAAAAEYzAAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAA4MwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBDAF8ANQBmAGMANQBkAGUAMwA3ADEAZgAzADIANABjADMAMwA5ADIAYQA4AGUAMwBi
ADQAZgA4ADkAMgBlAGEAMQA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA1AGYAYwA1
AGQAZQAzADcAMQBmADMAMgA0AGMAMwAzADkAMgBhADgAZQAzAGIANABmADgAOQAyAGUAYQAxADgA
LgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AEMAXwA1AGYAYwA1AGQAZQAzADcAMQBmADMAMgA0AGMAMwAzADkAMgBhADgAZQAzAGIANABmADgA
OQAyAGUAYQAxADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBD
AF8ANQBmAGMANQBkAGUAMwA3ADEAZgAzADIANABjADMAMwA5ADIAYQA4AGUAMwBiADQAZgA4ADkA
MgBlAGEAMQA4AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAA
LgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAWDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_5fc5de371f324c3392a8e3b4f892ea18</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">FA</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Script Component.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Script Component.Inputs[Input 0].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Leave_Staging Container\ExcelToLeaveTable\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Script Component.Outputs[Output 0].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Script Component.Outputs[Output 0].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All"
                  componentClassID="Microsoft.UnionAll"
                  contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                  name="Union All"
                  version="1">
                  <inputs>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 1]"
                      name="Union All Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 1].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Type of Leave]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 1].Columns[Start Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Start Date"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Start Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 1].Columns[End Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="End Date"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[End Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 1].Columns[Number of days ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Number of days "
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Number of days ]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 1].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Approval Obtained]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 1].Columns[Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Sick Note"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Sick Note]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 1].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 1].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 2]"
                      hasSideEffects="true"
                      name="Union All Input 2">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 2].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Type of Leave]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 2].Columns[Start Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Start Date"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Start Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Start Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 2].Columns[End Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="End Date"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[End Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[End Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 2].Columns[Number of days ]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Number of days "
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Number of days ]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 2].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Approval Obtained]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 2].Columns[Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Sick Note"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Sick Note]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 2].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 2].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 3]"
                      hasSideEffects="true"
                      name="Union All Input 3">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 3].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 3].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 4]"
                      dangling="true"
                      hasSideEffects="true"
                      name="Union All Input 4">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1]"
                      name="Union All Output 1">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Type of Leave]"
                          name="Type of Leave" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Start Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Start Date]"
                          name="Start Date" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[End Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[End Date]"
                          name="End Date" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Number of days ]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Number of days ]"
                          name="Number of days " />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Approval Obtained]"
                          name="Approval Obtained" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[Sick Note]"
                          name="Sick Note" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[ErrorCode]"
                          name="ErrorCode" />
                        <outputColumn
                          refId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]"
                          name="ErrorColumn" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Aggregate Output 1]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                  name="Aggregate Output 1"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Outputs[Aggregate Output 1]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Audit Output 1]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Inputs[Data Conversion Input]"
                  name="Audit Output 1"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Outputs[Audit Output 1]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Conditional Split Default Output]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\Multicast.Inputs[Multicast Input 1]"
                  name="Conditional Split Default Output"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Outputs[Conditional Split Default Output]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Data Conversion Output]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Inputs[Derived Column Input]"
                  name="Data Conversion Output"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Derived Column Output]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Derived Column Output1]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\Script Component.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Excel Source Error Output]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 1]"
                  name="Excel Source Error Output"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Error Output]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Excel Source Output]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\Audit.Inputs[Audit Input 1]"
                  name="Excel Source Output"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Lookup No Match Output]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Multicast Output 1]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate.Inputs[Aggregate Input 1]"
                  name="Multicast Output 1"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Multicast Output 2]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup.Inputs[Lookup Input]"
                  name="Multicast Output 2"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Multicast.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[OLE DB Destination Error Output]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 2]"
                  name="OLE DB Destination Error Output"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination.Outputs[OLE DB Destination Error Output]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[OLE DB Destination Error Output1]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Inputs[Union All Input 3]"
                  name="OLE DB Destination Error Output"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Output 0]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2.Inputs[OLE DB Destination Input]"
                  name="Output 0"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Script Component.Outputs[Output 0]" />
                <path
                  refId="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Union All Output 1]"
                  endId="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1.Inputs[Derived Column Input]"
                  name="Union All Output 1"
                  startId="Package\Leave_Staging Container\ExcelToLeaveTable\Union All.Outputs[Union All Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Leave_Staging Container\GetPathAndEmployeeName"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{19f09d9e-812c-48b7-844a-641dd9f370d1}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="GetPathAndEmployeeName"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_fc7537fec069441699cf827e05b38ea0"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FilePath"
              ReadWriteVariables="User::EmployeeName">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_fc7537fec069441699cf827e05b38ea0.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{AFAE01CD-13CF-4045-8263-281F611F5437}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_fc7537fec069441699cf827e05b38ea0</RootNamespace>
    <AssemblyName>ST_fc7537fec069441699cf827e05b38ea0</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fc7537fec069441699cf827e05b38ea0.Properties.Settings.get_Default():ST_fc7537fec069441699cf827e05b38ea0.Properties.Sett" +
    "ings")]

namespace ST_fc7537fec069441699cf827e05b38ea0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_fc7537fec069441699cf827e05b38ea0
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            MessageBox.Show(Dts.Variables["User::FilePath"].Value.ToString());
            string employee = Path.GetFileNameWithoutExtension(Dts.Variables["User::FilePath"].Value.ToString()).Split('_')[0];
            Dts.Variables["User::EmployeeName"].Value = employee;
            MessageBox.Show(employee);
            
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_fc7537fec069441699cf827e05b38ea0</msb:CodeName>
    <msb:DisplayName>ST_fc7537fec069441699cf827e05b38ea0</msb:DisplayName>
    <msb:ProjectId>{AFBE5549-4B7C-4111-A5BD-486AB662F2C0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_fc7537fec069441699cf827e05b38ea0.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fc7537fec069441699cf827e05b38ea0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_fc7537fec069441699cf827e05b38ea0")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fc7537fec069441699cf827e05b38ea0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fc7537fec069441699cf827e05b38ea0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fc7537fec069441699cf827e05b38ea0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fc7537fec069441699cf827e05b38ea0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fc7537fec069441699cf827e05b38ea0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_fc7537fec069441699cf827e05b38ea0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGxFQGgAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAA8i4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKAuAABPAAAAAEAAAIAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA+A4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADU
LgAAAAAAAEgAAAACAAUAUCEAAJgMAAABAAAAAAAAAOgtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQCLAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAooFQAACiYCKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAKKBYAAAoXjR4AAAEl
Fh9fnW8XAAAKFpoKAigQAAAKbxEAAApyHwAAcG8SAAAKBm8YAAAKBigVAAAKJgIoEAAAChZvGQAA
CioeAigaAAAKKh4CKBsAAAoqrn4BAAAELR5yRQAAcNADAAACKBwAAApvHQAACnMeAAAKgAEAAAR+
AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoHwAACioucwgAAAaAAwAABCoAAABCU0pCAQAB
AAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAIBAAAI34AAHQEAADQBQAAI1N0cmluZ3MAAAAA
RAoAALgAAAAjVVMA/AoAABAAAAAjR1VJRAAAAAwLAACMAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJ
AwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAfAAAAAgAAABAAAAABAAAAAgAAAAMA
AAAEAAAAAQAAAAUAAAABAAAAAQAAAAAAjgMBAAAAAAAGAC8CfwQGAL4CfwQGAHsBbAQPAPMEAAAG
AKgBKAQGABICKAQGAPMBKAQGAKUCKAQGAE8CKAQGAGgCKAQGAL8BKAQGANoB9gIKAIMCPQMKAPoA
PQMGAMYDvwMGAF4BbAQGAHsFvwMGAE8EnwQGADoEEwQOAC4BeAMOAI8BeAMOABYB/gMGAEMBfwQK
AGYDPQMSADUFpQASAHgApQAWALUFSAUWAJQFSAUGABkDLgAGAEYEvwMGABIDvwMGAMUAvwMGAIEA
vwMGAMQFKAQAAAAAJQAAAAAAAQABAAEAEADXAwEAOQABAAEAAAAQAKYEAgVFAAEAAwAAARAAPwUC
BVkAAwAHAAMBAABtBQAAPQAEAAoAEQDLA4EAEQDqAIUAEQBoAIkABgZXAI0AVoBdBZAAVoDKAJAA
UCAAAAAAhgDdAwYAAQDnIAAAAACGGF8EBgABAO8gAAAAAIMYXwQGAAEA9yAAAAAAkwhLBJQAAQAj
IQAAAACTCNIAmQABACohAAAAAJMI3gCeAAEAMiEAAAAAlgiIBaQAAgA5IQAAAACGGF8EBgACAEEh
AAAAAJEYZQSpAAIAAAABAPACCQBfBAEAEQBfBAYAGQBfBAoAKQBfBBAAMQBfBBAAOQBfBBAAQQBf
BBAASQBfBBAAUQBfBBAAWQBfBBAAYQBfBBAAaQBfBAYAgQBfBAYAqQBfBBUAuQBfBAYAcQBlBR8A
wQAxBSQAyQC2AykA0QDcAi8AiQAQAzMA2QCwBTcA6QDiAz0A+QCCBUIA0QDmAkkAwQChBQEAcQBf
BAYAiQBfBAYAAQGTAE4AAQHABVcAkQBfBF0AsQBfBAYACAAUAHcACAAYAHwAKQBzAOQALgALALwA
LgATAMUALgAbAOQALgAjAO0ALgArABYBLgAzABYBLgA7ABwBLgBDAO0ALgBLACQBLgBTABYBLgBb
AD0BQwBjAHwASQBzAOQAYQB7AHwAYwBrAHwAGwADAAEABAADAAAATwStAAAA8gCyAAAAjAW3AAIA
BAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAARiSGagAAAAAAAAEAAAAEAAAAAAAAAAAAAABl
AF8AAAAAABAAAAAAAAAAAAAAAG4AHgMAAAAABAAAAAAAAAAAAAAAZQC/AwAAAAAQAAAAAAAAAAAA
AABuADgAAAAAAAQAAAAAAAAAAAAAAGUASAUAAAAAAAAAAAEAAACwBAAABQACAAAAAAAAU1RfZmM3
NTM3ZmVjMDY5NDQxNjk5Y2Y4MjdlMDViMzhlYTAAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBW
YXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBy
ZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1Zh
bHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAUGF0aABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZmM3NTM3
ZmVjMDY5NDQxNjk5Y2Y4MjdlMDViMzhlYTAuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291
cmNlTWFuAFNjcmlwdE1haW4AR2V0RmlsZU5hbWVXaXRob3V0RXh0ZW5zaW9uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJ
bmZvAENoYXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0
aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9m
Yzc1MzdmZWMwNjk0NDE2OTljZjgyN2UwNWIzOGVhMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZmM3NTM3ZmVjMDY5NDQxNjk5Y2Y4MjdlMDViMzhlYTAu
UHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN5c3RlbS5XaW5kb3dzLkZvcm1zAFN1
Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABTcGxpdABnZXRfRGVmYXVsdABEaWFs
b2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU2hvdwBNZXNzYWdlQm94AGdldF9Bc3NlbWJseQAAAAAA
HVUAcwBlAHIAOgA6AEYAaQBsAGUAUABhAHQAaAAAJVUAcwBlAHIAOgA6AEUAbQBwAGwAbwB5AGUA
ZQBOAGEAbQBlAABxUwBUAF8AZgBjADcANQAzADcAZgBlAGMAMAA2ADkANAA0ADEANgA5ADkAYwBm
ADgAMgA3AGUAMAA1AGIAMwA4AGUAYQAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAA/cFTV8atGkqB2Dts/pCBIwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERUQMH
AQ4EIAASYQQgABJlBSABEmkcAyAAHAMgAA4FAAERcQ4EAAEODgYgAR0OHQMEIAEBHAgAARKAgRGA
hQUgABKAiQcgAgEOEoCJCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIG
CAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9mYzc1MzdmZWMwNjk0
NDE2OTljZjgyN2UwNWIzOGVhMAAABQEAAAAABwEAAkhQAAAYAQATQ29weXJpZ2h0IEAgSFAgMjAy
NQAATQEAHC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lFC5ORVQgRnJhbWV3b3JrIDQuNy4yALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADILgAAAAAAAAAAAADiLgAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA1C4AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAACIEAAAAAAAAAAAAACIENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCGakYkAAABAIZqRiQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsASCAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABeAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkA
bwBuAAAAAABTAFQAXwBmAGMANwA1ADMANwBmAGUAYwAwADYAOQA0ADQAMQA2ADkAOQBjAGYAOAAy
ADcAZQAwADUAYgAzADgAZQBhADAAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEA
LgAwAC4AOQAyADgANgAuADIANwAyADcAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAFQAXwBmAGMANwA1ADMANwBmAGUAYwAwADYAOQA0ADQAMQA2ADkAOQBjAGYAOAAyADcA
ZQAwADUAYgAzADgAZQBhADAALgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn
AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADUAAAAqAAEAAQBMAGUA
ZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABG
AGkAbABlAG4AYQBtAGUAAABTAFQAXwBmAGMANwA1ADMANwBmAGUAYwAwADYAOQA0ADQAMQA2ADkA
OQBjAGYAOAAyADcAZQAwADUAYgAzADgAZQBhADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBj
AHQATgBhAG0AZQAAAAAAUwBUAF8AZgBjADcANQAzADcAZgBlAGMAMAA2ADkANAA0ADEANgA5ADkA
YwBmADgAMgA3AGUAMAA1AGIAMwA4AGUAYQAwAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA5ADIAOAA2AC4AMgA3ADIANwAwAAAAAABGAA8AAQBBAHMAcwBlAG0A
YgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA5ADIAOAA2AC4AMgA3ADIANwAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAD0PgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Leave_Staging Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{EF03FB9D-4C4D-47CB-8C38-45F0925A2404}"
          DTS:From="Package\Leave_Staging Container\GetPathAndEmployeeName"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Leave_Staging Container\ExcelToLeaveTable" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{19ED6328-16EB-4417-815B-2A8A8A70BB79}"
          DTS:ObjectName="{19ED6328-16EB-4417-815B-2A8A8A70BB79}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate Client and Employee Table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{17372f22-3819-4df8-865f-b186ac3c6aff}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate Client and Employee Table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populate Client and Employee Table\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Populate Client and Employee Table\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Data Conversion.Inputs[Data Conversion Input].Columns[Internal Sambe]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Internal Sambe"
                      lineageId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Output].Columns[Internal Sambe]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Internal Sambe]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Populate Client and Employee Table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Internal Sambe]"
                      name="Copy of Internal Sambe"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Output].Columns[Internal Sambe]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate Client and Employee Table\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate Client and Employee Table\Data Conversion 1"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Populate Client and Employee Table\Data Conversion 1.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Data Conversion 1.Inputs[Data Conversion Input].Columns[Resource]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Resource"
                      lineageId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Output].Columns[Resource]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\Data Conversion 1.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Resource]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Populate Client and Employee Table\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Resource]"
                      name="Copy of Resource"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Output].Columns[Resource]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate Client and Employee Table\Data Conversion 1.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate Client and Employee Table\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Populate Client and Employee Table\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Derived Column.Inputs[Derived Column Input].Columns[Copy of Internal Sambe]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of Internal Sambe"
                      lineageId="Package\Populate Client and Employee Table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Internal Sambe]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Derived Column.Outputs[Derived Column Output].Columns[Derived Client Name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Populate Client and Employee Table\Derived Column.Outputs[Derived Column Output].Columns[Derived Client Name]"
                      name="Derived Client Name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Populate Client and Employee Table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Internal Sambe]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">[Copy of Internal Sambe]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate Client and Employee Table\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate Client and Employee Table\Derived Column 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Populate Client and Employee Table\Derived Column 1.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Derived Column 1.Inputs[Derived Column Input].Columns[Copy of Resource]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of Resource"
                      lineageId="Package\Populate Client and Employee Table\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Resource]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\Derived Column 1.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Derived Column 1.Outputs[Derived Column Output].Columns[Derived Employee Name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Populate Client and Employee Table\Derived Column 1.Outputs[Derived Column Output].Columns[Derived Employee Name]"
                      name="Derived Employee Name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Populate Client and Employee Table\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Resource]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">[Copy of Resource]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate Client and Employee Table\Derived Column 1.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate Client and Employee Table\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheets1</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate Client and Employee Table\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[GetClientName]"
                  connectionManagerRefId="Package.ConnectionManagers[GetClientName]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Output].Columns[Internal Sambe]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Internal Sambe]"
                      length="255"
                      lineageId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Output].Columns[Internal Sambe]"
                      name="Internal Sambe"
                      truncationRowDisposition="RedirectRow" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Internal Sambe]"
                      dataType="wstr"
                      length="255"
                      name="Internal Sambe" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Error Output].Columns[Internal Sambe]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Error Output].Columns[Internal Sambe]"
                      name="Internal Sambe" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate Client and Employee Table\Excel Source 1"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source 1"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Employees</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate Client and Employee Table\Excel Source 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[GetEmployeeName]"
                  connectionManagerRefId="Package.ConnectionManagers[GetEmployeeName]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Output].Columns[Resource]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Output].ExternalColumns[Resource]"
                      length="255"
                      lineageId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Output].Columns[Resource]"
                      name="Resource"
                      truncationRowDisposition="RedirectRow" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Output].ExternalColumns[Resource]"
                      dataType="wstr"
                      length="255"
                      name="Resource" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Error Output].Columns[Resource]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Error Output].Columns[Resource]"
                      name="Resource" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate Client and Employee Table\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Client]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Client]) [refTable]
where [refTable].[ClientName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Populate Client and Employee Table\Derived Column.Outputs[Derived Column Output].Columns[Derived Client Name]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate Client and Employee Table\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate Client and Employee Table\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Lookup.Inputs[Lookup Input].Columns[Derived Client Name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Derived Client Name"
                      lineageId="Package\Populate Client and Employee Table\Derived Column.Outputs[Derived Column Output].Columns[Derived Client Name]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ClientName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Lookup.Outputs[Lookup Match Output].Columns[ClientName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="100"
                      lineageId="Package\Populate Client and Employee Table\Lookup.Outputs[Lookup Match Output].Columns[ClientName]"
                      name="ClientName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ClientName</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate Client and Employee Table\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate Client and Employee Table\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate Client and Employee Table\Lookup 1"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup 1"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Employee]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Employee]) [refTable]
where [refTable].[EmployeeName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="EmployeeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EmployeeName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Populate Client and Employee Table\Derived Column 1.Outputs[Derived Column Output].Columns[Derived Employee Name]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate Client and Employee Table\Lookup 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate Client and Employee Table\Lookup 1.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Lookup 1.Inputs[Lookup Input].Columns[Derived Employee Name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Derived Employee Name"
                      lineageId="Package\Populate Client and Employee Table\Derived Column 1.Outputs[Derived Column Output].Columns[Derived Employee Name]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">EmployeeName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\Lookup 1.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Lookup 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Lookup 1.Outputs[Lookup Match Output].Columns[EmployeeName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="100"
                      lineageId="Package\Populate Client and Employee Table\Lookup 1.Outputs[Lookup Match Output].Columns[EmployeeName]"
                      name="EmployeeName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">EmployeeName</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate Client and Employee Table\Lookup 1.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Lookup 1.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populate Client and Employee Table\Lookup 1.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Populate Client and Employee Table\Lookup 1.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Lookup 1.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate Client and Employee Table\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Client]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate Client and Employee Table\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate Client and Employee Table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Derived Client Name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Derived Client Name"
                      externalMetadataColumnId="Package\Populate Client and Employee Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientName]"
                      lineageId="Package\Populate Client and Employee Table\Derived Column.Outputs[Derived Column Output].Columns[Derived Client Name]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                      dataType="i4"
                      name="ClientID" />
                    <externalMetadataColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientName]"
                      dataType="wstr"
                      length="100"
                      name="ClientName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate Client and Employee Table\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate Client and Employee Table\OLE DB Destination 1"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination 1"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Employee]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate Client and Employee Table\OLE DB Destination 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate Client and Employee Table\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Derived Employee Name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Derived Employee Name"
                      externalMetadataColumnId="Package\Populate Client and Employee Table\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeName]"
                      lineageId="Package\Populate Client and Employee Table\Derived Column 1.Outputs[Derived Column Output].Columns[Derived Employee Name]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeName]"
                      dataType="wstr"
                      length="100"
                      name="EmployeeName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate Client and Employee Table\OLE DB Destination 1.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate Client and Employee Table\OLE DB Destination 2"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination 2"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[ErrorLog]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populate Client and Employee Table\OLE DB Destination 2.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populate Client and Employee Table\OLE DB Destination 2.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[ErrorMessage]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="ErrorMessage"
                      externalMetadataColumnId="Package\Populate Client and Employee Table\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorMessage]"
                      lineageId="Package\Populate Client and Employee Table\Script Component.Outputs[Output 0].Columns[ErrorMessage]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorID]"
                      dataType="i4"
                      name="ErrorID" />
                    <externalMetadataColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[FilePath]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="FilePath" />
                    <externalMetadataColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorMessage]"
                      dataType="wstr"
                      length="4000"
                      name="ErrorMessage" />
                    <externalMetadataColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                      dataType="dbTimeStamp"
                      name="Timestamp" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\OLE DB Destination 2.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populate Client and Employee Table\OLE DB Destination 2.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate Client and Employee Table\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if (Row.ErrorCode != 0) // Check if an error occurred
        {
            string errorMessage = Row.ErrorCode.ToString() + " - " + ComponentMetaData.GetErrorDescription(Row.ErrorCode);
            Row.ErrorMessage = errorMessage;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String ErrorMessage
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ErrorMessage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_c30e9c18556d4b269bd3b65815730d06.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B1B9525E-786C-4C4C-A736-B9083C0E4E62}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_c30e9c18556d4b269bd3b65815730d06</RootNamespace>
    <AssemblyName>SC_c30e9c18556d4b269bd3b65815730d06</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c30e9c18556d4b269bd3b65815730d06.Properties.Settings.get_Default():SC_c30e9c18556d4b269bd3b65815730d06.Properties.Sett" +
    "ings")]

namespace SC_c30e9c18556d4b269bd3b65815730d06.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_c30e9c18556d4b269bd3b65815730d06</msb:CodeName>
    <msb:DisplayName>SC_c30e9c18556d4b269bd3b65815730d06</msb:DisplayName>
    <msb:ProjectId>{80C31D18-75DE-4F61-B14B-8E3B9025A58B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_c30e9c18556d4b269bd3b65815730d06.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_c30e9c18556d4b269bd3b65815730d06")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_c30e9c18556d4b269bd3b65815730d06")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c30e9c18556d4b269bd3b65815730d06.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c30e9c18556d4b269bd3b65815730d06.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c30e9c18556d4b269bd3b65815730d06.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_c30e9c18556d4b269bd3b65815730d06.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_c30e9c18556d4b269bd3b65815730d06.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_c30e9c18556d4b269bd3b65815730d06.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALYcSGgAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAWjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAgzAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
MwAAAAAAAEgAAAACAAUA/CEAAFQQAAABAAAAAAAAAFAyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQAOgAAAAEAABEDbwYAAAYs
MQNvBgAABgsSASgSAAAKcgEAAHACKBMAAAoDbwYAAAZvFAAACigVAAAKCgMGbwoAAAYqHgIoDgAA
BioqAgMEBSgWAAAKKlICexcAAAoCexgAAAoWlG8ZAAAKKiICFigaAAAKKlICexcAAAoCexgAAAoX
lG8ZAAAKKiICFygaAAAKKiYCGAMoGwAACipaAywIAhgoHAAACipyCQAAcHMdAAAKeh4CKB4AAAoq
HgIoHwAACip+AiggAAAKAgJzEgAABn0BAAAEAgJzEwAABn0CAAAEKpIEcqYAAHAabyEAAAosFQIF
AgMoIgAACg4EcwUAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6AigjAAAKAgN9AwAABCo6
AigjAAAKAgN9BAAABCoeAigjAAAKKq5+BQAABC0ecrYAAHDQBwAAAigkAAAKbyUAAApzJgAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4CKCcAAAoqLnMZAAAGgAcAAAQqQlNKQgEA
AQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA2AUAACN+AABEBgAACAcAACNTdHJpbmdzAAAA
AEwNAAAoAQAAI1VTAHQOAAAQAAAAI0dVSUQAAACEDgAA0AEAACNCbG9iAAAAAAAAAAIAAAFXFaIB
CQEAAAD6ATMAFgAAAQAAACEAAAAIAAAABwAAABoAAAAPAAAAJwAAABAAAAABAAAAAwAAAAkAAAAK
AAAAAQAAAAUAAAABAAAAAABDAwEAAAAAAAYAOwI3BQYAzwI3BQYAhwEkBQ8AqwUAAAYAtAEYBAYA
HgIYBAYA/wEYBAYAtgIYBAYAWwIYBAYAdAIYBAYAywEYBAYA5gEKAwoAjwLUAAoAzQTUAA4AvgTU
AAoAdQTUAAoAeAbUAAYAOwbAAwYAagEkBQYA3gRXBQYAaQQDBBIAOgEtAxIAmwEtAxIAIgHuAwYA
TwE3BQYAHQDAAxYAAQDuBAYAJgPAAwYAKgTAAwYAWATAAwYA9QDAAwYApgDAAwYA/QYYBAAAAABH
AAAAAAABAAEAAQAQANMDAAAQAAEAAQABABAAsQQAADkAAQAFAAEAEABaBgAARQABAA4AAQAQACgG
AABJAAMAEgABABAA6QUAAEkABAATAAAAEABeBboFSQAFABQAAAEQABgGugVhAAcAGAAGACgGkAAG
AOkFlAABAGgGmAABAGgGmAARAMcDnAARABIBoAARAHcApABQIAAAAADGAO0CBgABAFggAAAAAMYA
+AIGAAEAYCAAAAAAxgDaBqgAAQCmIAAAAACGGBcFBgACAK4gAAAAAIYYFwU1AAIAuSAAAAAAhgiH
AK4ABQDOIAAAAACGCGsDVwAFANcgAAAAAIYI3gOuAAUA7CAAAAAAhgiYA1cABQD1IAAAAACGCJUA
EAAFAP8gAAAAAIYIgAOyAAYAFiEAAAAAhgDxBlcABwAeIQAAAACGAEIGVwAHACYhAAAAAIYYFwUG
AAcARiEAAAAAxgDNBrcABwBrIQAAAADGAcYGqAALAH4hAAAAAMYB2gaoAAwAgCEAAAAAhhgXBcEA
DQCPIQAAAACGGBcFwQAOAJ4hAAAAAIMYFwUGAA8ApiEAAAAAkwjaBMcADwDSIQAAAACTCPoAzAAP
ANkhAAAAAJMIBgHRAA8A4SEAAAAAlghOBtcAEADoIQAAAACGGBcFBgAQAPAhAAAAAJEYHQXcABAA
AAABAPUGAAABANMEAAACAPMFAAADAIMEAAABAAQDAAABAAQDAAABAFAAAAACAMoAAAADANMEAAAE
AIMEAAABANMEAAABAPUGAAABAH4GAAABAH4GAAABAAQDCQAXBQEAEQAXBQYAGQAXBQoAKQAXBRAA
MQAXBRAAOQAXBRAAQQAXBRAASQAXBRAAUQAXBRAAWQAXBRAAYQAXBRAAaQAXBQYAmQAXBQYAuQAX
BRUAyQAXBQYAiQDtAgYAiQD4AgYA0QAkAyAAiQBYACQA2QBEBCkA4QA0Bi4AcQAXBTUAcQDTBD8A
cQDzBUMAeQAaAEcAcQCoA0wAcQC3A1EAcQCvAwEA6QAXBRAAcQDxBlcAcQBCBlcAiQAXBQYA4QAh
BlsAiQAHBmIAkQAXBQYA+QC4AGgA+QD5BnAAoQAXBXYAwQAXBQYALgALAPsALgATAAQBLgAbACMB
LgAjACwBLgArAFUBLgAzAFUBLgA7AFsBLgBDACwBLgBLAGMBLgBTAFUBLgBbAHwBQwBjAMoB4QB7
AMoB4wBrAMoB6QBzACMBCQFzACMBGwADAAEABwAHAAgACQAAAIsA4AAAAG8D5AAAAOID4AAAAJwD
5AAAAJkA6AAAAIQD5AAAAN4E7AAAABoB8QAAAFIG9gACAAYAAwACAAcABQACAAgABwACAAkACQAB
AAoACwABAAsADQACABUADwACABYAEQABABcAEQACABgAEwAEgAAAAQAAAAAAAAAAAAAAAAAjAAAA
BAAAAAAAAAAAAAAAfgBuAAAAAAAQAAAAAAAAAAAAAACHAIgGAAAAABAAAAAAAAAAAAAAAIcApQYA
AAAABAAAAAAAAAAAAAAAfgDAAwAAAAAQAAAAAAAAAAAAAACHAI0EAAAAAAAAAAABAAAAaAUAAAAA
AAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAEdldEludDMyAFNDX2MzMGU5YzE4NTU2ZDRiMjY5
YmQzYjY1ODE1NzMwZDA2ADxNb2R1bGU+AElucHV0SUQAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1z
Y29ybGliAGRlZmF1bHRJbnN0YW5jZQBnZXRfRXJyb3JDb2RlAHNldF9FcnJvck1lc3NhZ2UAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBUb1N0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfYzMwZTljMTg1NTZkNGIy
NjliZDNiNjU4MTU3MzBkMDYuZGxsAGdldF9FcnJvckNvZGVfSXNOdWxsAHNldF9FcnJvck1lc3Nh
Z2VfSXNOdWxsAGdldF9FcnJvckNvbHVtbl9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0A
cmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBnZXRfRXJyb3JDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBHZXRFcnJvckRlc2NyaXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUlu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGlu
ZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU0NfYzMwZTljMTg1NTZkNGIyNjliZDNiNjU4MTU3MzBkMDYuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2MzMGU5YzE4NTU2
ZDRiMjY5YmQzYjY1ODE1NzMwZDA2LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbklu
ZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQ29uY2F0
AE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBv
bmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9j
ZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAAAAByAALQAgAAGAm0kAcwBOAHUAbABs
ACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYA
YQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABj
AG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwBjADMA
MABlADkAYwAxADgANQA1ADYAZAA0AGIAMgA2ADkAYgBkADMAYgA2ADUAOAAxADUANwAzADAAZAAw
ADYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAPhblawIsm9MoZun
dJ4+nDgABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkEBwIOCAMgAA4EIAASbQQgAQ4IBgADDg4O
DgkgAwESPR0IEkEDBhI9AwYdCAQgAQgIBCABAggFIAIBCBwDIAACBiACAg4ReQUgAR0ICAcAARJ9
EYCBBSAAEoCFByACAQ4SgIUIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYSVQMG
EiAFIAEBEgwDIAAIBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAA
AQMoAAgDKAACAygADgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfYzMwZTljMTg1NTZkNGIyNjliZDNiNjU4MTU3MzBk
MDYAAAUBAAAAAAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjUAAE0BABwuTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNy4yAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRQuTkVUIEZyYW1ld29y
ayA0LjcuMgQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAwMwAAAAAAAAAAAABKMwAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAPDMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBDAF8AYwAzADAAZQA5AGMAMQA4ADUANQA2AGQANABiADIANgA5AGIAZAAzAGIANgA1
ADgAMQA1ADcAMwAwAGQAMAA2AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBjADMAMABl
ADkAYwAxADgANQA1ADYAZAA0AGIAMgA2ADkAYgBkADMAYgA2ADUAOAAxADUANwAzADAAZAAwADYA
LgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AEMAXwBjADMAMABlADkAYwAxADgANQA1ADYAZAA0AGIAMgA2ADkAYgBkADMAYgA2ADUAOAAxADUA
NwAzADAAZAAwADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBD
AF8AYwAzADAAZQA5AGMAMQA4ADUANQA2AGQANABiADIANgA5AGIAZAAzAGIANgA1ADgAMQA1ADcA
MwAwAGQAMAA2AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAA
LgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAXDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_c30e9c18556d4b269bd3b65815730d06</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">FA</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populate Client and Employee Table\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Script Component.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Script Component.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Populate Client and Employee Table\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Script Component.Outputs[Output 0].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Populate Client and Employee Table\Script Component.Outputs[Output 0].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populate Client and Employee Table\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 1].Columns[Internal Sambe]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Internal Sambe"
                      lineageId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Error Output].Columns[Internal Sambe]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[Internal Sambe]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 1].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 1].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 2].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Error Output].Columns[ErrorCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 2].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Error Output].Columns[ErrorColumn]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 3]"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 3].Columns[Internal Sambe]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Internal Sambe"
                      lineageId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Output].Columns[Internal Sambe]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[Internal Sambe]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 3].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Populate Client and Employee Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 3].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Populate Client and Employee Table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 4]"
                  hasSideEffects="true"
                  name="Union All Input 4">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 4].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Populate Client and Employee Table\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 4].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Populate Client and Employee Table\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 5]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 5">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[Internal Sambe]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[Internal Sambe]"
                      name="Internal Sambe" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorCode]"
                      name="ErrorCode" />
                    <outputColumn
                      refId="Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]"
                      name="ErrorColumn" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populate Client and Employee Table.Paths[Data Conversion Output]"
              endId="Package\Populate Client and Employee Table\Derived Column.Inputs[Derived Column Input]"
              name="Data Conversion Output"
              startId="Package\Populate Client and Employee Table\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[Data Conversion Output1]"
              endId="Package\Populate Client and Employee Table\Derived Column 1.Inputs[Derived Column Input]"
              name="Data Conversion Output"
              startId="Package\Populate Client and Employee Table\Data Conversion 1.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[Derived Column Output]"
              endId="Package\Populate Client and Employee Table\Lookup.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Populate Client and Employee Table\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[Derived Column Output1]"
              endId="Package\Populate Client and Employee Table\Lookup 1.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Populate Client and Employee Table\Derived Column 1.Outputs[Derived Column Output]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[Excel Source Error Output]"
              endId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 1]"
              name="Excel Source Error Output"
              startId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Error Output]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[Excel Source Error Output1]"
              endId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 2]"
              name="Excel Source Error Output"
              startId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Error Output]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[Excel Source Output]"
              endId="Package\Populate Client and Employee Table\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Populate Client and Employee Table\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[Excel Source Output1]"
              endId="Package\Populate Client and Employee Table\Data Conversion 1.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Populate Client and Employee Table\Excel Source 1.Outputs[Excel Source Output]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[Lookup No Match Output]"
              endId="Package\Populate Client and Employee Table\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Populate Client and Employee Table\Lookup.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[Lookup No Match Output1]"
              endId="Package\Populate Client and Employee Table\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Populate Client and Employee Table\Lookup 1.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[OLE DB Destination Error Output]"
              endId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 3]"
              name="OLE DB Destination Error Output"
              startId="Package\Populate Client and Employee Table\OLE DB Destination.Outputs[OLE DB Destination Error Output]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[OLE DB Destination Error Output1]"
              endId="Package\Populate Client and Employee Table\Union All.Inputs[Union All Input 4]"
              name="OLE DB Destination Error Output"
              startId="Package\Populate Client and Employee Table\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[Output 0]"
              endId="Package\Populate Client and Employee Table\OLE DB Destination 2.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\Populate Client and Employee Table\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\Populate Client and Employee Table.Paths[Union All Output 1]"
              endId="Package\Populate Client and Employee Table\Script Component.Inputs[Input 0]"
              name="Union All Output 1"
              startId="Package\Populate Client and Employee Table\Union All.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Timesheet Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:Disabled="True"
      DTS:DTSID="{5c343552-766b-431b-a863-87fbe18f5e6c}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Timesheet Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{aeb6cee0-ee58-4882-8990-e2ffce62f66a}"
        DTS:ObjectName="{3A1615BF-7494-437A-AABA-3D8784A88DCB}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\Kiaan Patel\OneDrive - Northern Data (Pty) Ltd\Documents\CodeCrusaders_TimeSheets" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Timesheet Container\DisplayPathAndName"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{e5b9ccac-b38f-42a8-b10d-f8f578f01c34}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="DisplayPathAndName"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_4000b237b2a54e629db09dd2d6c43e60"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FilePath"
              ReadWriteVariables="User::EmployeeName">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_f7d2023eedb5464098d7dd00249ad42d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            MessageBox.Show(Dts.Variables["User::FilePath"].Value.ToString());
            string employee = Path.GetFileNameWithoutExtension(Dts.Variables["User::FilePath"].Value.ToString()).Split('_')[0];            
            Dts.Variables["User::EmployeeName"].Value = employee;
            MessageBox.Show(employee);
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f7d2023eedb5464098d7dd00249ad42d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f7d2023eedb5464098d7dd00249ad42d</msb:DisplayName>
    <msb:ProjectId>{6C8ADEA8-F55F-45D5-B86F-1E1176B016B4}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4000b237b2a54e629db09dd2d6c43e60.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f7d2023eedb5464098d7dd00249ad42d.Properties.Settings.get_Default():ST_f7d2023eedb5464098d7dd00249ad42d.Properties.Sett" +
    "ings")]

namespace ST_f7d2023eedb5464098d7dd00249ad42d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_4000b237b2a54e629db09dd2d6c43e60.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{7BB15355-2495-48A6-871F-8B80DEF2A05D}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_f7d2023eedb5464098d7dd00249ad42d</RootNamespace><AssemblyName>ST_4000b237b2a54e629db09dd2d6c43e60</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f7d2023eedb5464098d7dd00249ad42d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_f7d2023eedb5464098d7dd00249ad42d")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f7d2023eedb5464098d7dd00249ad42d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f7d2023eedb5464098d7dd00249ad42d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f7d2023eedb5464098d7dd00249ad42d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f7d2023eedb5464098d7dd00249ad42d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f7d2023eedb5464098d7dd00249ad42d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_f7d2023eedb5464098d7dd00249ad42d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFBFQGgAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAA7i4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJwuAABPAAAAAEAAAIAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9A4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
LgAAAAAAAEgAAAACAAUAUCEAAJQMAAABAAAAAAAAAOQtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQCLAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAooFQAACiYCKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAKKBYAAAoXjR4AAAEl
Fh9fnW8XAAAKFpoKAigQAAAKbxEAAApyHwAAcG8SAAAKBm8YAAAKBigVAAAKJgIoEAAAChZvGQAA
CioeAigaAAAKKh4CKBsAAAoqrn4BAAAELR5yRQAAcNADAAACKBwAAApvHQAACnMeAAAKgAEAAAR+
AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoHwAACioucwgAAAaAAwAABCoAAABCU0pCAQAB
AAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAIBAAAI34AAHQEAADQBQAAI1N0cmluZ3MAAAAA
RAoAALgAAAAjVVMA/AoAABAAAAAjR1VJRAAAAAwLAACIAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJ
AwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAfAAAAAgAAABAAAAABAAAAAgAAAAMA
AAAEAAAAAQAAAAUAAAABAAAAAQAAAAAAjgMBAAAAAAAGAC8CfwQGAL4CfwQGAHsBbAQPAPMEAAAG
AKgBKAQGABICKAQGAPMBKAQGAKUCKAQGAE8CKAQGAGgCKAQGAL8BKAQGANoB9gIKAIMCPQMKAPoA
PQMGAMYDvwMGAF4BbAQGAHsFvwMGAE8EnwQGADoEEwQOAC4BeAMOAI8BeAMOABYB/gMGAEMBfwQK
AGYDPQMSADUFpQASAHgApQAWALUFSAUWAJQFSAUGABkDCgAGAEYEvwMGABIDvwMGAMUAvwMGAIEA
vwMGAMQFKAQAAAAAAQAAAAAAAQABAAEAEADXA0QAOQABAAEAAAAQAKYEAgVFAAEAAwAAARAAPwUC
BVkAAwAHAAMBAABtBQAAPQAEAAoAEQDLA4EAEQDqAIUAEQBoAIkABgYzAI0AVoBdBZAAVoDKAJAA
UCAAAAAAhgDdAwYAAQDnIAAAAACGGF8EBgABAO8gAAAAAIMYXwQGAAEA9yAAAAAAkwhLBJQAAQAj
IQAAAACTCNIAmQABACohAAAAAJMI3gCeAAEAMiEAAAAAlgiIBaQAAgA5IQAAAACGGF8EBgACAEEh
AAAAAJEYZQSpAAIAAAABAPACCQBfBAEAEQBfBAYAGQBfBAoAKQBfBBAAMQBfBBAAOQBfBBAAQQBf
BBAASQBfBBAAUQBfBBAAWQBfBBAAYQBfBBAAaQBfBAYAgQBfBAYAqQBfBBUAuQBfBAYAcQBlBR8A
wQAxBSQAyQC2AykA0QDcAi8AiQAQAzMA2QCwBTcA6QDiAz0A+QCCBUIA0QDmAkkAwQChBQEAcQBf
BAYAiQBfBAYAAQGTAE4AAQHABVcAkQBfBF0AsQBfBAYACAAUAHcACAAYAHwAKQBzAOQALgALALwA
LgATAMUALgAbAOQALgAjAO0ALgArABYBLgAzABYBLgA7ABwBLgBDAO0ALgBLACQBLgBTABYBLgBb
AD0BQwBjAHwASQBzAOQAYQB7AHwAYwBrAHwAGwADAAEABAADAAAATwStAAAA8gCyAAAAjAW3AAIA
BAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAARiR4agAAAAAAAEQAAAAEAAAAAAAAAAAAAABl
ADsAAAAAABAAAAAAAAAAAAAAAG4AHgMAAAAABAAAAAAAAAAAAAAAZQC/AwAAAAAQAAAAAAAAAAAA
AABuABQAAAAAAAQAAAAAAAAAAAAAAGUASAUAAAAAAAAAAAEAAACwBAAABQACAAAAAAAAPE1vZHVs
ZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29y
bGliAFNUX2Y3ZDIwMjNlZWRiNTQ2NDA5OGQ3ZGQwMDI0OWFkNDJkAGRlZmF1bHRJbnN0YW5jZQBW
YXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBy
ZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1Zh
bHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAUGF0aABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZjdkMjAy
M2VlZGI1NDY0MDk4ZDdkZDAwMjQ5YWQ0MmQuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291
cmNlTWFuAFNjcmlwdE1haW4AR2V0RmlsZU5hbWVXaXRob3V0RXh0ZW5zaW9uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJ
bmZvAENoYXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0
aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9m
N2QyMDIzZWVkYjU0NjQwOThkN2RkMDAyNDlhZDQyZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZjdkMjAyM2VlZGI1NDY0MDk4ZDdkZDAwMjQ5YWQ0MmQu
UHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN5c3RlbS5XaW5kb3dzLkZvcm1zAFN1
Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABTcGxpdABnZXRfRGVmYXVsdABEaWFs
b2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU2hvdwBNZXNzYWdlQm94AGdldF9Bc3NlbWJseQAAAAAA
HVUAcwBlAHIAOgA6AEYAaQBsAGUAUABhAHQAaAAAJVUAcwBlAHIAOgA6AEUAbQBwAGwAbwB5AGUA
ZQBOAGEAbQBlAABxUwBUAF8AZgA3AGQAMgAwADIAMwBlAGUAZABiADUANAA2ADQAMAA5ADgAZAA3
AGQAZAAwADAAMgA0ADkAYQBkADQAMgBkAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAlFnxq3SG3EOsR+TL6MnvjQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERUQMH
AQ4EIAASYQQgABJlBSABEmkcAyAAHAMgAA4FAAERcQ4EAAEODgYgAR0OHQMEIAEBHAgAARKAgRGA
hQUgABKAiQcgAgEOEoCJCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIG
CAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9mN2QyMDIzZWVkYjU0
NjQwOThkN2RkMDAyNDlhZDQyZAAABQEAAAAABwEAAkhQAAAYAQATQ29weXJpZ2h0IEAgSFAgMjAy
NQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRIuTkVUIEZyYW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMQuAAAAAAAAAAAAAN4uAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADQLgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAACIEAAAAAAAAAAAAACIENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQB4akYkAAABAHhqRiQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsASCAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABeAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkA
bwBuAAAAAABTAFQAXwBmADcAZAAyADAAMgAzAGUAZQBkAGIANQA0ADYANAAwADkAOABkADcAZABk
ADAAMAAyADQAOQBhAGQANAAyAGQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEA
LgAwAC4AOQAyADgANgAuADIANwAyADUANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAFQAXwBmADcAZAAyADAAMgAzAGUAZQBkAGIANQA0ADYANAAwADkAOABkADcAZABkADAA
MAAyADQAOQBhAGQANAAyAGQALgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn
AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADUAAAAqAAEAAQBMAGUA
ZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABG
AGkAbABlAG4AYQBtAGUAAABTAFQAXwBmADcAZAAyADAAMgAzAGUAZQBkAGIANQA0ADYANAAwADkA
OABkADcAZABkADAAMAAyADQAOQBhAGQANAAyAGQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBj
AHQATgBhAG0AZQAAAAAAUwBUAF8AZgA3AGQAMgAwADIAMwBlAGUAZABiADUANAA2ADQAMAA5ADgA
ZAA3AGQAZAAwADAAMgA0ADkAYQBkADQAMgBkAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA5ADIAOAA2AC4AMgA3ADIANQA2AAAAAABGAA8AAQBBAHMAcwBlAG0A
YgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA5ADIAOAA2AC4AMgA3ADIANQA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADwPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Timesheet Container\ExcelToTimesheetTable"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{cea3d951-d527-4348-9a47-3d383bc51c1a}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="ExcelToTimesheetTable"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Timesheet Container\ExcelToTimesheetTable.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{37534587-6119-467d-9d41-39f2efb6f2b1}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{dd73b2dc-9545-40af-9c89-0ffaa5c2f306}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Timesheet Container\ExcelToTimesheetTable.EventHandlers[OnError]\Execute SQL Task"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{70bf6982-4168-4702-b1f6-1c2284fec06d}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Execute SQL Task"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate"
                  componentClassID="Microsoft.Aggregate"
                  contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
                  name="Aggregate"
                  version="3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                      name="CountDistinctScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                      name="CountDistinctKeys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                      name="AutoExtendFactor">25</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1]"
                      name="Aggregate Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1].Columns[UserName]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="UserName"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[UserName]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1].Columns[TimeStamp]"
                          cachedDataType="date"
                          cachedName="TimeStamp"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[TimeStamp]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1].Columns[Derived Employee Name]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived Employee Name"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1].Columns[Derived Table Name]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Derived Table Name"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Table Name]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1].Columns[Derived Details]"
                          cachedDataType="wstr"
                          cachedLength="216"
                          cachedName="Derived Details"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1]"
                      name="Aggregate Output 1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                          name="KeyScale"
                          typeConverter="KeyScaleType">0</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                          name="Keys" />
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[UserName]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[UserName]"
                          name="UserName">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[UserName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Details]"
                          dataType="wstr"
                          length="216"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Details]"
                          name="Derived Details">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[TimeStamp]"
                          dataType="date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[TimeStamp]"
                          name="TimeStamp">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[TimeStamp]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Employee Name]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Employee Name]"
                          name="Derived Employee Name">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Table Name]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Table Name]"
                          name="Derived Table Name">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Table Name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet Container\ExcelToTimesheetTable\Audit"
                  componentClassID="Microsoft.Lineage"
                  contactInfo="Audit;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Includes data about the environment in which the package runs. Map system variables to new output columns. For example, add the name of the computer and operator to the data flow."
                  name="Audit">
                  <inputs>
                    <input
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Inputs[Audit Input 1]"
                      name="Audit Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1]"
                      exclusionGroup="1"
                      name="Audit Output 1"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Inputs[Audit Input 1]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[UserName]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[UserName]"
                          name="UserName">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies which audit item this column produces."
                              name="LineageItemSelected"
                              typeConverter="LineageItemSelected">6</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[Details]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[Details]"
                          name="Details">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies which audit item this column produces."
                              name="LineageItemSelected"
                              typeConverter="LineageItemSelected">7</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[TimeStamp]"
                          dataType="date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[TimeStamp]"
                          name="TimeStamp">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies which audit item this column produces."
                              name="LineageItemSelected"
                              typeConverter="LineageItemSelected">4</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input].Columns[Derived Total Hours]"
                          cachedDataType="numeric"
                          cachedName="Derived Total Hours"
                          cachedPrecision="4"
                          cachedScale="2"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Outputs[NullTimes]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="NullTimes"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]}) || [ISNULL](#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]}) || [ISNULL](#{Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL([Copy of Start Time]) || ISNULL([Copy of End Time]) || ISNULL([Derived Total Hours])</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[D of Week]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Description]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Comments]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Start Time]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[End Time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]"
                          name="Copy of Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of D of Week]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of D of Week]"
                          name="Copy of D of Week"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[D of Week]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client]"
                          name="Copy of Client"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client Project Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client Project Name]"
                          name="Copy of Client Project Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Description]"
                          name="Copy of Description"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Description]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Billable or Non Billable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Billable or Non Billable]"
                          name="Copy of Billable or Non Billable"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="4000"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]"
                          name="Copy of Comments"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Comments]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]"
                          dataType="dbTime"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]"
                          name="Copy of Start Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]"
                          dataType="dbTime"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]"
                          name="Copy of End Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[End Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input].Columns[Details]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="Details"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[Details]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]"
                          name="Derived Total Hours"
                          precision="4"
                          scale="2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_NUMERIC,4,2)(([DATEDIFF]("ss",#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]},#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]}) / 3600.0))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_NUMERIC,4,2)((DATEDIFF("ss",[Copy of Start Time],[Copy of End Time]) / 3600.0))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]"
                          name="Derived Employee Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::EmployeeName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::EmployeeName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Table Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Table Name]"
                          name="Derived Table Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::TableName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::TableName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="216"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]"
                          name="Derived Details"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Task: " + #{Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[Details]} + "; " + "File Path: " + @[User::FilePath]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Task: " + Details + "; " + "File Path: " + @[User::FilePath]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Sheet1</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          name="D of Week"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          name="Client"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          name="Client Project Name"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          length="4000"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          name="Comments"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          name="Total Hours"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          name="Start Time"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          name="End Time"
                          truncationRowDisposition="RedirectRow" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          dataType="date"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          dataType="wstr"
                          length="255"
                          name="D of Week" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          dataType="wstr"
                          length="255"
                          name="Client" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          name="Client Project Name" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          name="Billable or Non Billable" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          dataType="wstr"
                          length="255"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          dataType="date"
                          name="Total Hours" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          dataType="date"
                          name="Start Time" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          dataType="date"
                          name="End Time" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          name="D of Week" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          name="Client Project Name" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          name="Total Hours" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          name="End Time" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup"
                  componentClassID="Microsoft.FuzzyLookup"
                  contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
                  description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
                  name="Fuzzy Lookup"
                  version="5">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                      name="MatchIndexOptions"
                      typeConverter="tcMatchIndexOptions">1</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                      expressionType="Notify"
                      name="MaxMemoryUsage" />
                    <property
                      dataType="System.Null"
                      description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                      name="MatchIndexName"
                      state="escaped" />
                    <property
                      dataType="System.String"
                      description="Specifies the name of the reference table or view against which to match incoming records."
                      name="ReferenceTableName"
                      state="escaped">_x005B_dbo_x005D_._x005B_Employee_x005D_</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                      name="DropExistingMatchIndex">1</property>
                    <property
                      dataType="System.Int32"
                      description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                      name="CopyReferenceTable">1</property>
                    <property
                      dataType="System.UInt32"
                      description="Specifies the maximum number of fuzzy matches to return for an input record."
                      name="MaxOutputMatchesPerInput">1</property>
                    <property
                      dataType="System.Single"
                      description="Specifies the minimum similarity score required for the match results that the transformation returns."
                      name="MinSimilarity">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                      name="Delimiters"
                      state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                    <property
                      dataType="System.String"
                      description="Specifies the metadata of the reference table in XML format."
                      name="ReferenceMetadataXml"
                      state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_EmployeeID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_EmployeeName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                      name="Exhaustive">false</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                      name="WarmCaches">true</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                      name="Fuzzy Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[D of Week]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Comments]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Start Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[End Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[UserName]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="UserName"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[UserName]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Details]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="Details"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[Details]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[TimeStamp]"
                          cachedDataType="date"
                          cachedName="TimeStamp"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[TimeStamp]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of D of Week"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of D of Week]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Client"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Client Project Name"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client Project Name]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Description"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Description]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Billable or Non Billable"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Billable or Non Billable]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Copy of Comments"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Derived Total Hours]"
                          cachedDataType="numeric"
                          cachedName="Derived Total Hours"
                          cachedPrecision="4"
                          cachedScale="2"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Derived Employee Name]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived Employee Name"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Derived Table Name]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Derived Table Name"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Table Name]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Derived Details]"
                          cachedDataType="wstr"
                          cachedLength="216"
                          cachedName="Derived Details"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[EmployeeName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="EmployeeName"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[EmployeeName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped">EmployeeName</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Date1]"
                          cachedDataType="dbDate"
                          cachedName="Date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output]"
                      name="Fuzzy Lookup Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Excel Source.Date]"
                          dataType="date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Excel Source.Date]"
                          name="Excel Source.Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[D of Week]"
                          name="D of Week">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[D of Week]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client]"
                          name="Client">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client Project Name]"
                          name="Client Project Name">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Description]"
                          name="Description">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Description]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Comments]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Comments]"
                          name="Comments">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Comments]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Total Hours]"
                          name="Total Hours">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Time]"
                          name="Start Time">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Time]"
                          name="End Time">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[End Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[UserName]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[UserName]"
                          name="UserName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[UserName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Details]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Details]"
                          name="Details">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[Details]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[TimeStamp]"
                          dataType="date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[TimeStamp]"
                          name="TimeStamp">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[TimeStamp]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Date]"
                          dataType="dbDate"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Date]"
                          name="Copy of Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of D of Week]"
                          name="Copy of D of Week">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of D of Week]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Client]"
                          name="Copy of Client">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Client Project Name]"
                          name="Copy of Client Project Name">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client Project Name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Description]"
                          name="Copy of Description">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Description]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Billable or Non Billable]"
                          name="Copy of Billable or Non Billable">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Billable or Non Billable]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Comments]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Comments]"
                          name="Copy of Comments">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Time]"
                          dataType="dbTime"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Time]"
                          name="Copy of Start Time">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Time]"
                          dataType="dbTime"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Time]"
                          name="Copy of End Time">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Derived Total Hours]"
                          dataType="numeric"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Derived Total Hours]"
                          name="Derived Total Hours"
                          precision="4"
                          scale="2">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Derived Employee Name]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Derived Employee Name]"
                          name="Derived Employee Name">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Derived Table Name]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Derived Table Name]"
                          name="Derived Table Name">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Table Name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Derived Details]"
                          dataType="wstr"
                          length="216"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Derived Details]"
                          name="Derived Details">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeName]"
                          name="EmployeeName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[EmployeeName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Lookup.Date]"
                          dataType="dbDate"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Lookup.Date]"
                          name="Lookup.Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_Lookup]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_Lookup]"
                          name="EmployeeID_Lookup">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped">EmployeeID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          dataType="r4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          name="_Similarity">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          dataType="r4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          name="_Confidence">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">2</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeName]"
                          dataType="r4"
                          description="Column-level similarity score for fuzzy join on column &quot;EmployeeName&quot;."
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeName]"
                          name="_Similarity_EmployeeName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[EmployeeName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">3</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Timesheet_Staging]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Timesheet_Staging]) [refTable]
where [refTable].[Date] = ? and [refTable].[EmployeeName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="StagingID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EmployeeName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Date" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DayOfWeek" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Client" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientProjectName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Description" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Billable" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Comments" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TotalHours" dataType="DT_NUMERIC" length="0" precision="5" scale="2" codePage="0"/&gt;&lt;referenceColumn name="StartTime" dataType="DT_DBTIME2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EndTime" dataType="DT_DBTIME2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]};#{Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input].Columns[Derived Employee Name]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived Employee Name"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">EmployeeName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Date</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[EmployeeName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="100"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[EmployeeName]"
                          name="EmployeeName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">EmployeeName</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Date</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet Container\ExcelToTimesheetTable\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\Multicast.Outputs[Multicast Output 3]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Timesheet]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Date]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of D of Week"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of D of Week]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Client Project Name"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientProjectName]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Client Project Name]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Description"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Description]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Billable or Non Billable"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Billable]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Billable or Non Billable]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Copy of Comments"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Comments]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Derived Total Hours]"
                          cachedDataType="numeric"
                          cachedName="Derived Total Hours"
                          cachedPrecision="4"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Derived Total Hours]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Time]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Time]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeID_Lookup]"
                          cachedDataType="i4"
                          cachedName="EmployeeID_Lookup"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_Lookup]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TimesheetID]"
                          dataType="i4"
                          name="TimesheetID" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          dataType="i4"
                          name="EmployeeID" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          dataType="dbDate"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          dataType="wstr"
                          length="50"
                          name="DayOfWeek" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientProjectName]"
                          dataType="wstr"
                          length="100"
                          name="ClientProjectName" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          dataType="wstr"
                          length="100"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Billable]"
                          dataType="wstr"
                          length="50"
                          name="Billable" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          dataType="wstr"
                          length="255"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          dataType="numeric"
                          name="TotalHours"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          dataType="dbTime2"
                          name="StartTime" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          dataType="dbTime2"
                          name="EndTime" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[AuditLog]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[UserName]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="UserName"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[UserName]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[UserName]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                          cachedDataType="date"
                          cachedName="TimeStamp"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[TimeStamp]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Derived Employee Name]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived Employee Name"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeName]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Employee Name]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Derived Table Name]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Derived Table Name"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[TableName]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Table Name]" />
                        <inputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Derived Details]"
                          cachedDataType="wstr"
                          cachedLength="216"
                          cachedName="Derived Details"
                          externalMetadataColumnId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Details]"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Details]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[LogID]"
                          dataType="i4"
                          name="LogID" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[TableName]"
                          dataType="wstr"
                          length="50"
                          name="TableName" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                          dataType="dbTimeStamp"
                          name="Timestamp" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeName]"
                          dataType="wstr"
                          length="100"
                          name="EmployeeName" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[UserName]"
                          dataType="wstr"
                          length="50"
                          name="UserName" />
                        <externalMetadataColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Details]"
                          dataType="wstr"
                          length="1000"
                          name="Details" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Aggregate Output 1]"
                  endId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                  name="Aggregate Output 1"
                  startId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1]" />
                <path
                  refId="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Audit Output 1]"
                  endId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input]"
                  name="Audit Output 1"
                  startId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1]" />
                <path
                  refId="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Conditional Split Default Output]"
                  endId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input]"
                  name="Conditional Split Default Output"
                  startId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Default Output]" />
                <path
                  refId="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Data Conversion Output]"
                  endId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input]"
                  name="Data Conversion Output"
                  startId="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Derived Column Output]"
                  endId="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Excel Source Output]"
                  endId="Package\Timesheet Container\ExcelToTimesheetTable\Audit.Inputs[Audit Input 1]"
                  name="Excel Source Output"
                  startId="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Fuzzy Lookup Output]"
                  endId="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Fuzzy Lookup Output"
                  startId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Outputs[Fuzzy Lookup Output]" />
                <path
                  refId="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Lookup Match Output]"
                  endId="Package\Timesheet Container\ExcelToTimesheetTable\Multicast.Inputs[Multicast Input 1]"
                  name="Lookup Match Output"
                  startId="Package\Timesheet Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Multicast Output 1]"
                  endId="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1]"
                  name="Multicast Output 1"
                  startId="Package\Timesheet Container\ExcelToTimesheetTable\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Multicast Output 2]"
                  endId="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                  name="Multicast Output 2"
                  startId="Package\Timesheet Container\ExcelToTimesheetTable\Multicast.Outputs[Multicast Output 2]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Timesheet Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{c63f5f83-17ad-43f4-8d19-6c961bc73fd0}"
          DTS:From="Package\Timesheet Container\DisplayPathAndName"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Timesheet Container\ExcelToTimesheetTable" />
      </DTS:PrecedenceConstraints>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Timesheet Container.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{3aba3a24-7fac-4b8f-937f-9c68f5995234}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{2204374c-c494-4bd5-a9f6-29f4e7a24ebc}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Timesheet Container.EventHandlers[OnError]\Execute SQL Task"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{f1136cc1-c648-4a7f-86e0-129bc3773a63}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Execute SQL Task"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{B8EB1F1B-75C0-45BA-B420-434A64DAB86A}"
                  SQLTask:SqlStatementSource="INSERT INTO ErrorLog (FilePath, ErrorMessage) VALUES (?,?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::FilePath"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="255" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="System::ErrorDescription"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="4000" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\Timesheet Container.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{994cac86-eb2d-49cb-8980-e88ef1051984}"
          DTS:EventID="0"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{617ae94a-0f52-4a2f-9840-bb9dc45db631}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{30861C87-BC72-450A-A050-D272A6A6FB17}"
          DTS:ObjectName="{30861C87-BC72-450A-A050-D272A6A6FB17}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Timesheet Table Data Input"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{15574208-9028-4904-8D5E-D92A406A1413}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Timesheet Table Data Input"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client"
              componentClassID="Microsoft.FuzzyLookup"
              contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
              description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
              name="Fuzzy Lookup Client"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                  name="MatchIndexOptions"
                  typeConverter="tcMatchIndexOptions">1</property>
                <property
                  dataType="System.Null"
                  description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                  expressionType="Notify"
                  name="MaxMemoryUsage" />
                <property
                  dataType="System.Null"
                  description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                  name="MatchIndexName"
                  state="escaped" />
                <property
                  dataType="System.String"
                  description="Specifies the name of the reference table or view against which to match incoming records."
                  name="ReferenceTableName"
                  state="escaped">_x005B_dbo_x005D_._x005B_Client_x005D_</property>
                <property
                  dataType="System.Int32"
                  description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                  name="DropExistingMatchIndex">1</property>
                <property
                  dataType="System.Int32"
                  description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                  name="CopyReferenceTable">1</property>
                <property
                  dataType="System.UInt32"
                  description="Specifies the maximum number of fuzzy matches to return for an input record."
                  name="MaxOutputMatchesPerInput">1</property>
                <property
                  dataType="System.Single"
                  description="Specifies the minimum similarity score required for the match results that the transformation returns."
                  name="MinSimilarity">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                  name="Delimiters"
                  state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                <property
                  dataType="System.String"
                  description="Specifies the metadata of the reference table in XML format."
                  name="ReferenceMetadataXml"
                  state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ClientID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ClientName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                <property
                  dataType="System.Boolean"
                  description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                  name="Exhaustive">false</property>
                <property
                  dataType="System.Boolean"
                  description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                  name="WarmCaches">true</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input]"
                  name="Fuzzy Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[StagingID]"
                      cachedDataType="i4"
                      cachedName="StagingID"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[StagingID]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[EmployeeName]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="EmployeeName"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[EmployeeName]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Date]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[DayOfWeek]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DayOfWeek"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[DayOfWeek]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[Client]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Client"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Client]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped">ClientName</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[ClientProjectName]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="ClientProjectName"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[ClientProjectName]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="Description"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Description]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[Billable]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Billable"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Billable]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[Comments]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Comments"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Comments]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[TotalHours]"
                      cachedDataType="numeric"
                      cachedName="TotalHours"
                      cachedPrecision="5"
                      cachedScale="2"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[TotalHours]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[StartTime]"
                      cachedDataType="dbTime2"
                      cachedName="StartTime"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[StartTime]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[EndTime]"
                      cachedDataType="dbTime2"
                      cachedName="EndTime"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[EndTime]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[EmployeeID_LookUp]"
                      cachedDataType="i4"
                      cachedName="EmployeeID_LookUp"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input].Columns[_Similarity_EmployeeName]"
                      cachedDataType="r4"
                      cachedName="_Similarity_EmployeeName"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeName]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output]"
                  name="Fuzzy Lookup Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[StagingID]"
                      dataType="i4"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[StagingID]"
                      name="StagingID">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[StagingID]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[EmployeeName]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[EmployeeName]"
                      name="EmployeeName">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[EmployeeName]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Date]"
                      dataType="dbDate"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Date]"
                      name="Date">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Date]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[DayOfWeek]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[DayOfWeek]"
                      name="DayOfWeek">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[DayOfWeek]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Client]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Client]"
                      name="Client">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Client]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[ClientProjectName]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[ClientProjectName]"
                      name="ClientProjectName">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[ClientProjectName]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Description]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Description]"
                      name="Description">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Description]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Billable]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Billable]"
                      name="Billable">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Billable]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Comments]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Comments]"
                      name="Comments">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Comments]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[TotalHours]"
                      dataType="numeric"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[TotalHours]"
                      name="TotalHours"
                      precision="5"
                      scale="2">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[TotalHours]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[StartTime]"
                      dataType="dbTime2"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[StartTime]"
                      name="StartTime">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[StartTime]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[EndTime]"
                      dataType="dbTime2"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[EndTime]"
                      name="EndTime">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[EndTime]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]"
                      dataType="i4"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]"
                      name="EmployeeID_LookUp">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeName]"
                      dataType="r4"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeName]"
                      name="_Similarity_EmployeeName">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeName]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[ClientID_LookUp]"
                      dataType="i4"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[ClientID_LookUp]"
                      name="ClientID_LookUp">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped">ClientID</property>
                        <property
                          containsID="true"
                          dataType="System.Null"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                      dataType="r4"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                      name="_Similarity">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                      dataType="r4"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                      name="_Confidence">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">2</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[_Similarity_Client]"
                      dataType="r4"
                      description="Column-level similarity score for fuzzy join on column &quot;Client&quot;."
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[_Similarity_Client]"
                      name="_Similarity_Client">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Client]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">3</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee"
              componentClassID="Microsoft.FuzzyLookup"
              contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
              description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
              name="Fuzzy Lookup Employee"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                  name="MatchIndexOptions"
                  typeConverter="tcMatchIndexOptions">1</property>
                <property
                  dataType="System.Null"
                  description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                  expressionType="Notify"
                  name="MaxMemoryUsage" />
                <property
                  dataType="System.Null"
                  description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                  name="MatchIndexName"
                  state="escaped" />
                <property
                  dataType="System.String"
                  description="Specifies the name of the reference table or view against which to match incoming records."
                  name="ReferenceTableName"
                  state="escaped">_x005B_dbo_x005D_._x005B_Employee_x005D_</property>
                <property
                  dataType="System.Int32"
                  description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                  name="DropExistingMatchIndex">1</property>
                <property
                  dataType="System.Int32"
                  description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                  name="CopyReferenceTable">1</property>
                <property
                  dataType="System.UInt32"
                  description="Specifies the maximum number of fuzzy matches to return for an input record."
                  name="MaxOutputMatchesPerInput">1</property>
                <property
                  dataType="System.Single"
                  description="Specifies the minimum similarity score required for the match results that the transformation returns."
                  name="MinSimilarity">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                  name="Delimiters"
                  state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                <property
                  dataType="System.String"
                  description="Specifies the metadata of the reference table in XML format."
                  name="ReferenceMetadataXml"
                  state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_EmployeeID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_EmployeeName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                <property
                  dataType="System.Boolean"
                  description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                  name="Exhaustive">false</property>
                <property
                  dataType="System.Boolean"
                  description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                  name="WarmCaches">true</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input]"
                  name="Fuzzy Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input].Columns[StagingID]"
                      cachedDataType="i4"
                      cachedName="StagingID"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[StagingID]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input].Columns[EmployeeName]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="EmployeeName"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeName]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped">EmployeeName</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Date]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input].Columns[DayOfWeek]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DayOfWeek"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[DayOfWeek]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input].Columns[Client]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Client"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input].Columns[ClientProjectName]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="ClientProjectName"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientProjectName]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="Description"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Description]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input].Columns[Billable]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Billable"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Billable]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input].Columns[Comments]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Comments"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Comments]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input].Columns[TotalHours]"
                      cachedDataType="numeric"
                      cachedName="TotalHours"
                      cachedPrecision="5"
                      cachedScale="2"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[TotalHours]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input].Columns[StartTime]"
                      cachedDataType="dbTime2"
                      cachedName="StartTime"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[StartTime]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input].Columns[EndTime]"
                      cachedDataType="dbTime2"
                      cachedName="EndTime"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EndTime]">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Name of the reference table column with which the input column should be matched."
                          name="JoinToReferenceColumn"
                          state="escaped" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the match is a fuzzy or an exact match."
                          name="JoinType"
                          typeConverter="tcJoinType">2</property>
                        <property
                          dataType="System.Single"
                          description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                          name="MinSimilarity">0</property>
                        <property
                          dataType="System.UInt32"
                          description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                          name="FuzzyComparisonFlags"
                          typeConverter="tcComparisonFlags">1</property>
                        <property
                          dataType="System.UInt32"
                          description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                          name="FuzzyComparisonFlagsEx"
                          typeConverter="tcComparisonFlagsEx">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output]"
                  name="Fuzzy Lookup Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[StagingID]"
                      dataType="i4"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[StagingID]"
                      name="StagingID">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[StagingID]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[EmployeeName]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[EmployeeName]"
                      name="EmployeeName">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeName]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Date]"
                      dataType="dbDate"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Date]"
                      name="Date">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Date]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[DayOfWeek]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[DayOfWeek]"
                      name="DayOfWeek">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[DayOfWeek]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Client]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Client]"
                      name="Client">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[ClientProjectName]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[ClientProjectName]"
                      name="ClientProjectName">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientProjectName]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Description]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Description]"
                      name="Description">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Description]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Billable]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Billable]"
                      name="Billable">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Billable]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Comments]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[Comments]"
                      name="Comments">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Comments]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[TotalHours]"
                      dataType="numeric"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[TotalHours]"
                      name="TotalHours"
                      precision="5"
                      scale="2">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[TotalHours]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[StartTime]"
                      dataType="dbTime2"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[StartTime]"
                      name="StartTime">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[StartTime]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[EndTime]"
                      dataType="dbTime2"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[EndTime]"
                      name="EndTime">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EndTime]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]"
                      dataType="i4"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]"
                      name="EmployeeID_LookUp">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped">EmployeeID</property>
                        <property
                          containsID="true"
                          dataType="System.Null"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID" />
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                      dataType="r4"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                      name="_Similarity">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                      dataType="r4"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                      name="_Confidence">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">2</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeName]"
                      dataType="r4"
                      description="Column-level similarity score for fuzzy join on column &quot;EmployeeName&quot;."
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output].Columns[_Similarity_EmployeeName]"
                      name="_Similarity_EmployeeName">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the reference table column that is copied to the output for each match result."
                          name="CopyFromReferenceColumn"
                          state="escaped" />
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                          name="SourceInputColumnLineageID">#{Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeName]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies whether the column is used to indicate confidence or similarity."
                          name="ColumnType"
                          typeConverter="tcColumnType">3</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Timesheet Table Data Input\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Timesheet]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Timesheet]) [refTable]
where [refTable].[Date] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="TimesheetID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EmployeeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Date" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DayOfWeek" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientProjectName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Description" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Billable" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Comments" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TotalHours" dataType="DT_NUMERIC" length="0" precision="5" scale="2" codePage="0"/&gt;&lt;referenceColumn name="StartTime" dataType="DT_DBTIME2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EndTime" dataType="DT_DBTIME2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Date]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Timesheet Table Data Input\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Timesheet Table Data Input\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\Lookup.Inputs[Lookup Input].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Date]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Date</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Timesheet Table Data Input\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[EmployeeID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[EmployeeID]"
                      name="EmployeeID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">EmployeeID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[ClientID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[ClientID]"
                      name="ClientID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ClientID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[Date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup Match Output].Columns[Date]"
                      name="Date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Date</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Timesheet Table Data Input\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Timesheet Table Data Input\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Timesheet Table Data Input\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Timesheet]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Timesheet Table Data Input\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Date]"
                      cachedDataType="dbDate"
                      cachedName="Date"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Date]" />
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DayOfWeek]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DayOfWeek"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[DayOfWeek]" />
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientProjectName]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="ClientProjectName"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientProjectName]"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[ClientProjectName]" />
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Description]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="Description"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Description]" />
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Billable]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Billable"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Billable]"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Billable]" />
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Comments]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Comments"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[Comments]" />
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TotalHours]"
                      cachedDataType="numeric"
                      cachedName="TotalHours"
                      cachedPrecision="5"
                      cachedScale="2"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[TotalHours]" />
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StartTime]"
                      cachedDataType="dbTime2"
                      cachedName="StartTime"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[StartTime]" />
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EndTime]"
                      cachedDataType="dbTime2"
                      cachedName="EndTime"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[EndTime]" />
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeID_LookUp]"
                      cachedDataType="i4"
                      cachedName="EmployeeID_LookUp"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[EmployeeID_LookUp]" />
                    <inputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientID_LookUp]"
                      cachedDataType="i4"
                      cachedName="ClientID_LookUp"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                      lineageId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output].Columns[ClientID_LookUp]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TimesheetID]"
                      dataType="i4"
                      name="TimesheetID" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                      dataType="i4"
                      name="ClientID" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                      dataType="dbDate"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                      dataType="wstr"
                      length="50"
                      name="DayOfWeek" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientProjectName]"
                      dataType="wstr"
                      length="100"
                      name="ClientProjectName" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                      dataType="wstr"
                      length="100"
                      name="Description" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Billable]"
                      dataType="wstr"
                      length="50"
                      name="Billable" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                      dataType="wstr"
                      length="255"
                      name="Comments" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                      dataType="numeric"
                      name="TotalHours"
                      precision="5"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                      dataType="dbTime2"
                      name="StartTime" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                      dataType="dbTime2"
                      name="EndTime" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Timesheet Table Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Timesheet Table Data Input\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Timesheet_Staging]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Timesheet Table Data Input\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[StagingID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StagingID]"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[StagingID]"
                      name="StagingID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EmployeeName]"
                      length="100"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmployeeName]"
                      name="EmployeeName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Date]"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Date]"
                      name="Date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[DayOfWeek]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[DayOfWeek]"
                      length="50"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[DayOfWeek]"
                      name="DayOfWeek"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client]"
                      length="50"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client]"
                      name="Client"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientProjectName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientProjectName]"
                      length="100"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientProjectName]"
                      name="ClientProjectName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Description]"
                      length="100"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Description]"
                      name="Description"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Billable]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Billable]"
                      length="50"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Billable]"
                      name="Billable"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Comments]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Comments]"
                      length="255"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[Comments]"
                      name="Comments"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[TotalHours]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TotalHours]"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[TotalHours]"
                      name="TotalHours"
                      precision="5"
                      scale="2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[StartTime]"
                      dataType="dbTime2"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StartTime]"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[StartTime]"
                      name="StartTime"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EndTime]"
                      dataType="dbTime2"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EndTime]"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].Columns[EndTime]"
                      name="EndTime"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StagingID]"
                      dataType="i4"
                      name="StagingID" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EmployeeName]"
                      dataType="wstr"
                      length="100"
                      name="EmployeeName" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Date]"
                      dataType="dbDate"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[DayOfWeek]"
                      dataType="wstr"
                      length="50"
                      name="DayOfWeek" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client]"
                      dataType="wstr"
                      length="50"
                      name="Client" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientProjectName]"
                      dataType="wstr"
                      length="100"
                      name="ClientProjectName" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Description]"
                      dataType="wstr"
                      length="100"
                      name="Description" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Billable]"
                      dataType="wstr"
                      length="50"
                      name="Billable" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Comments]"
                      dataType="wstr"
                      length="255"
                      name="Comments" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TotalHours]"
                      dataType="numeric"
                      name="TotalHours"
                      precision="5"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StartTime]"
                      dataType="dbTime2"
                      name="StartTime" />
                    <externalMetadataColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EndTime]"
                      dataType="dbTime2"
                      name="EndTime" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StagingID]"
                      dataType="i4"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StagingID]"
                      name="StagingID" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EmployeeName]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EmployeeName]"
                      name="EmployeeName" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Date]"
                      dataType="dbDate"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[DayOfWeek]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[DayOfWeek]"
                      name="DayOfWeek" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client]"
                      name="Client" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientProjectName]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientProjectName]"
                      name="ClientProjectName" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Description]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Description]"
                      name="Description" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Billable]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Billable]"
                      name="Billable" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Comments]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Comments]"
                      name="Comments" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TotalHours]"
                      dataType="numeric"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TotalHours]"
                      name="TotalHours"
                      precision="5"
                      scale="2" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StartTime]"
                      dataType="dbTime2"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StartTime]"
                      name="StartTime" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EndTime]"
                      dataType="dbTime2"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EndTime]"
                      name="EndTime" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Timesheet Table Data Input.Paths[Fuzzy Lookup Output]"
              endId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Inputs[Fuzzy Lookup Input]"
              name="Fuzzy Lookup Output"
              startId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Outputs[Fuzzy Lookup Output]" />
            <path
              refId="Package\Timesheet Table Data Input.Paths[Fuzzy Lookup Output1]"
              endId="Package\Timesheet Table Data Input\Lookup.Inputs[Lookup Input]"
              name="Fuzzy Lookup Output"
              startId="Package\Timesheet Table Data Input\Fuzzy Lookup Client.Outputs[Fuzzy Lookup Output]" />
            <path
              refId="Package\Timesheet Table Data Input.Paths[Lookup No Match Output]"
              endId="Package\Timesheet Table Data Input\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Timesheet Table Data Input\Lookup.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Timesheet Table Data Input.Paths[OLE DB Source Output]"
              endId="Package\Timesheet Table Data Input\Fuzzy Lookup Employee.Inputs[Fuzzy Lookup Input]"
              name="OLE DB Source Output"
              startId="Package\Timesheet Table Data Input\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Timesheet_Staging Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:Disabled="True"
      DTS:DTSID="{7367492C-5A9F-4F2E-8B3D-3804A78FD7B1}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Timesheet_Staging Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{3A1615BF-7494-437A-AABA-3D8784A88DCB}"
        DTS:ObjectName="{3A1615BF-7494-437A-AABA-3D8784A88DCB}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\Kiaan Patel\OneDrive - Northern Data (Pty) Ltd\Documents\CodeCrusaders_TimeSheets" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Timesheet_Staging Container\DisplayPathAndName"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{75C9AD65-975A-407B-94A7-88AFCFAE1631}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="DisplayPathAndName"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_f7d2023eedb5464098d7dd00249ad42d"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FilePath"
              ReadWriteVariables="User::EmployeeName">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f7d2023eedb5464098d7dd00249ad42d.Properties.Settings.get_Default():ST_f7d2023eedb5464098d7dd00249ad42d.Properties.Sett" +
    "ings")]

namespace ST_f7d2023eedb5464098d7dd00249ad42d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_f7d2023eedb5464098d7dd00249ad42d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            MessageBox.Show(Dts.Variables["User::FilePath"].Value.ToString());
            string employee = Path.GetFileNameWithoutExtension(Dts.Variables["User::FilePath"].Value.ToString()).Split('_')[0];            
            Dts.Variables["User::EmployeeName"].Value = employee;
            MessageBox.Show(employee);
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_f7d2023eedb5464098d7dd00249ad42d.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7BB15355-2495-48A6-871F-8B80DEF2A05D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f7d2023eedb5464098d7dd00249ad42d</RootNamespace>
    <AssemblyName>ST_f7d2023eedb5464098d7dd00249ad42d</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f7d2023eedb5464098d7dd00249ad42d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f7d2023eedb5464098d7dd00249ad42d</msb:DisplayName>
    <msb:ProjectId>{6C8ADEA8-F55F-45D5-B86F-1E1176B016B4}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f7d2023eedb5464098d7dd00249ad42d.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f7d2023eedb5464098d7dd00249ad42d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_f7d2023eedb5464098d7dd00249ad42d")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f7d2023eedb5464098d7dd00249ad42d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f7d2023eedb5464098d7dd00249ad42d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f7d2023eedb5464098d7dd00249ad42d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f7d2023eedb5464098d7dd00249ad42d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f7d2023eedb5464098d7dd00249ad42d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_f7d2023eedb5464098d7dd00249ad42d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFBFQGgAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAA7i4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJwuAABPAAAAAEAAAIAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9A4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIAEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
LgAAAAAAAEgAAAACAAUAUCEAAJQMAAABAAAAAAAAAOQtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQCLAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAooFQAACiYCKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAKKBYAAAoXjR4AAAEl
Fh9fnW8XAAAKFpoKAigQAAAKbxEAAApyHwAAcG8SAAAKBm8YAAAKBigVAAAKJgIoEAAAChZvGQAA
CioeAigaAAAKKh4CKBsAAAoqrn4BAAAELR5yRQAAcNADAAACKBwAAApvHQAACnMeAAAKgAEAAAR+
AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoHwAACioucwgAAAaAAwAABCoAAABCU0pCAQAB
AAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAIBAAAI34AAHQEAADQBQAAI1N0cmluZ3MAAAAA
RAoAALgAAAAjVVMA/AoAABAAAAAjR1VJRAAAAAwLAACIAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJ
AwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAfAAAAAgAAABAAAAABAAAAAgAAAAMA
AAAEAAAAAQAAAAUAAAABAAAAAQAAAAAAjgMBAAAAAAAGAC8CfwQGAL4CfwQGAHsBbAQPAPMEAAAG
AKgBKAQGABICKAQGAPMBKAQGAKUCKAQGAE8CKAQGAGgCKAQGAL8BKAQGANoB9gIKAIMCPQMKAPoA
PQMGAMYDvwMGAF4BbAQGAHsFvwMGAE8EnwQGADoEEwQOAC4BeAMOAI8BeAMOABYB/gMGAEMBfwQK
AGYDPQMSADUFpQASAHgApQAWALUFSAUWAJQFSAUGABkDCgAGAEYEvwMGABIDvwMGAMUAvwMGAIEA
vwMGAMQFKAQAAAAAAQAAAAAAAQABAAEAEADXA0QAOQABAAEAAAAQAKYEAgVFAAEAAwAAARAAPwUC
BVkAAwAHAAMBAABtBQAAPQAEAAoAEQDLA4EAEQDqAIUAEQBoAIkABgYzAI0AVoBdBZAAVoDKAJAA
UCAAAAAAhgDdAwYAAQDnIAAAAACGGF8EBgABAO8gAAAAAIMYXwQGAAEA9yAAAAAAkwhLBJQAAQAj
IQAAAACTCNIAmQABACohAAAAAJMI3gCeAAEAMiEAAAAAlgiIBaQAAgA5IQAAAACGGF8EBgACAEEh
AAAAAJEYZQSpAAIAAAABAPACCQBfBAEAEQBfBAYAGQBfBAoAKQBfBBAAMQBfBBAAOQBfBBAAQQBf
BBAASQBfBBAAUQBfBBAAWQBfBBAAYQBfBBAAaQBfBAYAgQBfBAYAqQBfBBUAuQBfBAYAcQBlBR8A
wQAxBSQAyQC2AykA0QDcAi8AiQAQAzMA2QCwBTcA6QDiAz0A+QCCBUIA0QDmAkkAwQChBQEAcQBf
BAYAiQBfBAYAAQGTAE4AAQHABVcAkQBfBF0AsQBfBAYACAAUAHcACAAYAHwAKQBzAOQALgALALwA
LgATAMUALgAbAOQALgAjAO0ALgArABYBLgAzABYBLgA7ABwBLgBDAO0ALgBLACQBLgBTABYBLgBb
AD0BQwBjAHwASQBzAOQAYQB7AHwAYwBrAHwAGwADAAEABAADAAAATwStAAAA8gCyAAAAjAW3AAIA
BAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAARiR4agAAAAAAAEQAAAAEAAAAAAAAAAAAAABl
ADsAAAAAABAAAAAAAAAAAAAAAG4AHgMAAAAABAAAAAAAAAAAAAAAZQC/AwAAAAAQAAAAAAAAAAAA
AABuABQAAAAAAAQAAAAAAAAAAAAAAGUASAUAAAAAAAAAAAEAAACwBAAABQACAAAAAAAAPE1vZHVs
ZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29y
bGliAFNUX2Y3ZDIwMjNlZWRiNTQ2NDA5OGQ3ZGQwMDI0OWFkNDJkAGRlZmF1bHRJbnN0YW5jZQBW
YXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBy
ZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1Zh
bHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAUGF0aABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZjdkMjAy
M2VlZGI1NDY0MDk4ZDdkZDAwMjQ5YWQ0MmQuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291
cmNlTWFuAFNjcmlwdE1haW4AR2V0RmlsZU5hbWVXaXRob3V0RXh0ZW5zaW9uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJ
bmZvAENoYXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0
aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9m
N2QyMDIzZWVkYjU0NjQwOThkN2RkMDAyNDlhZDQyZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZjdkMjAyM2VlZGI1NDY0MDk4ZDdkZDAwMjQ5YWQ0MmQu
UHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN5c3RlbS5XaW5kb3dzLkZvcm1zAFN1
Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABTcGxpdABnZXRfRGVmYXVsdABEaWFs
b2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU2hvdwBNZXNzYWdlQm94AGdldF9Bc3NlbWJseQAAAAAA
HVUAcwBlAHIAOgA6AEYAaQBsAGUAUABhAHQAaAAAJVUAcwBlAHIAOgA6AEUAbQBwAGwAbwB5AGUA
ZQBOAGEAbQBlAABxUwBUAF8AZgA3AGQAMgAwADIAMwBlAGUAZABiADUANAA2ADQAMAA5ADgAZAA3
AGQAZAAwADAAMgA0ADkAYQBkADQAMgBkAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAlFnxq3SG3EOsR+TL6MnvjQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERUQMH
AQ4EIAASYQQgABJlBSABEmkcAyAAHAMgAA4FAAERcQ4EAAEODgYgAR0OHQMEIAEBHAgAARKAgRGA
hQUgABKAiQcgAgEOEoCJCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIG
CAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9mN2QyMDIzZWVkYjU0
NjQwOThkN2RkMDAyNDlhZDQyZAAABQEAAAAABwEAAkhQAAAYAQATQ29weXJpZ2h0IEAgSFAgMjAy
NQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRIuTkVUIEZyYW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMQuAAAAAAAAAAAAAN4uAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADQLgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAACIEAAAAAAAAAAAAACIENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQB4akYkAAABAHhqRiQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsASCAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABeAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkA
bwBuAAAAAABTAFQAXwBmADcAZAAyADAAMgAzAGUAZQBkAGIANQA0ADYANAAwADkAOABkADcAZABk
ADAAMAAyADQAOQBhAGQANAAyAGQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEA
LgAwAC4AOQAyADgANgAuADIANwAyADUANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAFQAXwBmADcAZAAyADAAMgAzAGUAZQBkAGIANQA0ADYANAAwADkAOABkADcAZABkADAA
MAAyADQAOQBhAGQANAAyAGQALgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn
AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADUAAAAqAAEAAQBMAGUA
ZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABG
AGkAbABlAG4AYQBtAGUAAABTAFQAXwBmADcAZAAyADAAMgAzAGUAZQBkAGIANQA0ADYANAAwADkA
OABkADcAZABkADAAMAAyADQAOQBhAGQANAAyAGQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBj
AHQATgBhAG0AZQAAAAAAUwBUAF8AZgA3AGQAMgAwADIAMwBlAGUAZABiADUANAA2ADQAMAA5ADgA
ZAA3AGQAZAAwADAAMgA0ADkAYQBkADQAMgBkAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA5ADIAOAA2AC4AMgA3ADIANQA2AAAAAABGAA8AAQBBAHMAcwBlAG0A
YgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA5ADIAOAA2AC4AMgA3ADIANQA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADwPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{A74013BA-A926-4B7F-A200-36A7599874E8}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="ExcelToTimesheetTable"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{0DC21F13-B1E9-47B7-A41D-B55BC5E0BEEF}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{DAA6A62C-9E4F-40F3-AFC3-052A9BFDB950}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.EventHandlers[OnError]\Execute SQL Task"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{B286A95C-EF82-4968-9885-F65D5CECC8E6}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Execute SQL Task"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate"
                  componentClassID="Microsoft.Aggregate"
                  contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
                  name="Aggregate"
                  version="3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                      name="CountDistinctScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                      name="CountDistinctKeys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                      name="AutoExtendFactor">25</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1]"
                      name="Aggregate Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1].Columns[UserName]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="UserName"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[UserName]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1].Columns[TimeStamp]"
                          cachedDataType="date"
                          cachedName="TimeStamp"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[TimeStamp]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1].Columns[Derived Employee Name]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived Employee Name"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1].Columns[Derived Table Name]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Derived Table Name"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Table Name]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1].Columns[Derived Details]"
                          cachedDataType="wstr"
                          cachedLength="216"
                          cachedName="Derived Details"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1]"
                      name="Aggregate Output 1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                          name="KeyScale"
                          typeConverter="KeyScaleType">0</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                          name="Keys" />
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[UserName]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[UserName]"
                          name="UserName">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[UserName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Details]"
                          dataType="wstr"
                          length="216"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Details]"
                          name="Derived Details">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[TimeStamp]"
                          dataType="date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[TimeStamp]"
                          name="TimeStamp">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[TimeStamp]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Employee Name]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Employee Name]"
                          name="Derived Employee Name">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Table Name]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Table Name]"
                          name="Derived Table Name">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Table Name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit"
                  componentClassID="Microsoft.Lineage"
                  contactInfo="Audit;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Includes data about the environment in which the package runs. Map system variables to new output columns. For example, add the name of the computer and operator to the data flow."
                  name="Audit">
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Inputs[Audit Input 1]"
                      name="Audit Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1]"
                      exclusionGroup="1"
                      name="Audit Output 1"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Inputs[Audit Input 1]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[UserName]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[UserName]"
                          name="UserName">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies which audit item this column produces."
                              name="LineageItemSelected"
                              typeConverter="LineageItemSelected">6</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[Details]"
                          dataType="wstr"
                          length="64"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[Details]"
                          name="Details">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies which audit item this column produces."
                              name="LineageItemSelected"
                              typeConverter="LineageItemSelected">7</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[TimeStamp]"
                          dataType="date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[TimeStamp]"
                          name="TimeStamp">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies which audit item this column produces."
                              name="LineageItemSelected"
                              typeConverter="LineageItemSelected">4</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input].Columns[Derived Total Hours]"
                          cachedDataType="numeric"
                          cachedName="Derived Total Hours"
                          cachedPrecision="4"
                          cachedScale="2"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Outputs[NullTimes]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="NullTimes"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]}) || [ISNULL](#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]}) || [ISNULL](#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL([Copy of Start Time]) || ISNULL([Copy of End Time]) || ISNULL([Derived Total Hours])</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[D of Week]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Description]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Comments]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Start Time]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[End Time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]"
                          name="Copy of Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of D of Week]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of D of Week]"
                          name="Copy of D of Week"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[D of Week]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client]"
                          name="Copy of Client"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client Project Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client Project Name]"
                          name="Copy of Client Project Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Description]"
                          name="Copy of Description"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Description]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Billable or Non Billable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Billable or Non Billable]"
                          name="Copy of Billable or Non Billable"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="4000"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]"
                          name="Copy of Comments"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Comments]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]"
                          dataType="dbTime"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]"
                          name="Copy of Start Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]"
                          dataType="dbTime"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]"
                          name="Copy of End Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[End Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input].Columns[Details]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="Details"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[Details]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]"
                          name="Derived Total Hours"
                          precision="4"
                          scale="2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_NUMERIC,4,2)(([DATEDIFF]("ss",#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]},#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]}) / 3600.0))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_NUMERIC,4,2)((DATEDIFF("ss",[Copy of Start Time],[Copy of End Time]) / 3600.0))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]"
                          name="Derived Employee Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::EmployeeName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::EmployeeName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Table Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Table Name]"
                          name="Derived Table Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::TableName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::TableName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="216"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Details]"
                          name="Derived Details"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Task: " + #{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1].Columns[Details]} + "; " + "File Path: " + @[User::FilePath]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Task: " + Details + "; " + "File Path: " + @[User::FilePath]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Outputs[Derived Column Output].Columns[Derived File Path]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Outputs[Derived Column Output].Columns[Derived File Path]"
                          name="Derived File Path"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::FilePath]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::FilePath]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Sheet1</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          name="D of Week"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          name="Client"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          name="Client Project Name"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          length="4000"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          name="Comments"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          name="Total Hours"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          name="Start Time"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          name="End Time"
                          truncationRowDisposition="RedirectRow" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          dataType="date"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          dataType="wstr"
                          length="255"
                          name="D of Week" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          dataType="wstr"
                          length="255"
                          name="Client" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          name="Client Project Name" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          name="Billable or Non Billable" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          dataType="wstr"
                          length="255"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          dataType="date"
                          name="Total Hours" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          dataType="date"
                          name="Start Time" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          dataType="date"
                          name="End Time" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          name="D of Week" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          name="Client Project Name" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          name="Total Hours" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          name="End Time" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Timesheet_Staging]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Timesheet_Staging]) [refTable]
where [refTable].[Date] = ? and [refTable].[EmployeeName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="StagingID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EmployeeName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Date" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DayOfWeek" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Client" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientProjectName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Description" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Billable" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Comments" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TotalHours" dataType="DT_NUMERIC" length="0" precision="5" scale="2" codePage="0"/&gt;&lt;referenceColumn name="StartTime" dataType="DT_DBTIME2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EndTime" dataType="DT_DBTIME2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]};#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input].Columns[Derived Employee Name]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived Employee Name"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">EmployeeName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Date</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[EmployeeName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="100"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[EmployeeName]"
                          name="EmployeeName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">EmployeeName</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Date</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[StartTime]"
                          dataType="dbTime2"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[StartTime]"
                          name="StartTime"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">StartTime</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[EndTime]"
                          dataType="dbTime2"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Match Output].Columns[EndTime]"
                          name="EndTime"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">EndTime</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Multicast.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Multicast.Outputs[Multicast Output 2]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Timesheet_Staging]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Derived Employee Name]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived Employee Name"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeName]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Employee Name]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of D of Week"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of D of Week]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Client"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Client Project Name"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientProjectName]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Client Project Name]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Description"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Description]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Copy of Billable or Non Billable"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Billable]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Billable or Non Billable]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Copy of Comments"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Derived Total Hours]"
                          cachedDataType="numeric"
                          cachedName="Derived Total Hours"
                          cachedPrecision="4"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output].Columns[Derived Total Hours]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeName]"
                          dataType="wstr"
                          length="100"
                          name="EmployeeName" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          dataType="dbDate"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          dataType="wstr"
                          length="50"
                          name="DayOfWeek" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client]"
                          dataType="wstr"
                          length="50"
                          name="Client" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientProjectName]"
                          dataType="wstr"
                          length="100"
                          name="ClientProjectName" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          dataType="wstr"
                          length="100"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Billable]"
                          dataType="wstr"
                          length="50"
                          name="Billable" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          dataType="wstr"
                          length="255"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          dataType="numeric"
                          name="TotalHours"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          dataType="dbTime2"
                          name="StartTime" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          dataType="dbTime2"
                          name="EndTime" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StagingID]"
                          dataType="i4"
                          name="StagingID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[AuditLog_Staging]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[UserName]"
                          cachedDataType="wstr"
                          cachedLength="64"
                          cachedName="UserName"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[UserName]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[UserName]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[TimeStamp]"
                          cachedDataType="date"
                          cachedName="TimeStamp"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[TimeStamp]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Derived Table Name]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Derived Table Name"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[TableName]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Table Name]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Derived Employee Name]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Derived Employee Name"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Employee Name]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Derived Details]"
                          cachedDataType="wstr"
                          cachedLength="216"
                          cachedName="Derived Details"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Details]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1].Columns[Derived Details]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[LogID]"
                          dataType="i4"
                          name="LogID" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[TableName]"
                          dataType="wstr"
                          length="50"
                          name="TableName" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                          dataType="dbTimeStamp"
                          name="Timestamp" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          dataType="wstr"
                          length="100"
                          name="EmployeeID" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[UserName]"
                          dataType="wstr"
                          length="50"
                          name="UserName" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Details]"
                          dataType="wstr"
                          length="255"
                          name="Details" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 2"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorLog]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[Derived File Path]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Derived File Path"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[FilePath]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Outputs[Derived Column Output].Columns[Derived File Path]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].Columns[ErrorMessage]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="ErrorMessage"
                          externalMetadataColumnId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorMessage]"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Script Component.Outputs[Output 0].Columns[ErrorMessage]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorID]"
                          dataType="i4"
                          name="ErrorID" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[FilePath]"
                          dataType="wstr"
                          length="255"
                          name="FilePath" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[ErrorMessage]"
                          dataType="wstr"
                          length="4000"
                          name="ErrorMessage" />
                        <externalMetadataColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                          dataType="dbTimeStamp"
                          name="Timestamp" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if (Row.ErrorCode != 0) // Check if an error occurred
        {
            string errorMessage = Row.ErrorCode.ToString() + " - " + ComponentMetaData.GetErrorDescription(Row.ErrorCode);
            Row.ErrorMessage = errorMessage;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String ErrorMessage
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ErrorMessage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_cc5878d8a1794c8e95df94fe0aa68be8.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C05AC554-1FA1-4D67-96DB-81B9B3BB243B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_cc5878d8a1794c8e95df94fe0aa68be8</RootNamespace>
    <AssemblyName>SC_cc5878d8a1794c8e95df94fe0aa68be8</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cc5878d8a1794c8e95df94fe0aa68be8.Properties.Settings.get_Default():SC_cc5878d8a1794c8e95df94fe0aa68be8.Properties.Sett" +
    "ings")]

namespace SC_cc5878d8a1794c8e95df94fe0aa68be8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_cc5878d8a1794c8e95df94fe0aa68be8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_cc5878d8a1794c8e95df94fe0aa68be8</msb:DisplayName>
    <msb:ProjectId>{B115A8E4-9BFD-4BCA-8353-E4ADFE9CAB8E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_cc5878d8a1794c8e95df94fe0aa68be8.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_cc5878d8a1794c8e95df94fe0aa68be8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_cc5878d8a1794c8e95df94fe0aa68be8")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cc5878d8a1794c8e95df94fe0aa68be8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cc5878d8a1794c8e95df94fe0aa68be8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cc5878d8a1794c8e95df94fe0aa68be8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_cc5878d8a1794c8e95df94fe0aa68be8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_cc5878d8a1794c8e95df94fe0aa68be8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_cc5878d8a1794c8e95df94fe0aa68be8.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALsiSGgAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAVjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAQzAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAXBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA4
MwAAAAAAAEgAAAACAAUA/CEAAFAQAAABAAAAAAAAAEwyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQAOgAAAAEAABEDbwYAAAYs
MQNvBgAABgsSASgSAAAKcgEAAHACKBMAAAoDbwYAAAZvFAAACigVAAAKCgMGbwoAAAYqHgIoDgAA
BioqAgMEBSgWAAAKKlICexcAAAoCexgAAAoWlG8ZAAAKKiICFigaAAAKKlICexcAAAoCexgAAAoX
lG8ZAAAKKiICFygaAAAKKiYCGAMoGwAACipaAywIAhgoHAAACipyCQAAcHMdAAAKeh4CKB4AAAoq
HgIoHwAACip+AiggAAAKAgJzEgAABn0BAAAEAgJzEwAABn0CAAAEKpIEcqYAAHAabyEAAAosFQIF
AgMoIgAACg4EcwUAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6AigjAAAKAgN9AwAABCo6
AigjAAAKAgN9BAAABCoeAigjAAAKKq5+BQAABC0ecrYAAHDQBwAAAigkAAAKbyUAAApzJgAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4CKCcAAAoqLnMZAAAGgAcAAAQqQlNKQgEA
AQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA2AUAACN+AABEBgAACAcAACNTdHJpbmdzAAAA
AEwNAAAoAQAAI1VTAHQOAAAQAAAAI0dVSUQAAACEDgAAzAEAACNCbG9iAAAAAAAAAAIAAAFXFaIB
CQEAAAD6ATMAFgAAAQAAACEAAAAIAAAABwAAABoAAAAPAAAAJwAAABAAAAABAAAAAwAAAAkAAAAK
AAAAAQAAAAUAAAABAAAAAABDAwEAAAAAAAYAOwI3BQYAzwI3BQYAhwEkBQ8AqwUAAAYAtAEYBAYA
HgIYBAYA/wEYBAYAtgIYBAYAWwIYBAYAdAIYBAYAywEYBAYA5gEKAwoAjwLUAAoAzQTUAA4AvgTU
AAoAdQTUAAoAeAbUAAYAOwbAAwYAagEkBQYA3gRXBQYAaQQDBBIAOgEtAxIAmwEtAxIAIgHuAwYA
TwE3BQYAHQDAAxYAAQDuBAYAJgPAAwYAKgTAAwYAWATAAwYA9QDAAwYApgDAAwYA/QYYBAAAAABH
AAAAAAABAAEAAQAQANMDAAAQAAEAAQABABAAsQQAADkAAQAFAAEAEABaBgAARQABAA4AAQAQACgG
AABJAAMAEgABABAA6QUAAEkABAATAAAAEABeBboFSQAFABQAAAEQABgGugVhAAcAGAAGACgGkAAG
AOkFlAABAGgGmAABAGgGmAARAMcDnAARABIBoAARAHcApABQIAAAAADGAO0CBgABAFggAAAAAMYA
+AIGAAEAYCAAAAAAxgDaBqgAAQCmIAAAAACGGBcFBgACAK4gAAAAAIYYFwU1AAIAuSAAAAAAhgiH
AK4ABQDOIAAAAACGCGsDVwAFANcgAAAAAIYI3gOuAAUA7CAAAAAAhgiYA1cABQD1IAAAAACGCJUA
EAAFAP8gAAAAAIYIgAOyAAYAFiEAAAAAhgDxBlcABwAeIQAAAACGAEIGVwAHACYhAAAAAIYYFwUG
AAcARiEAAAAAxgDNBrcABwBrIQAAAADGAcYGqAALAH4hAAAAAMYB2gaoAAwAgCEAAAAAhhgXBcEA
DQCPIQAAAACGGBcFwQAOAJ4hAAAAAIMYFwUGAA8ApiEAAAAAkwjaBMcADwDSIQAAAACTCPoAzAAP
ANkhAAAAAJMIBgHRAA8A4SEAAAAAlghOBtcAEADoIQAAAACGGBcFBgAQAPAhAAAAAJEYHQXcABAA
AAABAPUGAAABANMEAAACAPMFAAADAIMEAAABAAQDAAABAAQDAAABAFAAAAACAMoAAAADANMEAAAE
AIMEAAABANMEAAABAPUGAAABAH4GAAABAH4GAAABAAQDCQAXBQEAEQAXBQYAGQAXBQoAKQAXBRAA
MQAXBRAAOQAXBRAAQQAXBRAASQAXBRAAUQAXBRAAWQAXBRAAYQAXBRAAaQAXBQYAmQAXBQYAuQAX
BRUAyQAXBQYAiQDtAgYAiQD4AgYA0QAkAyAAiQBYACQA2QBEBCkA4QA0Bi4AcQAXBTUAcQDTBD8A
cQDzBUMAeQAaAEcAcQCoA0wAcQC3A1EAcQCvAwEA6QAXBRAAcQDxBlcAcQBCBlcAiQAXBQYA4QAh
BlsAiQAHBmIAkQAXBQYA+QC4AGgA+QD5BnAAoQAXBXYAwQAXBQYALgALAPsALgATAAQBLgAbACMB
LgAjACwBLgArAFUBLgAzAFUBLgA7AFsBLgBDACwBLgBLAGMBLgBTAFUBLgBbAHwBQwBjAMYB4QB7
AMYB4wBrAMYB6QBzACMBCQFzACMBGwADAAEABwAHAAgACQAAAIsA4AAAAG8D5AAAAOID4AAAAJwD
5AAAAJkA6AAAAIQD5AAAAN4E7AAAABoB8QAAAFIG9gACAAYAAwACAAcABQACAAgABwACAAkACQAB
AAoACwABAAsADQACABUADwACABYAEQABABcAEQACABgAEwAEgAAAAQAAAAAAAAAAAAAAAAAjAAAA
BAAAAAAAAAAAAAAAfgBuAAAAAAAQAAAAAAAAAAAAAACHAIgGAAAAABAAAAAAAAAAAAAAAIcApQYA
AAAABAAAAAAAAAAAAAAAfgDAAwAAAAAQAAAAAAAAAAAAAACHAI0EAAAAAAAAAAABAAAAaAUAAAAA
AAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAEdldEludDMyAFNDX2NjNTg3OGQ4YTE3OTRjOGU5
NWRmOTRmZTBhYTY4YmU4ADxNb2R1bGU+AElucHV0SUQAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1z
Y29ybGliAGRlZmF1bHRJbnN0YW5jZQBnZXRfRXJyb3JDb2RlAHNldF9FcnJvck1lc3NhZ2UAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBUb1N0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfY2M1ODc4ZDhhMTc5NGM4
ZTk1ZGY5NGZlMGFhNjhiZTguZGxsAGdldF9FcnJvckNvZGVfSXNOdWxsAHNldF9FcnJvck1lc3Nh
Z2VfSXNOdWxsAGdldF9FcnJvckNvbHVtbl9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0A
cmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBnZXRfRXJyb3JDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBHZXRFcnJvckRlc2NyaXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUlu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGlu
ZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU0NfY2M1ODc4ZDhhMTc5NGM4ZTk1ZGY5NGZlMGFhNjhiZTguUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2NjNTg3OGQ4YTE3
OTRjOGU5NWRmOTRmZTBhYTY4YmU4LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbklu
ZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQ29uY2F0
AE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBv
bmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9j
ZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAAAAByAALQAgAAGAm0kAcwBOAHUAbABs
ACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYA
YQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABj
AG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwBjAGMA
NQA4ADcAOABkADgAYQAxADcAOQA0AGMAOABlADkANQBkAGYAOQA0AGYAZQAwAGEAYQA2ADgAYgBl
ADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAJYfZR0TOqRAnPSi
7Tnro90ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkEBwIOCAMgAA4EIAASbQQgAQ4IBgADDg4O
DgkgAwESPR0IEkEDBhI9AwYdCAQgAQgIBCABAggFIAIBCBwDIAACBiACAg4ReQUgAR0ICAcAARJ9
EYCBBSAAEoCFByACAQ4SgIUIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYSVQMG
EiAFIAEBEgwDIAAIBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAA
AQMoAAgDKAACAygADgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfY2M1ODc4ZDhhMTc5NGM4ZTk1ZGY5NGZlMGFhNjhi
ZTgAAAUBAAAAAAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjUAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC43BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAACwzAAAAAAAAAAAAAEYzAAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAA4MwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBDAF8AYwBjADUAOAA3ADgAZAA4AGEAMQA3ADkANABjADgAZQA5ADUAZABmADkANABm
AGUAMABhAGEANgA4AGIAZQA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBjAGMANQA4
ADcAOABkADgAYQAxADcAOQA0AGMAOABlADkANQBkAGYAOQA0AGYAZQAwAGEAYQA2ADgAYgBlADgA
LgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AEMAXwBjAGMANQA4ADcAOABkADgAYQAxADcAOQA0AGMAOABlADkANQBkAGYAOQA0AGYAZQAwAGEA
YQA2ADgAYgBlADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBD
AF8AYwBjADUAOAA3ADgAZAA4AGEAMQA3ADkANABjADgAZQA5ADUAZABmADkANABmAGUAMABhAGEA
NgA4AGIAZQA4AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAA
LgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAWDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_cc5878d8a1794c8e95df94fe0aa68be8</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">FA</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Script Component.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Script Component.Inputs[Input 0].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Script Component.Outputs[Output 0].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Script Component.Outputs[Output 0].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All"
                  componentClassID="Microsoft.UnionAll"
                  contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                  name="Union All"
                  version="1">
                  <inputs>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4]"
                      hasSideEffects="true"
                      name="Union All Input 4">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Comments"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1]"
                      hasSideEffects="true"
                      name="Union All Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 2]"
                      hasSideEffects="true"
                      name="Union All Input 2">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 2].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 2].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 3]"
                      dangling="true"
                      hasSideEffects="true"
                      name="Union All Input 3">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1]"
                      name="Union All Output 1">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[D of Week]"
                          name="D of Week" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Client Project Name]"
                          name="Client Project Name" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Comments]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Total Hours]"
                          name="Total Hours" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[End Time]"
                          name="End Time" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[ErrorCode]"
                          name="ErrorCode" />
                        <outputColumn
                          refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]"
                          name="ErrorColumn" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Aggregate Output 1]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                  name="Aggregate Output 1"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Outputs[Aggregate Output 1]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Audit Output 1]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Inputs[Data Conversion Input]"
                  name="Audit Output 1"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Outputs[Audit Output 1]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Conditional Split Default Output]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Multicast.Inputs[Multicast Input 1]"
                  name="Conditional Split Default Output"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Outputs[Conditional Split Default Output]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Data Conversion Output]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Inputs[Derived Column Input]"
                  name="Data Conversion Output"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Derived Column Output]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Derived Column Output1]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Script Component.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Excel Source Error Output]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 4]"
                  name="Excel Source Error Output"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Error Output]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Excel Source Output]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit.Inputs[Audit Input 1]"
                  name="Excel Source Output"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Lookup No Match Output]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Multicast Output 1]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate.Inputs[Aggregate Input 1]"
                  name="Multicast Output 1"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Multicast Output 3]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup.Inputs[Lookup Input]"
                  name="Multicast Output 3"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Multicast.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[OLE DB Destination Error Output]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 1]"
                  name="OLE DB Destination Error Output"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination.Outputs[OLE DB Destination Error Output]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[OLE DB Destination Error Output1]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Inputs[Union All Input 2]"
                  name="OLE DB Destination Error Output"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Output 0]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2.Inputs[OLE DB Destination Input]"
                  name="Output 0"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Script Component.Outputs[Output 0]" />
                <path
                  refId="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Union All Output 1]"
                  endId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1.Inputs[Derived Column Input]"
                  name="Union All Output 1"
                  startId="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All.Outputs[Union All Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Timesheet_Staging Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{00CEDE5D-0F96-4FE6-A298-CE05C7AEDFC9}"
          DTS:From="Package\Timesheet_Staging Container\DisplayPathAndName"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Timesheet_Staging Container\ExcelToTimesheetTable" />
      </DTS:PrecedenceConstraints>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Timesheet_Staging Container.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{45133AF7-AC8D-4735-A16F-7D75449A028D}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{D365F205-0B83-475A-84AB-8EB5925D1611}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Timesheet_Staging Container.EventHandlers[OnError]\Execute SQL Task"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1EAEE113-AD0B-45B2-BADB-8496D9CEF234}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Execute SQL Task"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{B8EB1F1B-75C0-45BA-B420-434A64DAB86A}"
                  SQLTask:SqlStatementSource="INSERT INTO ErrorLog (FilePath, ErrorMessage) VALUES (?,?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::FilePath"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="255" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="System::ErrorDescription"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="130"
                    SQLTask:ParameterSize="4000" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\Timesheet_Staging Container.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{1C63C84C-4F36-43DE-87D5-98AF6E5CE0FD}"
          DTS:EventID="0"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{DF24FE4C-48C8-41EA-9266-6D980F864F22}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{53365C5B-BF3E-4E73-B528-0454C300AA77}"
          DTS:ObjectName="{53365C5B-BF3E-4E73-B528-0454C300AA77}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{A15CDE10-BB2D-41C4-929D-BC8C0FEE6AD5}"
      DTS:From="Package\Timesheet_Staging Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Leave_Staging Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{06D150EE-5895-4C2D-A280-6F2A479E586A}"
      DTS:From="Package\Populate Client and Employee Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Timesheet_Staging Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{1031CF0E-EB2F-4E9A-B9B1-0E3D3C22BBAC}"
      DTS:From="Package\Leave_Staging Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Timesheet Table Data Input" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{3EA388A3-E503-40FA-B08E-370EA769328C}"
      DTS:From="Package\Leave_Staging Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Leave Table Data Input" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{1627B95C-3ED4-4936-B335-EEFF0BDE7E52}"
      DTS:From="Package\Leave_Staging Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\AuditLog Data Input" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{FDA5F3B4-CF3F-4602-A9AD-800A9897BBC6}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{95C2D448-02A8-4625-80B7-3113AD97BE62}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="247.2,41.6"
          Id="Package\Populate Client and Employee Table"
          TopLeft="36.4285694382022,279.190474249021" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable"
          TopLeft="56.9904567290874,107.676188904085" />
        <NodeLayout
          Size="210.4,41.6"
          Id="Package\Leave_Staging Container\GetPathAndEmployeeName"
          TopLeft="41.5142670984785,23.114284730213" />
        <EdgeLayout
          Id="Package\Leave_Staging Container.PrecedenceConstraints[Constraint]"
          TopLeft="144.452361913783,64.714284730213">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.9619041738719"
              Start="0,0"
              End="0,35.4619041738719">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.4619041738719" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="276,204"
          Size="276,247.2"
          Id="Package\Leave_Staging Container"
          TopLeft="647.261869397076,174.847619967981" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Timesheet Container\DisplayPathAndName"
          TopLeft="31.1999836087235,34.3333326884773" />
        <NodeLayout
          Size="190.4,41.6"
          Id="Package\Timesheet Container\ExcelToTimesheetTable"
          TopLeft="28.6999837453173,107.133332182235" />
        <EdgeLayout
          Id="Package\Timesheet Container.PrecedenceConstraints[Constraint]"
          TopLeft="122.54998367702,75.9333326884773">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.1999994937577"
              Start="0,0"
              End="0,23.6999994937577">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.6999994937577" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="240.8,204"
          Size="240.8,247.2"
          Id="Package\Timesheet Container"
          TopLeft="96.5476137724893,596.180950546255" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Timesheet_Staging Container\DisplayPathAndName"
          TopLeft="31.1999836087235,15.7619042461921" />
        <NodeLayout
          Size="190.4,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable"
          TopLeft="33.4618882470431,94.7523798873782" />
        <EdgeLayout
          Id="Package\Timesheet_Staging Container.PrecedenceConstraints[Constraint]"
          TopLeft="124.930935927883,57.3619042461921">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.3904756411861"
              Start="0,0"
              End="0,29.8904756411861">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.8904756411861" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="252,191.2"
          Size="252,234.4"
          Id="Package\Timesheet_Staging Container"
          TopLeft="310.83331635015,181.876189211447" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="283.628569438202,299.533331730234">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="27.2047469119474,0"
              Start="0,0"
              End="19.7047469119474,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.7047469119474,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="562.83331635015,298.761904589714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84.428553046926,0"
              Start="0,0"
              End="76.928553046926,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="76.928553046926,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="206.4,41.6"
          Id="Package\Timesheet Table Data Input"
          TopLeft="999.761850137325,201.495237567472" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="923.261869397076,258.580953301315">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="76.499980740249,-36.2857157338427"
              Start="0,0"
              End="68.999980740249,-36.2857157338427">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.8951690706601,0" />
                  <mssgle:CubicBezierSegment
                    Point1="26.8951690706601,0"
                    Point2="30.8951690706601,0"
                    Point3="30.8951690706601,-4" />
                  <mssgle:LineSegment
                    End="30.8951690706601,-32.2857157338427" />
                  <mssgle:CubicBezierSegment
                    Point1="30.8951690706601,-32.2857157338427"
                    Point2="30.8951690706601,-36.2857157338427"
                    Point3="34.8951690706601,-36.2857157338427" />
                  <mssgle:LineSegment
                    End="68.999980740249,-36.2857157338427" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="186.4,41.6"
          Id="Package\Leave Table Data Input"
          TopLeft="1008.33327824043,269.238093731422" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="923.261869397076,338.314286634648">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="85.0714088433557,-48.2761929032254"
              Start="0,0"
              End="77.5714088433557,-48.2761929032254">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.3568133463842,0" />
                  <mssgle:CubicBezierSegment
                    Point1="30.3568133463842,0"
                    Point2="34.3568133463842,0"
                    Point3="34.3568133463842,-4" />
                  <mssgle:LineSegment
                    End="34.3568133463842,-44.2761929032254" />
                  <mssgle:CubicBezierSegment
                    Point1="34.3568133463842,-44.2761929032254"
                    Point2="34.3568133463842,-48.2761929032254"
                    Point3="38.3568133463842,-48.2761929032254" />
                  <mssgle:LineSegment
                    End="77.5714088433557,-48.2761929032254" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\AuditLog Data Input"
          TopLeft="1014.28565886759,349.714283647991" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="923.261869397076,358.247619967981">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="91.023789470513,12.2666636800101"
              Start="0,0"
              End="83.523789470513,12.2666636800101">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.9888888378801,0" />
                  <mssgle:CubicBezierSegment
                    Point1="26.9888888378801,0"
                    Point2="30.9888888378801,0"
                    Point3="30.9888888378801,4" />
                  <mssgle:LineSegment
                    End="30.9888888378801,8.26666368001014" />
                  <mssgle:CubicBezierSegment
                    Point1="30.9888888378801,8.26666368001014"
                    Point2="30.9888888378801,12.2666636800101"
                    Point3="34.9888888378801,12.2666636800101" />
                  <mssgle:LineSegment
                    End="83.523789470513,12.2666636800101" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Populate Client and Employee Table">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Populate Client and Employee Table\Derived Column 1"
          TopLeft="575.999991416931,217.999996751547" />
        <NodeLayout
          Size="120.8,41.6"
          Id="Package\Populate Client and Employee Table\Lookup 1"
          TopLeft="819.999987781048,242.999996379018" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\Populate Client and Employee Table\Data Conversion 1"
          TopLeft="573.999991446733,136.999997958541" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Populate Client and Employee Table\OLE DB Destination 1"
          TopLeft="569.999991506338,302.999995484948" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Populate Client and Employee Table\Excel Source"
          TopLeft="317.999995261431,52.9999992102385" />
        <NodeLayout
          Size="148,41.6"
          Id="Package\Populate Client and Employee Table\Excel Source 1"
          TopLeft="555.999991714954,14.9999997764826" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Populate Client and Employee Table\Lookup"
          TopLeft="142.999997869134,235.999996483326" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Populate Client and Employee Table\Derived Column"
          TopLeft="319.999995231629,219.999996721745" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Populate Client and Employee Table\Data Conversion"
          TopLeft="320.999995216727,145.99999782443" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Populate Client and Employee Table\OLE DB Destination"
          TopLeft="312.999995335937,301.999995499849" />
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[Excel Source Output1]"
          TopLeft="629.999991714954,56.5999997764826">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="25.999999731779,80.3999981820584"
              Start="0,0"
              End="25.999999731779,72.8999981820584">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.1999990910292" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.1999990910292"
                    Point2="0,40.1999990910292"
                    Point3="4,40.1999990910292" />
                  <mssgle:LineSegment
                    End="21.999999731779,40.1999990910292" />
                  <mssgle:CubicBezierSegment
                    Point1="21.999999731779,40.1999990910292"
                    Point2="25.999999731779,40.1999990910292"
                    Point3="25.999999731779,44.1999990910292" />
                  <mssgle:LineSegment
                    End="25.999999731779,72.8999981820584" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[Excel Source Output]"
          TopLeft="387.999995261431,94.5999992102385">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.9999999552966,51.399998614192"
              Start="0,0"
              End="10.9999999552966,43.899998614192">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.699999307096" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.699999307096"
                    Point2="0,25.699999307096"
                    Point3="4,25.699999307096" />
                  <mssgle:LineSegment
                    End="6.99999995529663,25.699999307096" />
                  <mssgle:CubicBezierSegment
                    Point1="6.99999995529663,25.699999307096"
                    Point2="10.9999999552966,25.699999307096"
                    Point3="10.9999999552966,29.699999307096" />
                  <mssgle:LineSegment
                    End="10.9999999552966,43.899998614192" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[Derived Column Output1]"
          TopLeft="737.599991416931,238.799996751547">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="82.3999963641169,24.9999996274709"
              Start="0,0"
              End="74.8999963641169,24.9999996274709">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="37.1999981820584,0" />
                  <mssgle:CubicBezierSegment
                    Point1="37.1999981820584,0"
                    Point2="41.1999981820584,0"
                    Point3="41.1999981820584,4" />
                  <mssgle:LineSegment
                    End="41.1999981820584,20.9999996274709" />
                  <mssgle:CubicBezierSegment
                    Point1="41.1999981820584,20.9999996274709"
                    Point2="41.1999981820584,24.9999996274709"
                    Point3="45.1999981820584,24.9999996274709" />
                  <mssgle:LineSegment
                    End="74.8999963641169,24.9999996274709" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[Derived Column Output]"
          TopLeft="319.999995231629,240.799996721745">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-64.199997362495,15.999999761581"
              Start="0,0"
              End="-56.699997362495,15.999999761581">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-28.0999986812475,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-28.0999986812475,0"
                    Point2="-32.0999986812475,0"
                    Point3="-32.0999986812475,4" />
                  <mssgle:LineSegment
                    End="-32.0999986812475,11.999999761581" />
                  <mssgle:CubicBezierSegment
                    Point1="-32.0999986812475,11.999999761581"
                    Point2="-32.0999986812475,15.999999761581"
                    Point3="-36.0999986812475,15.999999761581" />
                  <mssgle:LineSegment
                    End="-56.699997362495,15.999999761581" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[Data Conversion Output1]"
          TopLeft="656.399991431832,178.599997958541">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.3999987930059"
              Start="0,0"
              End="0,31.8999987930059">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.8999987930059" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[Data Conversion Output]"
          TopLeft="397.699995224178,187.59999782443">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.3999988973142"
              Start="0,0"
              End="0,24.8999988973142">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.8999988973142" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[Lookup No Match Output1]"
          TopLeft="819.999987781048,269.399996379018">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-69.9999962747099,54.3999991059301"
              Start="0,0"
              End="-62.4999962747099,54.3999991059301">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-25.5555539826553,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-25.5555539826553,0"
                    Point2="-29.5555539826553,0"
                    Point3="-29.5555539826553,4" />
                  <mssgle:LineSegment
                    End="-29.5555539826553,50.3999991059301" />
                  <mssgle:CubicBezierSegment
                    Point1="-29.5555539826553,50.3999991059301"
                    Point2="-29.5555539826553,54.3999991059301"
                    Point3="-33.5555539826553,54.3999991059301" />
                  <mssgle:LineSegment
                    End="-62.4999962747099,54.3999991059301" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-85.3619407014053,-17.609375,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[Lookup No Match Output]"
          TopLeft="199.399997869134,277.599996483326">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="199.199997466803,24.3999990165229"
              Start="0,0"
              End="199.199997466803,16.8999990165229">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.19999950826147" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.19999950826147"
                    Point2="0,12.1999995082615"
                    Point3="4,12.1999995082615" />
                  <mssgle:LineSegment
                    End="195.199997466803,12.1999995082615" />
                  <mssgle:CubicBezierSegment
                    Point1="195.199997466803,12.1999995082615"
                    Point2="199.199997466803,12.1999995082615"
                    Point3="199.199997466803,16.1999995082615" />
                  <mssgle:LineSegment
                    End="199.199997466803,16.8999990165229" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="43.7936120146515,17.1999995082615,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="120,41.6"
          Id="Package\Populate Client and Employee Table\Union All"
          TopLeft="1123.9999832511,67.999998986721" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Populate Client and Employee Table\Script Component"
          TopLeft="1322.99998028576,120.99999819696" />
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[Excel Source Error Output]"
          TopLeft="457.999995261431,73.7999992102385">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="665.999987989664,14.9999997764825"
              Start="0,0"
              End="658.499987989664,14.9999997764825">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="328.999993994832,0" />
                  <mssgle:CubicBezierSegment
                    Point1="328.999993994832,0"
                    Point2="332.999993994832,0"
                    Point3="332.999993994832,4" />
                  <mssgle:LineSegment
                    End="332.999993994832,10.9999997764825" />
                  <mssgle:CubicBezierSegment
                    Point1="332.999993994832,10.9999997764825"
                    Point2="332.999993994832,14.9999997764825"
                    Point3="336.999993994832,14.9999997764825" />
                  <mssgle:LineSegment
                    End="658.499987989664,14.9999997764825" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="275.148607276082,-17.609375,115.7027734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[Excel Source Error Output1]"
          TopLeft="703.999991714954,35.7999997764826">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="419.999991536141,47.3999992102384"
              Start="0,0"
              End="412.499991536141,47.3999992102384">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="238.666661776437,0" />
                  <mssgle:CubicBezierSegment
                    Point1="238.666661776437,0"
                    Point2="242.666661776437,0"
                    Point3="242.666661776437,4" />
                  <mssgle:LineSegment
                    End="242.666661776437,43.3999992102384" />
                  <mssgle:CubicBezierSegment
                    Point1="242.666661776437,43.3999992102384"
                    Point2="242.666661776437,47.3999992102384"
                    Point3="246.666661776437,47.3999992102384" />
                  <mssgle:LineSegment
                    End="412.499991536141,47.3999992102384" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="184.815275057687,-17.609375,115.7027734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[OLE DB Destination Error Output]"
          TopLeft="425.799995335937,301.999995499849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="758.199987915158,-192.399996513128"
              Start="0,0"
              End="758.199987915158,-184.899996513128">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-74.0288874747686" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-74.0288874747686"
                    Point2="0,-78.0288874747686"
                    Point3="4,-78.0288874747686" />
                  <mssgle:LineSegment
                    End="754.199987915158,-78.0288874747686" />
                  <mssgle:CubicBezierSegment
                    Point1="754.199987915158,-78.0288874747686"
                    Point2="758.199987915158,-78.0288874747686"
                    Point3="758.199987915158,-82.0288874747686" />
                  <mssgle:LineSegment
                    End="758.199987915158,-184.899996513128" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="305.891087707579,-73.0288874747686,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[OLE DB Destination Error Output1]"
          TopLeft="659.999991506338,302.999995484948">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="542.666658411424,-193.399996498227"
              Start="0,0"
              End="542.666658411424,-185.899996498227">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-110.513155821319" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-110.513155821319"
                    Point2="0,-114.513155821319"
                    Point3="4,-114.513155821319" />
                  <mssgle:LineSegment
                    End="538.666658411424,-114.513155821319" />
                  <mssgle:CubicBezierSegment
                    Point1="538.666658411424,-114.513155821319"
                    Point2="542.666658411424,-114.513155821319"
                    Point3="542.666658411424,-118.513155821319" />
                  <mssgle:LineSegment
                    End="542.666658411424,-185.899996498227" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="198.124422955712,-109.513155821319,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[Union All Output 1]"
          TopLeft="1243.9999832511,88.799998986721">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="78.9999970346687,52.9999992102385"
              Start="0,0"
              End="71.4999970346687,52.9999992102385">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="35.4999985173343,0" />
                  <mssgle:CubicBezierSegment
                    Point1="35.4999985173343,0"
                    Point2="39.4999985173343,0"
                    Point3="39.4999985173343,4" />
                  <mssgle:LineSegment
                    End="39.4999985173343,48.9999992102385" />
                  <mssgle:CubicBezierSegment
                    Point1="39.4999985173343,48.9999992102385"
                    Point2="39.4999985173343,52.9999992102385"
                    Point3="43.4999985173343,52.9999992102385" />
                  <mssgle:LineSegment
                    End="71.4999970346687,52.9999992102385" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="180,41.6"
          Id="Package\Populate Client and Employee Table\OLE DB Destination 2"
          TopLeft="1274.99998100102,224.999996647239" />
        <EdgeLayout
          Id="Package\Populate Client and Employee Table.Paths[Output 0]"
          TopLeft="1403.79998028576,162.59999819696">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-38.7999992847442,62.3999984502793"
              Start="0,0"
              End="-38.7999992847442,54.8999984502793">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.1999992251396" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.1999992251396"
                    Point2="0,31.1999992251396"
                    Point3="-4,31.1999992251396" />
                  <mssgle:LineSegment
                    End="-34.7999992847442,31.1999992251396" />
                  <mssgle:CubicBezierSegment
                    Point1="-34.7999992847442,31.1999992251396"
                    Point2="-38.7999992847442,31.1999992251396"
                    Point3="-38.7999992847442,35.1999992251396" />
                  <mssgle:LineSegment
                    End="-38.7999992847442,54.8999984502793" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populate Client and Employee Table\Lookup 1">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Employee]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate Client and Employee Table\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate Client and Employee Table\Excel Source 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate Client and Employee Table\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Client]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate Client and Employee Table\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Leave_Staging Container\ExcelToLeaveTable">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\Data Conversion"
          TopLeft="341.999980797371,4.3333334065146" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column"
          TopLeft="569.833310901292,11.9333338305024" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source"
          TopLeft="36.3333272950524,10.7999999010563" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup"
          TopLeft="48.8666613105268,138.266665935649" />
        <NodeLayout
          Size="102.4,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\Audit"
          TopLeft="206.999996915459,10.9999998360872" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination"
          TopLeft="36.4999943897127,230.333332064615" />
        <NodeLayout
          Size="119.2,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\Multicast"
          TopLeft="532.999992057681,128.999998316169" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1"
          TopLeft="280.999995812774,230.99999679625" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\Aggregate"
          TopLeft="533.99999204278,223.999996900558" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\Conditional Split"
          TopLeft="246.999990954995,75.1333330468999" />
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Multicast Output 1]"
          TopLeft="611.133325391014,170.599998316169">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13.9333333482342,53.399998584389"
              Start="0,0"
              End="-13.9333333482342,45.899998584389">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.7843702834329" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.7843702834329"
                    Point2="0,21.7843702834329"
                    Point3="-4,21.7843702834329" />
                  <mssgle:LineSegment
                    End="-9.93333334823421,21.7843702834329" />
                  <mssgle:CubicBezierSegment
                    Point1="-9.93333334823421,21.7843702834329"
                    Point2="-13.9333333482342,21.7843702834329"
                    Point3="-13.9333333482342,25.7843702834329" />
                  <mssgle:LineSegment
                    End="-13.9333333482342,45.899998584389" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Excel Source Output]"
          TopLeft="176.333327295052,31.6999998685718">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30.666669620407,0"
              Start="0,0"
              End="23.166669620407,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.166669620407,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Derived Column Output]"
          TopLeft="569.833310901292,38.3333338305024">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-169.233319946297,57.5999992163975"
              Start="0,0"
              End="-161.733319946297,57.5999992163975">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-67.4540684217698,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-67.4540684217698,0"
                    Point2="-71.4540684217698,0"
                    Point3="-71.4540684217698,4" />
                  <mssgle:LineSegment
                    End="-71.4540684217698,53.5999992163975" />
                  <mssgle:CubicBezierSegment
                    Point1="-71.4540684217698,53.5999992163975"
                    Point2="-71.4540684217698,57.5999992163975"
                    Point3="-75.4540684217698,57.5999992163975" />
                  <mssgle:LineSegment
                    End="-161.733319946297,57.5999992163975" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Data Conversion Output]"
          TopLeft="497.999980797371,28.9333336185085">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="71.8333301039208,0"
              Start="0,0"
              End="64.3333301039208,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="64.3333301039208,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Audit Output 1]"
          TopLeft="309.399996915459,28.4666666213009">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32.5999838819114,0"
              Start="0,0"
              End="25.0999838819114,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="25.0999838819114,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Aggregate Output 1]"
          TopLeft="533.99999204278,248.299996848404">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-72.9999962300061,0"
              Start="0,0"
              End="-65.4999962300061,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-65.4999962300061,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Conditional Split Default Output]"
          TopLeft="400.599990954995,101.5333330469">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="132.400001102686,48.2666652692691"
              Start="0,0"
              End="124.900001102686,48.2666652692691">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="51.9022226878008,0" />
                  <mssgle:CubicBezierSegment
                    Point1="51.9022226878008,0"
                    Point2="55.9022226878008,0"
                    Point3="55.9022226878008,4" />
                  <mssgle:LineSegment
                    End="55.9022226878008,44.2666652692691" />
                  <mssgle:CubicBezierSegment
                    Point1="55.9022226878008,44.2666652692691"
                    Point2="55.9022226878008,48.2666652692691"
                    Point3="59.9022226878008,48.2666652692691" />
                  <mssgle:LineSegment
                    End="124.900001102686,48.2666652692691" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-14.7116835621993,-17.658203125,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Multicast Output 2]"
          TopLeft="532.999992057681,157.233332125909">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-371.333330747154,0"
              Start="0,0"
              End="-363.833330747154,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-363.833330747154,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Lookup No Match Output]"
          TopLeft="105.266661310527,179.866665935649">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="16.8333330791858,50.4666661289659"
              Start="0,0"
              End="16.8333330791858,42.9666661289659">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.2333330644829" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.2333330644829"
                    Point2="0,25.2333330644829"
                    Point3="4,25.2333330644829" />
                  <mssgle:LineSegment
                    End="12.8333330791858,25.2333330644829" />
                  <mssgle:CubicBezierSegment
                    Point1="12.8333330791858,25.2333330644829"
                    Point2="16.8333330791858,25.2333330644829"
                    Point3="16.8333330791858,29.2333330644829" />
                  <mssgle:LineSegment
                    End="16.8333330791858,42.9666661289659" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-47.3897201791571,30.2333330644829,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="120,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\Union All"
          TopLeft="895.99998664856,55.999999165535" />
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Excel Source Error Output]"
          TopLeft="176.333327295052,37.1999999010563">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="719.666659353507,39.5999992644787"
              Start="0,0"
              End="712.166659353507,39.5999992644787">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="299.859256171481,0" />
                  <mssgle:CubicBezierSegment
                    Point1="299.859256171481,0"
                    Point2="303.859256171481,0"
                    Point3="303.859256171481,4" />
                  <mssgle:LineSegment
                    End="303.859256171481,35.5999992644787" />
                  <mssgle:CubicBezierSegment
                    Point1="303.859256171481,35.5999992644787"
                    Point2="303.859256171481,39.5999992644787"
                    Point3="307.859256171481,39.5999992644787" />
                  <mssgle:LineSegment
                    End="712.166659353507,39.5999992644787" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="246.007869452731,-17.609375,115.7027734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[OLE DB Destination Error Output]"
          TopLeft="149.299994389713,230.333332064615">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="788.033325592181,-132.73333289908"
              Start="0,0"
              End="788.033325592181,-125.23333289908">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-62.0449861516931" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-62.0449861516931"
                    Point2="0,-66.0449861516931"
                    Point3="4,-66.0449861516931" />
                  <mssgle:LineSegment
                    End="784.033325592181,-66.0449861516931" />
                  <mssgle:CubicBezierSegment
                    Point1="784.033325592181,-66.0449861516931"
                    Point2="788.033325592181,-66.0449861516931"
                    Point3="788.033325592181,-70.0449861516931" />
                  <mssgle:LineSegment
                    End="788.033325592181,-125.23333289908" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="320.80775654609,-61.0449861516931,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[OLE DB Destination Error Output1]"
          TopLeft="370.999995812774,230.99999679625">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="603.666657502453,-133.399997630715"
              Start="0,0"
              End="603.666657502453,-125.899997630715">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-74.9868407023971" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-74.9868407023971"
                    Point2="0,-78.9868407023971"
                    Point3="4,-78.9868407023971" />
                  <mssgle:LineSegment
                    End="599.666657502453,-78.9868407023971" />
                  <mssgle:CubicBezierSegment
                    Point1="599.666657502453,-78.9868407023971"
                    Point2="603.666657502453,-78.9868407023971"
                    Point3="603.666657502453,-82.9868407023971" />
                  <mssgle:LineSegment
                    End="603.666657502453,-125.899997630715" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="228.624422501226,-73.9868407023971,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\Derived Column 1"
          TopLeft="1064.99998413026,53.9999991953373" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\Script Component"
          TopLeft="1052.99998430908,130.999998047948" />
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Union All Output 1]"
          TopLeft="1015.99998664856,75.7999991804361">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48.9999974817034,0"
              Start="0,0"
              End="41.4999974817034,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.4999974817034,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Derived Column Output1]"
          TopLeft="1145.79998413026,95.5999991953373">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.9999998211858,35.3999988526106"
              Start="0,0"
              End="-11.9999998211858,27.8999988526106">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.6999994263053" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.6999994263053"
                    Point2="0,17.6999994263053"
                    Point3="-4,17.6999994263053" />
                  <mssgle:LineSegment
                    End="-7.99999982118584,17.6999994263053" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.99999982118584,17.6999994263053"
                    Point2="-11.9999998211858,17.6999994263053"
                    Point3="-11.9999998211858,21.6999994263053" />
                  <mssgle:LineSegment
                    End="-11.9999998211858,27.8999988526106" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="180,41.6"
          Id="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2"
          TopLeft="1003.99998503923,215.999996781349" />
        <EdgeLayout
          Id="Package\Leave_Staging Container\ExcelToLeaveTable.Paths[Output 0]"
          TopLeft="1133.79998430908,172.599998047948">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-39.7999992698431,43.3999987334013"
              Start="0,0"
              End="-39.7999992698431,35.8999987334013">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.6999993667007" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.6999993667007"
                    Point2="0,21.6999993667007"
                    Point3="-4,21.6999993667007" />
                  <mssgle:LineSegment
                    End="-35.7999992698431,21.6999993667007" />
                  <mssgle:CubicBezierSegment
                    Point1="-35.7999992698431,21.6999993667007"
                    Point2="-39.7999992698431,21.6999993667007"
                    Point3="-39.7999992698431,25.6999993667007" />
                  <mssgle:LineSegment
                    End="-39.7999992698431,35.8999987334013" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Leave_Staging Container\ExcelToLeaveTable\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Leave_Staging Container\ExcelToLeaveTable\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Leave_Staging]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package\Timesheet Container.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Timesheet Container.EventHandlers[OnError]\Execute SQL Task"
          TopLeft="338.999994948506,103.999998450279" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Timesheet Container\ExcelToTimesheetTable">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Timesheet Container\ExcelToTimesheetTable\Lookup"
          TopLeft="601.499982195596,95.1999975895881" />
        <NodeLayout
          Size="156,44.8"
          Id="Package\Timesheet Container\ExcelToTimesheetTable\Data Conversion"
          TopLeft="115.499993609885,83.4000004365046" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Timesheet Container\ExcelToTimesheetTable\Excel Source"
          TopLeft="70.3333297686438,17.800000210007" />
        <NodeLayout
          Size="119.2,41.6"
          Id="Package\Timesheet Container\ExcelToTimesheetTable\Multicast"
          TopLeft="443.666661380066,234.866664103601" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination 1"
          TopLeft="661.633335671987,303.599996075233" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination"
          TopLeft="363.333313481676,363.533331350552" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Timesheet Container\ExcelToTimesheetTable\Conditional Split"
          TopLeft="290.833318038948,137.799999041756" />
        <NodeLayout
          Size="102.4,41.6"
          Id="Package\Timesheet Container\ExcelToTimesheetTable\Audit"
          TopLeft="288.500003151596,14.1333330125279" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Timesheet Container\ExcelToTimesheetTable\Derived Column"
          TopLeft="94.6666614148361,186.066667245163" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\Timesheet Container\ExcelToTimesheetTable\Aggregate"
          TopLeft="622.666658514076,231.133329985606" />
        <EdgeLayout
          Id="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Multicast Output 1]"
          TopLeft="562.866661380066,253.799997044603">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.79999713401,0"
              Start="0,0"
              End="52.29999713401,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="52.29999713401,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Excel Source Output]"
          TopLeft="210.333329768644,36.7666666112675">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="78.1666733829516,0"
              Start="0,0"
              End="70.6666733829516,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="70.6666733829516,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Derived Column Output]"
          TopLeft="247.466661414836,206.866667245163">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="43.3666566241114,-48.2666682034072"
              Start="0,0"
              End="35.8666566241114,-48.2666682034072">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.6833283120557,0" />
                  <mssgle:CubicBezierSegment
                    Point1="17.6833283120557,0"
                    Point2="21.6833283120557,0"
                    Point3="21.6833283120557,-4" />
                  <mssgle:LineSegment
                    End="21.6833283120557,-44.2666682034072" />
                  <mssgle:CubicBezierSegment
                    Point1="21.6833283120557,-44.2666682034072"
                    Point2="21.6833283120557,-48.2666682034072"
                    Point3="25.6833283120557,-48.2666682034072" />
                  <mssgle:LineSegment
                    End="35.8666566241114,-48.2666682034072" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Data Conversion Output]"
          TopLeft="193.499993609886,128.200000436505">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.4333321950492,57.8666668086585"
              Start="0,0"
              End="-22.4333321950492,50.3666668086585">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.9333334043293" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.9333334043293"
                    Point2="0,28.9333334043293"
                    Point3="-4,28.9333334043293" />
                  <mssgle:LineSegment
                    End="-18.4333321950492,28.9333334043293" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.4333321950492,28.9333334043293"
                    Point2="-22.4333321950492,28.9333334043293"
                    Point3="-22.4333321950492,32.9333334043293" />
                  <mssgle:LineSegment
                    End="-22.4333321950492,50.3666668086585" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Conditional Split Default Output]"
          TopLeft="444.433318038948,158.599999041756">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="157.066664156648,-42.6000014521679"
              Start="0,0"
              End="149.566664156648,-42.6000014521679">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="74.5333320783242,0" />
                  <mssgle:CubicBezierSegment
                    Point1="74.5333320783242,0"
                    Point2="78.5333320783242,0"
                    Point3="78.5333320783242,-4" />
                  <mssgle:LineSegment
                    End="78.5333320783242,-38.6000014521679" />
                  <mssgle:CubicBezierSegment
                    Point1="78.5333320783242,-38.6000014521679"
                    Point2="78.5333320783242,-42.6000014521679"
                    Point3="82.5333320783242,-42.6000014521679" />
                  <mssgle:LineSegment
                    End="149.566664156648,-42.6000014521679" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="7.91942582832418,1,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Audit Output 1]"
          TopLeft="339.700003151596,55.7333330125279">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-146.20000954171,27.6666674239767"
              Start="0,0"
              End="-146.20000954171,20.1666674239767">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.83333371198837" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.83333371198837"
                    Point2="0,13.8333337119884"
                    Point3="-4,13.8333337119884" />
                  <mssgle:LineSegment
                    End="-142.20000954171,13.8333337119884" />
                  <mssgle:CubicBezierSegment
                    Point1="-142.20000954171,13.8333337119884"
                    Point2="-146.20000954171,13.8333337119884"
                    Point3="-146.20000954171,17.8333337119884" />
                  <mssgle:LineSegment
                    End="-146.20000954171,20.1666674239767" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Aggregate Output 1]"
          TopLeft="685.866658514076,272.733329985606">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.7666771579107,30.8666660896276"
              Start="0,0"
              End="65.7666771579107,23.3666660896276">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.4333330448138" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.4333330448138"
                    Point2="0,15.4333330448138"
                    Point3="4,15.4333330448138" />
                  <mssgle:LineSegment
                    End="61.7666771579107,15.4333330448138" />
                  <mssgle:CubicBezierSegment
                    Point1="61.7666771579107,15.4333330448138"
                    Point2="65.7666771579107,15.4333330448138"
                    Point3="65.7666771579107,19.4333330448138" />
                  <mssgle:LineSegment
                    End="65.7666771579107,23.3666660896276" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Lookup Match Output]"
          TopLeft="657.899982195596,136.799997589588">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-154.63332081553,98.0666665140129"
              Start="0,0"
              End="-154.63332081553,90.5666665140129">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.0333332570065" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.0333332570065"
                    Point2="0,49.0333332570065"
                    Point3="-4,49.0333332570065" />
                  <mssgle:LineSegment
                    End="-150.63332081553,49.0333332570065" />
                  <mssgle:CubicBezierSegment
                    Point1="-150.63332081553,49.0333332570065"
                    Point2="-154.63332081553,49.0333332570065"
                    Point3="-154.63332081553,53.0333332570065" />
                  <mssgle:LineSegment
                    End="-154.63332081553,90.5666665140129" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-125.508047126515,54.0333332570065,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="143.2,41.6"
          Id="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup"
          TopLeft="221.666654555335,271.866664798392" />
        <EdgeLayout
          Id="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Multicast Output 2]"
          TopLeft="443.666661380066,255.666664103601">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-78.8000068247314,37.0000006947911"
              Start="0,0"
              End="-71.3000068247314,37.0000006947911">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-35.4000034123657,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-35.4000034123657,0"
                    Point2="-39.4000034123657,0"
                    Point3="-39.4000034123657,4" />
                  <mssgle:LineSegment
                    End="-39.4000034123657,33.0000006947911" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.4000034123657,33.0000006947911"
                    Point2="-39.4000034123657,37.0000006947911"
                    Point3="-43.4000034123657,37.0000006947911" />
                  <mssgle:LineSegment
                    End="-71.3000068247314,37.0000006947911" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet Container\ExcelToTimesheetTable.Paths[Fuzzy Lookup Output]"
          TopLeft="293.266654555335,313.466664798392">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="155.666658926341,50.0666665521598"
              Start="0,0"
              End="155.666658926341,42.5666665521598">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.0333332760799" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.0333332760799"
                    Point2="0,25.0333332760799"
                    Point3="4,25.0333332760799" />
                  <mssgle:LineSegment
                    End="151.666658926341,25.0333332760799" />
                  <mssgle:CubicBezierSegment
                    Point1="151.666658926341,25.0333332760799"
                    Point2="155.666658926341,25.0333332760799"
                    Point3="155.666658926341,29.0333332760799" />
                  <mssgle:LineSegment
                    End="155.666658926341,42.5666665521598" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Timesheet Container\ExcelToTimesheetTable.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Timesheet Container\ExcelToTimesheetTable.EventHandlers[OnError]\Execute SQL Task"
          TopLeft="549.999991804361,123.999998152256" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet Container\ExcelToTimesheetTable\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Timesheet_Staging]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet Container\ExcelToTimesheetTable\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package\Timesheet_Staging Container.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Timesheet_Staging Container.EventHandlers[OnError]\Execute SQL Task"
          TopLeft="338.999994948506,103.999998450279" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Timesheet_Staging Container\ExcelToTimesheetTable">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination"
          TopLeft="92.6666584644057,299.266664799386" />
        <NodeLayout
          Size="156,44.8"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Data Conversion"
          TopLeft="79.6666616383526,83.4000004365046" />
        <NodeLayout
          Size="119.2,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Multicast"
          TopLeft="407.833329408533,234.866664103601" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source"
          TopLeft="34.4999977971111,17.800000210007" />
        <NodeLayout
          Size="102.4,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Audit"
          TopLeft="252.666671180063,14.1333330125279" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column"
          TopLeft="58.8333294433034,186.066667245163" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Aggregate"
          TopLeft="585.833326557444,230.133330000507" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup"
          TopLeft="234.666655156347,237.199995473623" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Conditional Split"
          TopLeft="254.999986067415,137.799999041756" />
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Multicast Output 1]"
          TopLeft="527.033329408533,253.299997052054">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="58.799997148911,0"
              Start="0,0"
              End="51.299997148911,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="51.299997148911,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Excel Source Output]"
          TopLeft="174.499997797111,36.7666666112675">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="78.1666733829516,0"
              Start="0,0"
              End="70.6666733829516,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="70.6666733829516,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Derived Column Output]"
          TopLeft="211.633329443303,206.866667245163">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="43.3666566241114,-48.2666682034072"
              Start="0,0"
              End="35.8666566241114,-48.2666682034072">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.6833283120557,0" />
                  <mssgle:CubicBezierSegment
                    Point1="17.6833283120557,0"
                    Point2="21.6833283120557,0"
                    Point3="21.6833283120557,-4" />
                  <mssgle:LineSegment
                    End="21.6833283120557,-44.2666682034072" />
                  <mssgle:CubicBezierSegment
                    Point1="21.6833283120557,-44.2666682034072"
                    Point2="21.6833283120557,-48.2666682034072"
                    Point3="25.6833283120557,-48.2666682034072" />
                  <mssgle:LineSegment
                    End="35.8666566241114,-48.2666682034072" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Data Conversion Output]"
          TopLeft="157.666661638353,128.200000436505">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.4333321950492,57.8666668086585"
              Start="0,0"
              End="-22.4333321950492,50.3666668086585">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.9333334043293" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.9333334043293"
                    Point2="0,28.9333334043293"
                    Point3="-4,28.9333334043293" />
                  <mssgle:LineSegment
                    End="-18.4333321950492,28.9333334043293" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.4333321950492,28.9333334043293"
                    Point2="-22.4333321950492,28.9333334043293"
                    Point3="-22.4333321950492,32.9333334043293" />
                  <mssgle:LineSegment
                    End="-22.4333321950492,50.3666668086585" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Audit Output 1]"
          TopLeft="303.866671180063,55.7333330125279">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-146.20000954171,27.6666674239767"
              Start="0,0"
              End="-146.20000954171,20.1666674239767">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.83333371198837" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.83333371198837"
                    Point2="0,13.8333337119884"
                    Point3="-4,13.8333337119884" />
                  <mssgle:LineSegment
                    End="-142.20000954171,13.8333337119884" />
                  <mssgle:CubicBezierSegment
                    Point1="-142.20000954171,13.8333337119884"
                    Point2="-146.20000954171,13.8333337119884"
                    Point3="-146.20000954171,17.8333337119884" />
                  <mssgle:LineSegment
                    End="-146.20000954171,20.1666674239767" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="180,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1"
          TopLeft="475.999992907047,303.999995470047" />
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Aggregate Output 1]"
          TopLeft="649.033326557444,271.733330000507">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-83.0333336503967,32.2666654695398"
              Start="0,0"
              End="-83.0333336503967,24.7666654695398">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.1333327347699" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.1333327347699"
                    Point2="0,16.1333327347699"
                    Point3="-4,16.1333327347699" />
                  <mssgle:LineSegment
                    End="-79.0333336503967,16.1333327347699" />
                  <mssgle:CubicBezierSegment
                    Point1="-79.0333336503967,16.1333327347699"
                    Point2="-83.0333336503967,16.1333327347699"
                    Point3="-83.0333336503967,20.1333327347699" />
                  <mssgle:LineSegment
                    End="-83.0333336503967,24.7666654695398" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Conditional Split Default Output]"
          TopLeft="331.799986067415,179.399999041756">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="135.633343341118,55.466665061845"
              Start="0,0"
              End="135.633343341118,47.966665061845">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.7333325309225" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.7333325309225"
                    Point2="0,27.7333325309225"
                    Point3="4,27.7333325309225" />
                  <mssgle:LineSegment
                    End="131.633343341118,27.7333325309225" />
                  <mssgle:CubicBezierSegment
                    Point1="131.633343341118,27.7333325309225"
                    Point2="135.633343341118,27.7333325309225"
                    Point3="135.633343341118,31.7333325309225" />
                  <mssgle:LineSegment
                    End="135.633343341118,47.966665061845" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-2.79723457944098,32.7333325309225,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Multicast Output 3]"
          TopLeft="407.833329408533,256.833329788612">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-60.3666742521858,0"
              Start="0,0"
              End="-52.8666742521858,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-52.8666742521858,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Lookup No Match Output]"
          TopLeft="234.666655156347,257.999995473623">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-56.3999966919416,41.2666693257628"
              Start="0,0"
              End="-56.3999966919416,33.7666693257628">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-52.3999966919416,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-52.3999966919416,0"
                    Point2="-56.3999966919416,0"
                    Point3="-56.3999966919416,4" />
                  <mssgle:LineSegment
                    End="-56.3999966919416,33.7666693257628" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-112.206383410692,-17.609375,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="120,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Union All"
          TopLeft="755.999988734722,52.9999992102385" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Script Component"
          TopLeft="901.999986559153,150.999997749925" />
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Excel Source Error Output]"
          TopLeft="174.499997797111,44.200000210007">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="581.499990937611,29.5999990002315"
              Start="0,0"
              End="573.999990937611,29.5999990002315">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="241.52221839588,0" />
                  <mssgle:CubicBezierSegment
                    Point1="241.52221839588,0"
                    Point2="245.52221839588,0"
                    Point3="245.52221839588,4" />
                  <mssgle:LineSegment
                    End="245.52221839588,25.5999990002315" />
                  <mssgle:CubicBezierSegment
                    Point1="245.52221839588,25.5999990002315"
                    Point2="245.52221839588,29.5999990002315"
                    Point3="249.52221839588,29.5999990002315" />
                  <mssgle:LineSegment
                    End="573.999990937611,29.5999990002315" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="187.67083167713,-17.609375,115.7027734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[OLE DB Destination Error Output]"
          TopLeft="205.466658464406,299.266664799386">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="591.86666360365,-204.666665589148"
              Start="0,0"
              End="591.86666360365,-197.166665589148">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-97.837321487481" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-97.837321487481"
                    Point2="0,-101.837321487481"
                    Point3="4,-101.837321487481" />
                  <mssgle:LineSegment
                    End="587.86666360365,-101.837321487481" />
                  <mssgle:CubicBezierSegment
                    Point1="587.86666360365,-101.837321487481"
                    Point2="591.86666360365,-101.837321487481"
                    Point3="591.86666360365,-105.837321487481" />
                  <mssgle:LineSegment
                    End="591.86666360365,-197.166665589148" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="222.724425551825,-96.837321487481,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[OLE DB Destination Error Output1]"
          TopLeft="594.666659573714,303.999995470047">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="221.333329161008,-209.399996259809"
              Start="0,0"
              End="221.333329161008,-201.899996259809">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-80.8669588365744" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-80.8669588365744"
                    Point2="0,-84.8669588365744"
                    Point3="4,-84.8669588365744" />
                  <mssgle:LineSegment
                    End="217.333329161008,-84.8669588365744" />
                  <mssgle:CubicBezierSegment
                    Point1="217.333329161008,-84.8669588365744"
                    Point2="221.333329161008,-84.8669588365744"
                    Point3="221.333329161008,-88.8669588365744" />
                  <mssgle:LineSegment
                    End="221.333329161008,-201.899996259809" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="37.4577583305042,-79.8669588365744,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="180,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2"
          TopLeft="901.999986559153,273.999995917082" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Derived Column 1"
          TopLeft="942.999985948205,79.9999988079071" />
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Union All Output 1]"
          TopLeft="875.999988734722,73.7999992102385">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="66.9999972134829,26.9999995976686"
              Start="0,0"
              End="59.4999972134829,26.9999995976686">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.4999986067414,0" />
                  <mssgle:CubicBezierSegment
                    Point1="29.4999986067414,0"
                    Point2="33.4999986067414,0"
                    Point3="33.4999986067414,4" />
                  <mssgle:LineSegment
                    End="33.4999986067414,22.9999995976686" />
                  <mssgle:CubicBezierSegment
                    Point1="33.4999986067414,22.9999995976686"
                    Point2="33.4999986067414,26.9999995976686"
                    Point3="37.4999986067414,26.9999995976686" />
                  <mssgle:LineSegment
                    End="59.4999972134829,26.9999995976686" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Derived Column Output1]"
          TopLeft="1023.79998594821,121.599998807907">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-40.9999993890524,29.3999989420176"
              Start="0,0"
              End="-40.9999993890524,21.8999989420176">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.6999994710088" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.6999994710088"
                    Point2="0,14.6999994710088"
                    Point3="-4,14.6999994710088" />
                  <mssgle:LineSegment
                    End="-36.9999993890524,14.6999994710088" />
                  <mssgle:CubicBezierSegment
                    Point1="-36.9999993890524,14.6999994710088"
                    Point2="-40.9999993890524,14.6999994710088"
                    Point3="-40.9999993890524,18.6999994710088" />
                  <mssgle:LineSegment
                    End="-40.9999993890524,21.8999989420176" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.Paths[Output 0]"
          TopLeft="982.799986559153,192.599997749925">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9.20000000000005,81.3999981671572"
              Start="0,0"
              End="9.20000000000005,73.8999981671572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.6999990835786" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.6999990835786"
                    Point2="0,40.6999990835786"
                    Point3="4,40.6999990835786" />
                  <mssgle:LineSegment
                    End="5.20000000000005,40.6999990835786" />
                  <mssgle:CubicBezierSegment
                    Point1="5.20000000000005,40.6999990835786"
                    Point2="9.20000000000005,40.6999990835786"
                    Point3="9.20000000000005,44.6999990835786" />
                  <mssgle:LineSegment
                    End="9.20000000000005,73.8999981671572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Timesheet_Staging Container\ExcelToTimesheetTable.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Timesheet_Staging Container\ExcelToTimesheetTable.EventHandlers[OnError]\Execute SQL Task"
          TopLeft="549.999991804361,123.999998152256" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet_Staging Container\ExcelToTimesheetTable\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Timesheet_Staging]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet Container\ExcelToTimesheetTable\Fuzzy Lookup">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Timesheet Table Data Input">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="152,41.6"
          Id="Package\Timesheet Table Data Input\OLE DB Source"
          TopLeft="345.999994844198,53.9999991953373" />
        <NodeLayout
          Size="192,41.6"
          Id="Package\Timesheet Table Data Input\Fuzzy Lookup Employee"
          TopLeft="317.999995261431,150.999997749925" />
        <EdgeLayout
          Id="Package\Timesheet Table Data Input.Paths[OLE DB Source Output]"
          TopLeft="417.999995052814,95.5999991953373">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55.3999985545874"
              Start="0,0"
              End="0,47.8999985545874">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.8999985545874" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\Timesheet Table Data Input\Fuzzy Lookup Client"
          TopLeft="312.999995335936,238.999996438623" />
        <EdgeLayout
          Id="Package\Timesheet Table Data Input.Paths[Fuzzy Lookup Output]"
          TopLeft="413.999995261431,192.599997749925">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14.5999999254941,46.3999986886978"
              Start="0,0"
              End="-14.5999999254941,38.8999986886978">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.1999993443489" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.1999993443489"
                    Point2="0,23.1999993443489"
                    Point3="-4,23.1999993443489" />
                  <mssgle:LineSegment
                    End="-10.5999999254941,23.1999993443489" />
                  <mssgle:CubicBezierSegment
                    Point1="-10.5999999254941,23.1999993443489"
                    Point2="-14.5999999254941,23.1999993443489"
                    Point3="-14.5999999254941,27.1999993443489" />
                  <mssgle:LineSegment
                    End="-14.5999999254941,38.8999986886978" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Timesheet Table Data Input\OLE DB Destination"
          TopLeft="280.999995812774,320.999995216727" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Timesheet Table Data Input\Lookup"
          TopLeft="610.999990895391,249.599996364117" />
        <EdgeLayout
          Id="Package\Timesheet Table Data Input.Paths[Fuzzy Lookup Output1]"
          TopLeft="485.799995335936,259.799996438623">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="125.199995559454,10.5999999254942"
              Start="0,0"
              End="117.699995559454,10.5999999254942">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="58.599997779727,0" />
                  <mssgle:CubicBezierSegment
                    Point1="58.599997779727,0"
                    Point2="62.599997779727,0"
                    Point3="62.599997779727,4" />
                  <mssgle:LineSegment
                    End="62.599997779727,6.59999992549416" />
                  <mssgle:CubicBezierSegment
                    Point1="62.599997779727,6.59999992549416"
                    Point2="62.599997779727,10.5999999254942"
                    Point3="66.599997779727,10.5999999254942" />
                  <mssgle:LineSegment
                    End="117.699995559454,10.5999999254942" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Timesheet Table Data Input.Paths[Lookup No Match Output]"
          TopLeft="667.39999089539,291.199996364117">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-300.799995082617,29.7999988526106"
              Start="0,0"
              End="-300.799995082617,22.2999988526106">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.8999994263053" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.8999994263053"
                    Point2="0,14.8999994263053"
                    Point3="-4,14.8999994263053" />
                  <mssgle:LineSegment
                    End="-296.799995082617,14.8999994263053" />
                  <mssgle:CubicBezierSegment
                    Point1="-296.799995082617,14.8999994263053"
                    Point2="-300.799995082617,14.8999994263053"
                    Point3="-300.799995082617,18.8999994263053" />
                  <mssgle:LineSegment
                    End="-300.799995082617,22.2999988526106" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-206.206384260058,19.8999994263053,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet Table Data Input\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet Table Data Input\Fuzzy Lookup Employee">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet Table Data Input\Fuzzy Lookup Client">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet Table Data Input\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet Table Data Input\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Timesheet]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Leave Table Data Input">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="152,41.6"
          Id="Package\Leave Table Data Input\OLE DB Source"
          TopLeft="295.999995589256,30.999999538064" />
        <NodeLayout
          Size="143.2,41.6"
          Id="Package\Leave Table Data Input\Fuzzy Lookup"
          TopLeft="303.999995470047,109.999998360872" />
        <EdgeLayout
          Id="Package\Leave Table Data Input.Paths[OLE DB Source Output]"
          TopLeft="373.799995529652,72.599999538064">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.3999988228083"
              Start="0,0"
              End="0,29.8999988228083">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.8999988228083" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Leave Table Data Input\Lookup"
          TopLeft="317.999995261431,185.999997228384" />
        <EdgeLayout
          Id="Package\Leave Table Data Input.Paths[Fuzzy Lookup Output]"
          TopLeft="374.999995365739,151.599998360872">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.3999988675118"
              Start="0,0"
              End="0,26.8999988675118">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.8999988675118" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Leave Table Data Input\OLE DB Destination"
          TopLeft="289.999995678663,269.999995976687" />
        <EdgeLayout
          Id="Package\Leave Table Data Input.Paths[Lookup No Match Output]"
          TopLeft="374.999995470047,227.599997228384">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.3999987483025"
              Start="0,0"
              End="0,34.8999987483025">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.8999987483025" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,11.6453118741512,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Leave Table Data Input\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Leave Table Data Input\Fuzzy Lookup">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Leave Table Data Input\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Leave]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Leave Table Data Input\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\AuditLog Data Input">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="152,41.6"
          Id="Package\AuditLog Data Input\OLE DB Source"
          TopLeft="222.999996677041,33.9999994933605" />
        <NodeLayout
          Size="143.2,41.6"
          Id="Package\AuditLog Data Input\Fuzzy Lookup"
          TopLeft="204.999996945262,128.99999807775" />
        <EdgeLayout
          Id="Package\AuditLog Data Input.Paths[OLE DB Source Output]"
          TopLeft="298.999996677041,75.5999994933605">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.3999997317791,53.3999985843897"
              Start="0,0"
              End="-22.3999997317791,45.8999985843897">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.6999992921948" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.6999992921948"
                    Point2="0,26.6999992921948"
                    Point3="-4,26.6999992921948" />
                  <mssgle:LineSegment
                    End="-18.3999997317791,26.6999992921948" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.3999997317791,26.6999992921948"
                    Point2="-22.3999997317791,26.6999992921948"
                    Point3="-22.3999997317791,30.6999992921948" />
                  <mssgle:LineSegment
                    End="-22.3999997317791,45.8999985843897" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\AuditLog Data Input\Lookup"
          TopLeft="203.999996960163,206.99999691546" />
        <EdgeLayout
          Id="Package\AuditLog Data Input.Paths[Fuzzy Lookup Output]"
          TopLeft="276.599996945262,170.59999807775">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-16.1999999850988,36.3999988377095"
              Start="0,0"
              End="-16.1999999850988,28.8999988377095">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.1999994188548" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.1999994188548"
                    Point2="0,18.1999994188548"
                    Point3="-4,18.1999994188548" />
                  <mssgle:LineSegment
                    End="-12.1999999850988,18.1999994188548" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.1999999850988,18.1999994188548"
                    Point2="-16.1999999850988,18.1999994188548"
                    Point3="-16.1999999850988,22.1999994188548" />
                  <mssgle:LineSegment
                    End="-16.1999999850988,28.8999988377095" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\AuditLog Data Input\OLE DB Destination"
          TopLeft="191.999997138977,283.99999576807" />
        <EdgeLayout
          Id="Package\AuditLog Data Input.Paths[Lookup No Match Output]"
          TopLeft="260.399996960163,248.59999691546">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="17.2000001788139,35.3999988526105"
              Start="0,0"
              End="17.2000001788139,27.8999988526105">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.6999994263053" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.6999994263053"
                    Point2="0,17.6999994263053"
                    Point3="4,17.6999994263053" />
                  <mssgle:LineSegment
                    End="13.2000001788139,17.6999994263053" />
                  <mssgle:CubicBezierSegment
                    Point1="13.2000001788139,17.6999994263053"
                    Point2="17.2000001788139,17.6999994263053"
                    Point3="17.2000001788139,21.6999994263053" />
                  <mssgle:LineSegment
                    End="17.2000001788139,27.8999988526105" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-47.2063866293431,22.6999994263053,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\AuditLog Data Input\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\AuditLog Data Input\Fuzzy Lookup">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\AuditLog Data Input\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[AuditLog]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\AuditLog Data Input\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populate Client and Employee Table\OLE DB Destination 2">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Timesheet_Staging Container\ExcelToTimesheetTable\OLE DB Destination 2">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Leave_Staging Container\ExcelToLeaveTable\OLE DB Destination 2">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>