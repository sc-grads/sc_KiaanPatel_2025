name: SQL Server Deployment Template

on:
  workflow_call:
    inputs:
      environment-type:
        description: Type of environment (development/production)
        required: true
        type: string
      sql-server-url:
        description: SQL Server connection URL
        required: true
        type: string
      sql-password:
        description: SQL Server password
        required: true
        type: string
      sql-script-path:
        description: Path to SQL script
        required: true
        type: string
    secrets:
      SQL_PASSWORD:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SQL Server Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          echo "/opt/mssql-tools/bin" >> $GITHUB_PATH

      - name: Test Database Connection
        env:
          SQL_PASSWORD: ${{ inputs.sql-password }}
        run: |
          if ! sqlcmd -S "${{ inputs.sql-server-url }}" -U Auto_user -P "$SQL_PASSWORD" -C -Q "SELECT @@VERSION"; then
            echo "::error::Connection failed"
            exit 1
          fi

      - name: Execute SQL Script
        env:
          SQL_PASSWORD: ${{ inputs.sql-password }}
        run: |
          if ! sqlcmd -S "${{ inputs.sql-server-url }}" -U Auto_user -P "$SQL_PASSWORD" -C -i "${{ inputs.sql-script-path }}"; then
            echo "::error::Script execution failed"
            exit 1
          fi

      - name: Verify Deployment
        env:
          SQL_PASSWORD: ${{ inputs.sql-password }}
        run: |
          if ! sqlcmd -S "${{ inputs.sql-server-url }}" -U Auto_user -P "$SQL_PASSWORD" -C -Q "SELECT * FROM [dbo].[user]"; then
            echo "::error::Verification failed"
            exit 1
          fi
