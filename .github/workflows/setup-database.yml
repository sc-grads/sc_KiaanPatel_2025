name: Setup SQL Server Database

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  setup-database:
    runs-on: self-hosted  # Use your self-hosted runner

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install sqlcmd (if not already installed on your machine)
      - name: Install sqlcmd (Windows)
        run: |
          where sqlcmd || (
            echo "Installing sqlcmd..."
            curl -o msodbcsql.msi https://go.microsoft.com/fwlink/?linkid=2230310
            msiexec /i msodbcsql.msi /quiet /qn /norestart IACCEPTMSODBCSSQLLICENSETERMS=YES
            set "PATH=%PATH%;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn"
          )
        shell: cmd
        if: runner.os == 'Windows'

      # Execute SQL scripts using the pre-provided Pinggy URL
      - name: Create Database
        run: |
          sqlcmd -S "${{ secrets.PINGGY_URL }}" -U Auto_user -P ${{ secrets.SQL_PASSWORD }} -i sql_scripts/create_database.sql
        shell: cmd

      - name: Create User
        run: |
          sqlcmd -S "${{ secrets.PINGGY_URL }}" -U Auto_user -P ${{ secrets.SQL_PASSWORD }} -i sql_scripts/create_user.sql
        shell: cmd

      - name: Create Table and Stored Procedure
        run: |
          sqlcmd -S "${{ secrets.PINGGY_URL }}" -U Auto_user -P ${{ secrets.SQL_PASSWORD }} -i sql_scripts/create_table_and_procedure.sql
        shell: cmd

      - name: Insert Data
        run: |
          sqlcmd -S "${{ secrets.PINGGY_URL }}" -U Auto_user -P ${{ secrets.SQL_PASSWORD }} -i sql_scripts/insert_data.sql
        shell: cmd

      # Test the setup
      - name: Test Connection and Data
        run: |
          sqlcmd -S "${{ secrets.PINGGY_URL }}" -U Auto_user -P ${{ secrets.SQL_PASSWORD }} -d AutoTest -Q "SELECT * FROM [dbo].[user];"
        shell: cmd
